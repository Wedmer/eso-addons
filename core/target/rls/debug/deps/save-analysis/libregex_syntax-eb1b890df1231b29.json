{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.1","compilation":{"directory":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27","program":"/Users/lsales/.rustup/toolchains/stable-x86_64-apple-darwin/bin/rls","arguments":["--crate-name","regex_syntax","--edition=2018","/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","--json=diagnostic-rendered-ansi,artifacts,future-incompat","--crate-type","lib","--emit=dep-info,metadata,link","-C","embed-bitcode=no","-C","split-debuginfo=unpacked","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"unicode\"","--cfg","feature=\"unicode-age\"","--cfg","feature=\"unicode-bool\"","--cfg","feature=\"unicode-case\"","--cfg","feature=\"unicode-gencat\"","--cfg","feature=\"unicode-perl\"","--cfg","feature=\"unicode-script\"","--cfg","feature=\"unicode-segment\"","-C","metadata=eb1b890df1231b29","-C","extra-filename=-eb1b890df1231b29","--out-dir","/Users/lsales/git/eso-addons/core/target/rls/debug/deps","-L","dependency=/Users/lsales/git/eso-addons/core/target/rls/debug/deps","--cap-lints","allow","--error-format=json","--sysroot","/Users/lsales/.rustup/toolchains/stable-x86_64-apple-darwin"],"output":"/Users/lsales/git/eso-addons/core/target/rls/debug/deps/libregex_syntax-eb1b890df1231b29.rmeta"},"prelude":{"crate_id":{"name":"regex_syntax","disambiguator":[13269267485267424,0]},"crate_root":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src","external_crates":[{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","num":1,"id":{"name":"std","disambiguator":[3177202280525429736,0]}},{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","num":2,"id":{"name":"core","disambiguator":[14771084576412554041,0]}},{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[2214913233095760658,0]}},{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[14062411168213242900,0]}},{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[12076482825092298057,0]}},{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[14222321261015582298,0]}},{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[8777242437552039366,0]}},{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[17835652209006724865,0]}},{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","num":9,"id":{"name":"miniz_oxide","disambiguator":[8739993533421390330,0]}},{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","num":10,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[14051958152740382928,0]}},{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","num":11,"id":{"name":"adler","disambiguator":[10065303707608660519,0]}},{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[11544620977869425193,0]}},{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","num":13,"id":{"name":"std_detect","disambiguator":[6400271788769952154,0]}},{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","num":14,"id":{"name":"rustc_demangle","disambiguator":[15384311983005613458,0]}},{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","num":15,"id":{"name":"addr2line","disambiguator":[18308402029100966730,0]}},{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","num":16,"id":{"name":"gimli","disambiguator":[6407954677654987270,0]}},{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","num":17,"id":{"name":"object","disambiguator":[15697432329694890830,0]}},{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","num":18,"id":{"name":"memchr","disambiguator":[8370702540642071065,0]}},{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","num":19,"id":{"name":"panic_unwind","disambiguator":[13043233986326649044,0]}}],"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":0,"byte_end":12089,"line_start":1,"line_end":312,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":2878},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":7240,"byte_end":7245,"line_start":161,"line_end":161,"column_start":24,"column_end":29},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":503},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":7247,"byte_end":7253,"line_start":161,"line_end":161,"column_start":31,"column_end":37},"alias_span":null,"name":"Result","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3420},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":7280,"byte_end":7286,"line_start":162,"line_end":162,"column_start":25,"column_end":31},"alias_span":null,"name":"Parser","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3411},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":7288,"byte_end":7301,"line_start":162,"line_end":162,"column_start":33,"column_end":46},"alias_span":null,"name":"ParserBuilder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3441},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":7328,"byte_end":7344,"line_start":163,"line_end":163,"column_start":25,"column_end":41},"alias_span":null,"name":"UnicodeWordError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":312},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":12236,"byte_end":12241,"line_start":9,"line_end":9,"column_start":31,"column_end":36},"alias_span":null,"name":"visit","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":299},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":12243,"byte_end":12250,"line_start":9,"line_end":9,"column_start":38,"column_end":45},"alias_span":null,"name":"Visitor","value":"","parent":{"krate":0,"index":20}},{"kind":"Use","ref_id":{"krate":0,"index":976},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":315507,"byte_end":315512,"line_start":15,"line_end":15,"column_start":31,"column_end":36},"alias_span":null,"name":"visit","value":"","parent":{"krate":0,"index":540}},{"kind":"Use","ref_id":{"krate":0,"index":968},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":315514,"byte_end":315521,"line_start":15,"line_end":15,"column_start":38,"column_end":45},"alias_span":null,"name":"Visitor","value":"","parent":{"krate":0,"index":540}},{"kind":"Use","ref_id":{"krate":0,"index":3436},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":315548,"byte_end":315561,"line_start":16,"line_end":16,"column_start":25,"column_end":38},"alias_span":null,"name":"CaseFoldError","value":"","parent":{"krate":0,"index":540}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":0,"byte_end":12089,"line_start":1,"line_end":312,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":7},{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":20},{"krate":0,"index":483},{"krate":0,"index":484},{"krate":0,"index":540},{"krate":0,"index":1146},{"krate":0,"index":1171},{"krate":0,"index":1319},{"krate":0,"index":1832},{"krate":0,"index":1888},{"krate":0,"index":1889},{"krate":0,"index":1890},{"krate":0,"index":1891},{"krate":0,"index":1892},{"krate":0,"index":1893}],"decl_id":null,"docs":"This crate provides a robust regular expression parser.","sig":null,"attributes":[{"value":"*\nThis crate provides a robust regular expression parser.\n\nThis crate defines two primary types:\n\n* [`Ast`](ast/enum.Ast.html) is the abstract syntax of a regular expression.\n  An abstract syntax corresponds to a *structured representation* of the\n  concrete syntax of a regular expression, where the concrete syntax is the\n  pattern string itself (e.g., `foo(bar)+`). Given some abstract syntax, it\n  can be converted back to the original concrete syntax (modulo some details,\n  like whitespace). To a first approximation, the abstract syntax is complex\n  and difficult to analyze.\n* [`Hir`](hir/struct.Hir.html) is the high-level intermediate representation\n  (\"HIR\" or \"high-level IR\" for short) of regular expression. It corresponds to\n  an intermediate state of a regular expression that sits between the abstract\n  syntax and the low level compiled opcodes that are eventually responsible for\n  executing a regular expression search. Given some high-level IR, it is not\n  possible to produce the original concrete syntax (although it is possible to\n  produce an equivalent concrete syntax, but it will likely scarcely resemble\n  the original pattern). To a first approximation, the high-level IR is simple\n  and easy to analyze.\n\nThese two types come with conversion routines:\n\n* An [`ast::parse::Parser`](ast/parse/struct.Parser.html) converts concrete\n  syntax (a `&str`) to an [`Ast`](ast/enum.Ast.html).\n* A [`hir::translate::Translator`](hir/translate/struct.Translator.html)\n  converts an [`Ast`](ast/enum.Ast.html) to a [`Hir`](hir/struct.Hir.html).\n\nAs a convenience, the above two conversion routines are combined into one via\nthe top-level [`Parser`](struct.Parser.html) type. This `Parser` will first\nconvert your pattern to an `Ast` and then convert the `Ast` to an `Hir`.\n\n\n# Example\n\nThis example shows how to parse a pattern string into its HIR:\n\n```\nuse regex_syntax::Parser;\nuse regex_syntax::hir::{self, Hir};\n\nlet hir = Parser::new().parse(\"a|b\").unwrap();\nassert_eq!(hir, Hir::alternation(vec![\n    Hir::literal(hir::Literal::Unicode('a')),\n    Hir::literal(hir::Literal::Unicode('b')),\n]));\n```\n\n\n# Concrete syntax supported\n\nThe concrete syntax is documented as part of the public API of the\n[`regex` crate](https://docs.rs/regex/%2A/regex/#syntax).\n\n\n# Input safety\n\nA key feature of this library is that it is safe to use with end user facing\ninput. This plays a significant role in the internal implementation. In\nparticular:\n\n1. Parsers provide a `nest_limit` option that permits callers to control how\n   deeply nested a regular expression is allowed to be. This makes it possible\n   to do case analysis over an `Ast` or an `Hir` using recursion without\n   worrying about stack overflow.\n2. Since relying on a particular stack size is brittle, this crate goes to\n   great lengths to ensure that all interactions with both the `Ast` and the\n   `Hir` do not use recursion. Namely, they use constant stack space and heap\n   space proportional to the size of the original pattern string (in bytes).\n   This includes the type's corresponding destructors. (One exception to this\n   is literal extraction, but this will eventually get fixed.)\n\n\n# Error reporting\n\nThe `Display` implementations on all `Error` types exposed in this library\nprovide nice human readable errors that are suitable for showing to end users\nin a monospace font.\n\n\n# Literal extraction\n\nThis crate provides limited support for\n[literal extraction from `Hir` values](hir/literal/struct.Literals.html).\nBe warned that literal extraction currently uses recursion, and therefore,\nstack size proportional to the size of the `Hir`.\n\nThe purpose of literal extraction is to speed up searches. That is, if you\nknow a regular expression must match a prefix or suffix literal, then it is\noften quicker to search for instances of that literal, and then confirm or deny\nthe match using the full regular expression engine. These optimizations are\ndone automatically in the `regex` crate.\n\n\n# Crate features\n\nAn important feature provided by this crate is its Unicode support. This\nincludes things like case folding, boolean properties, general categories,\nscripts and Unicode-aware support for the Perl classes `\\w`, `\\s` and `\\d`.\nHowever, a downside of this support is that it requires bundling several\nUnicode data tables that are substantial in size.\n\nA fair number of use cases do not require full Unicode support. For this\nreason, this crate exposes a number of features to control which Unicode\ndata is available.\n\nIf a regular expression attempts to use a Unicode feature that is not available\nbecause the corresponding crate feature was disabled, then translating that\nregular expression to an `Hir` will return an error. (It is still possible\nconstruct an `Ast` for such a regular expression, since Unicode data is not\nused until translation to an `Hir`.) Stated differently, enabling or disabling\nany of the features below can only add or subtract from the total set of valid\nregular expressions. Enabling or disabling a feature will never modify the\nmatch semantics of a regular expression.\n\nThe following features are available:\n\n* **unicode** -\n  Enables all Unicode features. This feature is enabled by default, and will\n  always cover all Unicode features, even if more are added in the future.\n* **unicode-age** -\n  Provide the data for the\n  [Unicode `Age` property](https://www.unicode.org/reports/tr44/tr44-24.html#Character_Age).\n  This makes it possible to use classes like `\\p{Age:6.0}` to refer to all\n  codepoints first introduced in Unicode 6.0\n* **unicode-bool** -\n  Provide the data for numerous Unicode boolean properties. The full list\n  is not included here, but contains properties like `Alphabetic`, `Emoji`,\n  `Lowercase`, `Math`, `Uppercase` and `White_Space`.\n* **unicode-case** -\n  Provide the data for case insensitive matching using\n  [Unicode's \"simple loose matches\" specification](https://www.unicode.org/reports/tr18/#Simple_Loose_Matches).\n* **unicode-gencat** -\n  Provide the data for\n  [Uncode general categories](https://www.unicode.org/reports/tr44/tr44-24.html#General_Category_Values).\n  This includes, but is not limited to, `Decimal_Number`, `Letter`,\n  `Math_Symbol`, `Number` and `Punctuation`.\n* **unicode-perl** -\n  Provide the data for supporting the Unicode-aware Perl character classes,\n  corresponding to `\\w`, `\\s` and `\\d`. This is also necessary for using\n  Unicode-aware word boundary assertions. Note that if this feature is\n  disabled, the `\\s` and `\\d` character classes are still available if the\n  `unicode-bool` and `unicode-gencat` features are enabled, respectively.\n* **unicode-script** -\n  Provide the data for\n  [Unicode scripts and script extensions](https://www.unicode.org/reports/tr24/).\n  This includes, but is not limited to, `Arabic`, `Cyrillic`, `Hebrew`,\n  `Latin` and `Thai`.\n* **unicode-segment** -\n  Provide the data necessary to provide the properties used to implement the\n  [Unicode text segmentation algorithms](https://www.unicode.org/reports/tr29/).\n  This enables using classes like `\\p{gcb=Extend}`, `\\p{wb=Katakana}` and\n  `\\p{sb=ATerm}`.\n*/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":0,"byte_end":7127,"line_start":1,"line_end":155,"column_start":1,"column_end":3}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":7129,"byte_end":7151,"line_start":157,"line_end":157,"column_start":1,"column_end":23}},{"value":"warn(missing_debug_implementations)","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":7152,"byte_end":7191,"line_start":158,"line_end":158,"column_start":1,"column_end":40}},{"value":"forbid(unsafe_code)","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":7192,"byte_end":7215,"line_start":159,"line_end":159,"column_start":1,"column_end":24}}]},{"kind":"Mod","id":{"krate":0,"index":20},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ast","qualname":"::ast","value":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","parent":null,"children":[{"krate":0,"index":21},{"krate":0,"index":24},{"krate":0,"index":27},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":34},{"krate":0,"index":37},{"krate":0,"index":213},{"krate":0,"index":288},{"krate":0,"index":2008},{"krate":0,"index":2012},{"krate":0,"index":2014},{"krate":0,"index":2016},{"krate":0,"index":2017},{"krate":0,"index":2019},{"krate":0,"index":2020},{"krate":0,"index":386},{"krate":0,"index":2023},{"krate":0,"index":2089},{"krate":0,"index":2091},{"krate":0,"index":2093},{"krate":0,"index":2094},{"krate":0,"index":2096},{"krate":0,"index":2097},{"krate":0,"index":392},{"krate":0,"index":395},{"krate":0,"index":397},{"krate":0,"index":2100},{"krate":0,"index":2103},{"krate":0,"index":2105},{"krate":0,"index":2106},{"krate":0,"index":2107},{"krate":0,"index":2109},{"krate":0,"index":2110},{"krate":0,"index":400},{"krate":0,"index":402},{"krate":0,"index":404},{"krate":0,"index":2113},{"krate":0,"index":2117},{"krate":0,"index":2119},{"krate":0,"index":2120},{"krate":0,"index":2121},{"krate":0,"index":2123},{"krate":0,"index":2124},{"krate":0,"index":406},{"krate":0,"index":408},{"krate":0,"index":410},{"krate":0,"index":412},{"krate":0,"index":419},{"krate":0,"index":2127},{"krate":0,"index":2130},{"krate":0,"index":2132},{"krate":0,"index":2134},{"krate":0,"index":2135},{"krate":0,"index":2137},{"krate":0,"index":2138},{"krate":0,"index":2141},{"krate":0,"index":2144},{"krate":0,"index":2146},{"krate":0,"index":2148},{"krate":0,"index":2149},{"krate":0,"index":2151},{"krate":0,"index":2152},{"krate":0,"index":2155},{"krate":0,"index":2186},{"krate":0,"index":2188},{"krate":0,"index":2190},{"krate":0,"index":2191},{"krate":0,"index":2193},{"krate":0,"index":2194},{"krate":0,"index":421},{"krate":0,"index":425},{"krate":0,"index":2197},{"krate":0,"index":2200},{"krate":0,"index":2202},{"krate":0,"index":2204},{"krate":0,"index":2205},{"krate":0,"index":2207},{"krate":0,"index":2208},{"krate":0,"index":430},{"krate":0,"index":2211},{"krate":0,"index":2214},{"krate":0,"index":2216},{"krate":0,"index":2218},{"krate":0,"index":2219},{"krate":0,"index":2221},{"krate":0,"index":2222},{"krate":0,"index":432},{"krate":0,"index":2225},{"krate":0,"index":2229},{"krate":0,"index":2231},{"krate":0,"index":2233},{"krate":0,"index":2234},{"krate":0,"index":2236},{"krate":0,"index":2237},{"krate":0,"index":434},{"krate":0,"index":2240},{"krate":0,"index":2256},{"krate":0,"index":2258},{"krate":0,"index":2260},{"krate":0,"index":2261},{"krate":0,"index":2263},{"krate":0,"index":2264},{"krate":0,"index":2267},{"krate":0,"index":2282},{"krate":0,"index":2284},{"krate":0,"index":2286},{"krate":0,"index":2287},{"krate":0,"index":2289},{"krate":0,"index":2290},{"krate":0,"index":2292},{"krate":0,"index":2299},{"krate":0,"index":2301},{"krate":0,"index":2303},{"krate":0,"index":2304},{"krate":0,"index":2306},{"krate":0,"index":2307},{"krate":0,"index":436},{"krate":0,"index":2309},{"krate":0,"index":2319},{"krate":0,"index":2321},{"krate":0,"index":2323},{"krate":0,"index":2324},{"krate":0,"index":2326},{"krate":0,"index":2327},{"krate":0,"index":438},{"krate":0,"index":2330},{"krate":0,"index":2334},{"krate":0,"index":2336},{"krate":0,"index":2338},{"krate":0,"index":2339},{"krate":0,"index":2341},{"krate":0,"index":2342},{"krate":0,"index":2345},{"krate":0,"index":2352},{"krate":0,"index":2354},{"krate":0,"index":2356},{"krate":0,"index":2357},{"krate":0,"index":2359},{"krate":0,"index":2360},{"krate":0,"index":2362},{"krate":0,"index":2366},{"krate":0,"index":2368},{"krate":0,"index":2370},{"krate":0,"index":2371},{"krate":0,"index":2373},{"krate":0,"index":2374},{"krate":0,"index":2377},{"krate":0,"index":2406},{"krate":0,"index":2408},{"krate":0,"index":2410},{"krate":0,"index":2411},{"krate":0,"index":2413},{"krate":0,"index":2414},{"krate":0,"index":440},{"krate":0,"index":2416},{"krate":0,"index":2420},{"krate":0,"index":2422},{"krate":0,"index":2424},{"krate":0,"index":2425},{"krate":0,"index":2427},{"krate":0,"index":2428},{"krate":0,"index":443},{"krate":0,"index":2431},{"krate":0,"index":2442},{"krate":0,"index":2444},{"krate":0,"index":2446},{"krate":0,"index":2447},{"krate":0,"index":2449},{"krate":0,"index":2450},{"krate":0,"index":2453},{"krate":0,"index":2460},{"krate":0,"index":2462},{"krate":0,"index":2464},{"krate":0,"index":2465},{"krate":0,"index":2467},{"krate":0,"index":2468},{"krate":0,"index":445},{"krate":0,"index":2470},{"krate":0,"index":2474},{"krate":0,"index":2476},{"krate":0,"index":2478},{"krate":0,"index":2479},{"krate":0,"index":2481},{"krate":0,"index":2482},{"krate":0,"index":2485},{"krate":0,"index":2492},{"krate":0,"index":2494},{"krate":0,"index":2496},{"krate":0,"index":2497},{"krate":0,"index":2499},{"krate":0,"index":2500},{"krate":0,"index":447},{"krate":0,"index":2503},{"krate":0,"index":2528},{"krate":0,"index":2530},{"krate":0,"index":2532},{"krate":0,"index":2533},{"krate":0,"index":2535},{"krate":0,"index":2536},{"krate":0,"index":451},{"krate":0,"index":2539},{"krate":0,"index":2543},{"krate":0,"index":2545},{"krate":0,"index":2547},{"krate":0,"index":2548},{"krate":0,"index":2550},{"krate":0,"index":2551},{"krate":0,"index":453},{"krate":0,"index":2554},{"krate":0,"index":2557},{"krate":0,"index":2559},{"krate":0,"index":2561},{"krate":0,"index":2562},{"krate":0,"index":2564},{"krate":0,"index":2565},{"krate":0,"index":455},{"krate":0,"index":2568},{"krate":0,"index":2573},{"krate":0,"index":2575},{"krate":0,"index":2577},{"krate":0,"index":2578},{"krate":0,"index":2580},{"krate":0,"index":2581},{"krate":0,"index":2584},{"krate":0,"index":2591},{"krate":0,"index":2593},{"krate":0,"index":2594},{"krate":0,"index":2596},{"krate":0,"index":2597},{"krate":0,"index":2599},{"krate":0,"index":2600},{"krate":0,"index":2602},{"krate":0,"index":2605},{"krate":0,"index":2607},{"krate":0,"index":2609},{"krate":0,"index":2610},{"krate":0,"index":2612},{"krate":0,"index":2613},{"krate":0,"index":2616},{"krate":0,"index":2629},{"krate":0,"index":2631},{"krate":0,"index":2633},{"krate":0,"index":2634},{"krate":0,"index":2636},{"krate":0,"index":2637},{"krate":0,"index":2639},{"krate":0,"index":2644},{"krate":0,"index":2646},{"krate":0,"index":2648},{"krate":0,"index":2649},{"krate":0,"index":2651},{"krate":0,"index":2652},{"krate":0,"index":2655},{"krate":0,"index":2658},{"krate":0,"index":2660},{"krate":0,"index":2662},{"krate":0,"index":2663},{"krate":0,"index":2665},{"krate":0,"index":2666},{"krate":0,"index":2669},{"krate":0,"index":2679},{"krate":0,"index":2681},{"krate":0,"index":2683},{"krate":0,"index":2684},{"krate":0,"index":2686},{"krate":0,"index":2687},{"krate":0,"index":2690},{"krate":0,"index":2701},{"krate":0,"index":2703},{"krate":0,"index":2705},{"krate":0,"index":2706},{"krate":0,"index":2708},{"krate":0,"index":2709},{"krate":0,"index":458},{"krate":0,"index":2712},{"krate":0,"index":2716},{"krate":0,"index":2718},{"krate":0,"index":2720},{"krate":0,"index":2721},{"krate":0,"index":2723},{"krate":0,"index":2724},{"krate":0,"index":460},{"krate":0,"index":2727},{"krate":0,"index":2737},{"krate":0,"index":2739},{"krate":0,"index":2741},{"krate":0,"index":2742},{"krate":0,"index":2744},{"krate":0,"index":2745},{"krate":0,"index":2748},{"krate":0,"index":2752},{"krate":0,"index":2754},{"krate":0,"index":2756},{"krate":0,"index":2757},{"krate":0,"index":2759},{"krate":0,"index":2760},{"krate":0,"index":2763},{"krate":0,"index":2766},{"krate":0,"index":2768},{"krate":0,"index":2770},{"krate":0,"index":2771},{"krate":0,"index":2773},{"krate":0,"index":2774},{"krate":0,"index":2777},{"krate":0,"index":2780},{"krate":0,"index":2782},{"krate":0,"index":2784},{"krate":0,"index":2785},{"krate":0,"index":2787},{"krate":0,"index":2788},{"krate":0,"index":464},{"krate":0,"index":2791},{"krate":0,"index":2794},{"krate":0,"index":2796},{"krate":0,"index":2798},{"krate":0,"index":2799},{"krate":0,"index":2801},{"krate":0,"index":2802},{"krate":0,"index":2805},{"krate":0,"index":2811},{"krate":0,"index":2813},{"krate":0,"index":2815},{"krate":0,"index":2816},{"krate":0,"index":2818},{"krate":0,"index":2819},{"krate":0,"index":467},{"krate":0,"index":2822},{"krate":0,"index":2835},{"krate":0,"index":2837},{"krate":0,"index":2838},{"krate":0,"index":2840},{"krate":0,"index":2841},{"krate":0,"index":2843},{"krate":0,"index":2844},{"krate":0,"index":469},{"krate":0,"index":476}],"decl_id":null,"docs":"Defines an abstract syntax for regular expressions.\n","sig":null,"attributes":[{"value":"*\nDefines an abstract syntax for regular expressions.\n*/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":12091,"byte_end":12149,"line_start":1,"line_end":3,"column_start":1,"column_end":3}}]},{"kind":"Mod","id":{"krate":0,"index":37},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"parse","qualname":"::ast::parse","value":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":42},{"krate":0,"index":45},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":54},{"krate":0,"index":55},{"krate":0,"index":58},{"krate":0,"index":61},{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":70},{"krate":0,"index":73},{"krate":0,"index":1894},{"krate":0,"index":1910},{"krate":0,"index":1912},{"krate":0,"index":1914},{"krate":0,"index":1915},{"krate":0,"index":1917},{"krate":0,"index":1918},{"krate":0,"index":75},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":1921},{"krate":0,"index":1925},{"krate":0,"index":1927},{"krate":0,"index":89},{"krate":0,"index":91},{"krate":0,"index":1929},{"krate":0,"index":1941},{"krate":0,"index":1943},{"krate":0,"index":1945},{"krate":0,"index":1950},{"krate":0,"index":1954},{"krate":0,"index":1958},{"krate":0,"index":1966},{"krate":0,"index":1968},{"krate":0,"index":1970},{"krate":0,"index":1977},{"krate":0,"index":1979},{"krate":0,"index":97},{"krate":0,"index":102},{"krate":0,"index":144},{"krate":0,"index":1981},{"krate":0,"index":1987},{"krate":0,"index":189},{"krate":0,"index":198},{"krate":0,"index":211}],"decl_id":null,"docs":"This module provides a regular expression parser.\n","sig":null,"attributes":[{"value":"*\nThis module provides a regular expression parser.\n*/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":62103,"byte_end":62159,"line_start":1,"line_end":3,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":1921},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":65757,"byte_end":65770,"line_start":114,"line_end":114,"column_start":12,"column_end":25},"name":"ParserBuilder","qualname":"::ast::parse::ParserBuilder","value":"ParserBuilder {  }","parent":null,"children":[{"krate":0,"index":1922},{"krate":0,"index":1923},{"krate":0,"index":1924}],"decl_id":null,"docs":" A builder for a regular expression parser.","sig":null,"attributes":[{"value":"/ A builder for a regular expression parser.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":65598,"byte_end":65644,"line_start":110,"line_end":110,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":65645,"byte_end":65648,"line_start":111,"line_end":111,"column_start":1,"column_end":4}},{"value":"/ This builder permits modifying configuration options for the parser.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":65649,"byte_end":65721,"line_start":112,"line_end":112,"column_start":1,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":90},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":65883,"byte_end":65890,"line_start":121,"line_end":121,"column_start":8,"column_end":15},"name":"default","qualname":"<ParserBuilder as std::default::Default>::default","value":"fn default() -> ParserBuilder","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":66048,"byte_end":66051,"line_start":128,"line_end":128,"column_start":12,"column_end":15},"name":"new","qualname":"<ParserBuilder>::new","value":"fn new() -> ParserBuilder","parent":null,"children":[],"decl_id":null,"docs":" Create a new parser builder with a default configuration.\n","sig":null,"attributes":[{"value":"/ Create a new parser builder with a default configuration.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":65975,"byte_end":66036,"line_start":127,"line_end":127,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":93},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":66289,"byte_end":66294,"line_start":137,"line_end":137,"column_start":12,"column_end":17},"name":"build","qualname":"<ParserBuilder>::build","value":"fn build<'_>(&'_ Self) -> Parser","parent":null,"children":[],"decl_id":null,"docs":" Build a parser from this configuration with the given pattern.\n","sig":null,"attributes":[{"value":"/ Build a parser from this configuration with the given pattern.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":66211,"byte_end":66277,"line_start":136,"line_end":136,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":68371,"byte_end":68381,"line_start":178,"line_end":178,"column_start":12,"column_end":22},"name":"nest_limit","qualname":"<ParserBuilder>::nest_limit","value":"fn nest_limit<'_>(&'_ mut Self, u32) -> &'_ mut ParserBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set the nesting limit for this parser.","sig":null,"attributes":[{"value":"/ Set the nesting limit for this parser.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":66903,"byte_end":66945,"line_start":153,"line_end":153,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":66950,"byte_end":66953,"line_start":154,"line_end":154,"column_start":5,"column_end":8}},{"value":"/ The nesting limit controls how deep the abstract syntax tree is allowed","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":66958,"byte_end":67033,"line_start":155,"line_end":155,"column_start":5,"column_end":80}},{"value":"/ to be. If the AST exceeds the given limit (e.g., with too many nested","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":67038,"byte_end":67111,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ groups), then an error is returned by the parser.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":67116,"byte_end":67169,"line_start":157,"line_end":157,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":67174,"byte_end":67177,"line_start":158,"line_end":158,"column_start":5,"column_end":8}},{"value":"/ The purpose of this limit is to act as a heuristic to prevent stack","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":67182,"byte_end":67253,"line_start":159,"line_end":159,"column_start":5,"column_end":76}},{"value":"/ overflow for consumers that do structural induction on an `Ast` using","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":67258,"byte_end":67331,"line_start":160,"line_end":160,"column_start":5,"column_end":78}},{"value":"/ explicit recursion. While this crate never does this (instead using","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":67336,"byte_end":67407,"line_start":161,"line_end":161,"column_start":5,"column_end":76}},{"value":"/ constant stack space and moving the call stack to the heap), other","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":67412,"byte_end":67482,"line_start":162,"line_end":162,"column_start":5,"column_end":75}},{"value":"/ crates may.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":67487,"byte_end":67502,"line_start":163,"line_end":163,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":67507,"byte_end":67510,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ This limit is not checked until the entire Ast is parsed. Therefore,","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":67515,"byte_end":67587,"line_start":165,"line_end":165,"column_start":5,"column_end":77}},{"value":"/ if callers want to put a limit on the amount of heap space used, then","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":67592,"byte_end":67665,"line_start":166,"line_end":166,"column_start":5,"column_end":78}},{"value":"/ they should impose a limit on the length, in bytes, of the concrete","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":67670,"byte_end":67741,"line_start":167,"line_end":167,"column_start":5,"column_end":76}},{"value":"/ pattern string. In particular, this is viable since this parser","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":67746,"byte_end":67813,"line_start":168,"line_end":168,"column_start":5,"column_end":72}},{"value":"/ implementation will limit itself to heap space proportional to the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":67818,"byte_end":67888,"line_start":169,"line_end":169,"column_start":5,"column_end":75}},{"value":"/ length of the pattern string.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":67893,"byte_end":67926,"line_start":170,"line_end":170,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":67931,"byte_end":67934,"line_start":171,"line_end":171,"column_start":5,"column_end":8}},{"value":"/ Note that a nest limit of `0` will return a nest limit error for most","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":67939,"byte_end":68012,"line_start":172,"line_end":172,"column_start":5,"column_end":78}},{"value":"/ patterns but not all. For example, a nest limit of `0` permits `a` but","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":68017,"byte_end":68091,"line_start":173,"line_end":173,"column_start":5,"column_end":79}},{"value":"/ not `ab`, since `ab` requires a concatenation, which results in a nest","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":68096,"byte_end":68170,"line_start":174,"line_end":174,"column_start":5,"column_end":79}},{"value":"/ depth of `1`. In general, a nest limit is not something that manifests","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":68175,"byte_end":68249,"line_start":175,"line_end":175,"column_start":5,"column_end":79}},{"value":"/ in an obvious way in the concrete syntax, therefore, it should not be","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":68254,"byte_end":68327,"line_start":176,"line_end":176,"column_start":5,"column_end":78}},{"value":"/ used in a granular way.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":68332,"byte_end":68359,"line_start":177,"line_end":177,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":69321,"byte_end":69326,"line_start":198,"line_end":198,"column_start":12,"column_end":17},"name":"octal","qualname":"<ParserBuilder>::octal","value":"fn octal<'_>(&'_ mut Self, bool) -> &'_ mut ParserBuilder","parent":null,"children":[],"decl_id":null,"docs":" Whether to support octal syntax or not.","sig":null,"attributes":[{"value":"/ Whether to support octal syntax or not.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":68486,"byte_end":68529,"line_start":183,"line_end":183,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":68534,"byte_end":68537,"line_start":184,"line_end":184,"column_start":5,"column_end":8}},{"value":"/ Octal syntax is a little-known way of uttering Unicode codepoints in","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":68542,"byte_end":68614,"line_start":185,"line_end":185,"column_start":5,"column_end":77}},{"value":"/ a regular expression. For example, `a`, `\\x61`, `\\u0061` and","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":68619,"byte_end":68683,"line_start":186,"line_end":186,"column_start":5,"column_end":69}},{"value":"/ `\\141` are all equivalent regular expressions, where the last example","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":68688,"byte_end":68761,"line_start":187,"line_end":187,"column_start":5,"column_end":78}},{"value":"/ shows octal syntax.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":68766,"byte_end":68789,"line_start":188,"line_end":188,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":68794,"byte_end":68797,"line_start":189,"line_end":189,"column_start":5,"column_end":8}},{"value":"/ While supporting octal syntax isn't in and of itself a problem, it does","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":68802,"byte_end":68877,"line_start":190,"line_end":190,"column_start":5,"column_end":80}},{"value":"/ make good error messages harder. That is, in PCRE based regex engines,","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":68882,"byte_end":68956,"line_start":191,"line_end":191,"column_start":5,"column_end":79}},{"value":"/ syntax like `\\0` invokes a backreference, which is explicitly","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":68961,"byte_end":69026,"line_start":192,"line_end":192,"column_start":5,"column_end":70}},{"value":"/ unsupported in Rust's regex engine. However, many users expect it to","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":69031,"byte_end":69103,"line_start":193,"line_end":193,"column_start":5,"column_end":77}},{"value":"/ be supported. Therefore, when octal support is disabled, the error","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":69108,"byte_end":69178,"line_start":194,"line_end":194,"column_start":5,"column_end":75}},{"value":"/ message will explicitly mention that backreferences aren't supported.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":69183,"byte_end":69256,"line_start":195,"line_end":195,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":69261,"byte_end":69264,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ Octal syntax is disabled by default.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":69269,"byte_end":69309,"line_start":197,"line_end":197,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":96},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":69871,"byte_end":69888,"line_start":211,"line_end":211,"column_start":12,"column_end":29},"name":"ignore_whitespace","qualname":"<ParserBuilder>::ignore_whitespace","value":"fn ignore_whitespace<'_>(&'_ mut Self, bool) -> &'_ mut ParserBuilder","parent":null,"children":[],"decl_id":null,"docs":" Enable verbose mode in the regular expression.","sig":null,"attributes":[{"value":"/ Enable verbose mode in the regular expression.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":69423,"byte_end":69473,"line_start":203,"line_end":203,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":69478,"byte_end":69481,"line_start":204,"line_end":204,"column_start":5,"column_end":8}},{"value":"/ When enabled, verbose mode permits insignificant whitespace in many","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":69486,"byte_end":69557,"line_start":205,"line_end":205,"column_start":5,"column_end":76}},{"value":"/ places in the regular expression, as well as comments. Comments are","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":69562,"byte_end":69633,"line_start":206,"line_end":206,"column_start":5,"column_end":76}},{"value":"/ started using `#` and continue until the end of the line.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":69638,"byte_end":69699,"line_start":207,"line_end":207,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":69704,"byte_end":69707,"line_start":208,"line_end":208,"column_start":5,"column_end":8}},{"value":"/ By default, this is disabled. It may be selectively enabled in the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":69712,"byte_end":69782,"line_start":209,"line_end":209,"column_start":5,"column_end":75}},{"value":"/ regular expression by using the `x` flag regardless of this setting.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":69787,"byte_end":69859,"line_start":210,"line_end":210,"column_start":5,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":1929},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":70363,"byte_end":70369,"line_start":226,"line_end":226,"column_start":12,"column_end":18},"name":"Parser","qualname":"::ast::parse::Parser","value":"Parser {  }","parent":null,"children":[{"krate":0,"index":1930},{"krate":0,"index":1931},{"krate":0,"index":1932},{"krate":0,"index":1933},{"krate":0,"index":1934},{"krate":0,"index":1935},{"krate":0,"index":1936},{"krate":0,"index":1937},{"krate":0,"index":1938},{"krate":0,"index":1939},{"krate":0,"index":1940}],"decl_id":null,"docs":" A regular expression parser.","sig":null,"attributes":[{"value":"/ A regular expression parser.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":69995,"byte_end":70027,"line_start":217,"line_end":217,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":70028,"byte_end":70031,"line_start":218,"line_end":218,"column_start":1,"column_end":4}},{"value":"/ This parses a string representation of a regular expression into an","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":70032,"byte_end":70103,"line_start":219,"line_end":219,"column_start":1,"column_end":72}},{"value":"/ abstract syntax tree. The size of the tree is proportional to the length","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":70104,"byte_end":70180,"line_start":220,"line_end":220,"column_start":1,"column_end":77}},{"value":"/ of the regular expression pattern.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":70181,"byte_end":70219,"line_start":221,"line_end":221,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":70220,"byte_end":70223,"line_start":222,"line_end":222,"column_start":1,"column_end":4}},{"value":"/ A `Parser` can be configured in more detail via a","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":70224,"byte_end":70277,"line_start":223,"line_end":223,"column_start":1,"column_end":54}},{"value":"/ [`ParserBuilder`](struct.ParserBuilder.html).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":70278,"byte_end":70327,"line_start":224,"line_end":224,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":74858,"byte_end":74861,"line_start":332,"line_end":332,"column_start":12,"column_end":15},"name":"new","qualname":"<Parser>::new","value":"fn new() -> Parser","parent":null,"children":[],"decl_id":null,"docs":" Create a new parser with a default configuration.","sig":null,"attributes":[{"value":"/ Create a new parser with a default configuration.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":74521,"byte_end":74574,"line_start":325,"line_end":325,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":74579,"byte_end":74582,"line_start":326,"line_end":326,"column_start":5,"column_end":8}},{"value":"/ The parser can be run with either the `parse` or `parse_with_comments`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":74587,"byte_end":74661,"line_start":327,"line_end":327,"column_start":5,"column_end":79}},{"value":"/ methods. The parse methods return an abstract syntax tree.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":74666,"byte_end":74728,"line_start":328,"line_end":328,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":74733,"byte_end":74736,"line_start":329,"line_end":329,"column_start":5,"column_end":8}},{"value":"/ To set configuration options on the parser, use","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":74741,"byte_end":74792,"line_start":330,"line_end":330,"column_start":5,"column_end":56}},{"value":"/ [`ParserBuilder`](struct.ParserBuilder.html).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":74797,"byte_end":74846,"line_start":331,"line_end":331,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":99},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":74998,"byte_end":75003,"line_start":337,"line_end":337,"column_start":12,"column_end":17},"name":"parse","qualname":"<Parser>::parse","value":"fn parse<'_, '_>(&'_ mut Self, &'_ str) -> Result<Ast>","parent":null,"children":[],"decl_id":null,"docs":" Parse the regular expression into an abstract syntax tree.\n","sig":null,"attributes":[{"value":"/ Parse the regular expression into an abstract syntax tree.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":74924,"byte_end":74986,"line_start":336,"line_end":336,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":75236,"byte_end":75255,"line_start":343,"line_end":343,"column_start":12,"column_end":31},"name":"parse_with_comments","qualname":"<Parser>::parse_with_comments","value":"fn parse_with_comments<'_, '_>(&'_ mut Self, &'_ str)\n-> Result<ast::WithComments>","parent":null,"children":[],"decl_id":null,"docs":" Parse the regular expression and return an abstract syntax tree with\n all of the comments found in the pattern.\n","sig":null,"attributes":[{"value":"/ Parse the regular expression and return an abstract syntax tree with","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":75102,"byte_end":75174,"line_start":341,"line_end":341,"column_start":5,"column_end":77}},{"value":"/ all of the comments found in the pattern.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":75179,"byte_end":75224,"line_start":342,"line_end":342,"column_start":5,"column_end":50}}]},{"kind":"Mod","id":{"krate":0,"index":213},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/print.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"print","qualname":"::ast::print","value":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/print.rs","parent":null,"children":[{"krate":0,"index":214},{"krate":0,"index":217},{"krate":0,"index":218},{"krate":0,"index":221},{"krate":0,"index":224},{"krate":0,"index":225},{"krate":0,"index":228},{"krate":0,"index":1992},{"krate":0,"index":1994},{"krate":0,"index":1996},{"krate":0,"index":231},{"krate":0,"index":233},{"krate":0,"index":1998},{"krate":0,"index":2000},{"krate":0,"index":236},{"krate":0,"index":2002},{"krate":0,"index":2005},{"krate":0,"index":240},{"krate":0,"index":255}],"decl_id":null,"docs":"This module provides a regular expression printer for `Ast`.\n","sig":null,"attributes":[{"value":"*\nThis module provides a regular expression printer for `Ast`.\n*/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/print.rs","byte_start":267363,"byte_end":267430,"line_start":1,"line_end":3,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":1998},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/print.rs","byte_start":268489,"byte_end":268496,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"Printer","qualname":"::ast::print::Printer","value":"Printer {  }","parent":null,"children":[{"krate":0,"index":1999}],"decl_id":null,"docs":" A printer for a regular expression abstract syntax tree.","sig":null,"attributes":[{"value":"/ A printer for a regular expression abstract syntax tree.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/print.rs","byte_start":268014,"byte_end":268074,"line_start":35,"line_end":35,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/print.rs","byte_start":268075,"byte_end":268078,"line_start":36,"line_end":36,"column_start":1,"column_end":4}},{"value":"/ A printer converts an abstract syntax tree (AST) to a regular expression","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/print.rs","byte_start":268079,"byte_end":268155,"line_start":37,"line_end":37,"column_start":1,"column_end":77}},{"value":"/ pattern string. This particular printer uses constant stack space and heap","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/print.rs","byte_start":268156,"byte_end":268234,"line_start":38,"line_end":38,"column_start":1,"column_end":79}},{"value":"/ space proportional to the size of the AST.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/print.rs","byte_start":268235,"byte_end":268281,"line_start":39,"line_end":39,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/print.rs","byte_start":268282,"byte_end":268285,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"/ This printer will not necessarily preserve the original formatting of the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/print.rs","byte_start":268286,"byte_end":268363,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/ regular expression pattern string. For example, all whitespace and comments","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/print.rs","byte_start":268364,"byte_end":268443,"line_start":42,"line_end":42,"column_start":1,"column_end":80}},{"value":"/ are ignored.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/print.rs","byte_start":268444,"byte_end":268460,"line_start":43,"line_end":43,"column_start":1,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":237},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/print.rs","byte_start":268573,"byte_end":268576,"line_start":51,"line_end":51,"column_start":12,"column_end":15},"name":"new","qualname":"<Printer>::new","value":"fn new() -> Printer","parent":null,"children":[],"decl_id":null,"docs":" Create a new printer.\n","sig":null,"attributes":[{"value":"/ Create a new printer.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/print.rs","byte_start":268536,"byte_end":268561,"line_start":50,"line_end":50,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":238},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/print.rs","byte_start":268923,"byte_end":268928,"line_start":59,"line_end":59,"column_start":12,"column_end":17},"name":"print","qualname":"<Printer>::print","value":"fn print<W, '_, '_>(&'_ mut Self, &'_ Ast, W) -> fmt::Result where\nW: fmt::Write","parent":null,"children":[],"decl_id":null,"docs":" Print the given `Ast` to the given writer. The writer must implement\n `fmt::Write`. Typical implementations of `fmt::Write` that can be used\n here are a `fmt::Formatter` (which is available in `fmt::Display`\n implementations) or a `&mut String`.\n","sig":null,"attributes":[{"value":"/ Print the given `Ast` to the given writer. The writer must implement","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/print.rs","byte_start":268641,"byte_end":268713,"line_start":55,"line_end":55,"column_start":5,"column_end":77}},{"value":"/ `fmt::Write`. Typical implementations of `fmt::Write` that can be used","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/print.rs","byte_start":268718,"byte_end":268792,"line_start":56,"line_end":56,"column_start":5,"column_end":79}},{"value":"/ here are a `fmt::Formatter` (which is available in `fmt::Display`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/print.rs","byte_start":268797,"byte_end":268866,"line_start":57,"line_end":57,"column_start":5,"column_end":74}},{"value":"/ implementations) or a `&mut String`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/print.rs","byte_start":268871,"byte_end":268911,"line_start":58,"line_end":58,"column_start":5,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":299},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":286234,"byte_end":286241,"line_start":23,"line_end":23,"column_start":11,"column_end":18},"name":"Visitor","qualname":"::ast::visitor::Visitor","value":"Visitor","parent":null,"children":[{"krate":0,"index":300},{"krate":0,"index":301},{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305},{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308},{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311}],"decl_id":null,"docs":" A trait for visiting an abstract syntax tree (AST) in depth first order.","sig":null,"attributes":[{"value":"/ A trait for visiting an abstract syntax tree (AST) in depth first order.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":285326,"byte_end":285402,"line_start":5,"line_end":5,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":285403,"byte_end":285406,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"/ The principle aim of this trait is to enable callers to perform case","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":285407,"byte_end":285479,"line_start":7,"line_end":7,"column_start":1,"column_end":73}},{"value":"/ analysis on an abstract syntax tree without necessarily using recursion.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":285480,"byte_end":285556,"line_start":8,"line_end":8,"column_start":1,"column_end":77}},{"value":"/ In particular, this permits callers to do case analysis with constant stack","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":285557,"byte_end":285636,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/ usage, which can be important since the size of an abstract syntax tree","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":285637,"byte_end":285712,"line_start":10,"line_end":10,"column_start":1,"column_end":76}},{"value":"/ may be proportional to end user input.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":285713,"byte_end":285755,"line_start":11,"line_end":11,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":285756,"byte_end":285759,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Typical usage of this trait involves providing an implementation and then","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":285760,"byte_end":285837,"line_start":13,"line_end":13,"column_start":1,"column_end":78}},{"value":"/ running it using the [`visit`](fn.visit.html) function.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":285838,"byte_end":285897,"line_start":14,"line_end":14,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":285898,"byte_end":285901,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"/ Note that the abstract syntax tree for a regular expression is quite","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":285902,"byte_end":285974,"line_start":16,"line_end":16,"column_start":1,"column_end":73}},{"value":"/ complex. Unless you specifically need it, you might be able to use the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":285975,"byte_end":286049,"line_start":17,"line_end":17,"column_start":1,"column_end":75}},{"value":"/ much simpler","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":286050,"byte_end":286066,"line_start":18,"line_end":18,"column_start":1,"column_end":17}},{"value":"/ [high-level intermediate representation](../hir/struct.Hir.html)","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":286067,"byte_end":286135,"line_start":19,"line_end":19,"column_start":1,"column_end":69}},{"value":"/ and its","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":286136,"byte_end":286147,"line_start":20,"line_end":20,"column_start":1,"column_end":12}},{"value":"/ [corresponding `Visitor` trait](../hir/trait.Visitor.html)","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":286148,"byte_end":286210,"line_start":21,"line_end":21,"column_start":1,"column_end":63}},{"value":"/ instead.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":286211,"byte_end":286223,"line_start":22,"line_end":22,"column_start":1,"column_end":13}}]},{"kind":"Type","id":{"krate":0,"index":300},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":286292,"byte_end":286298,"line_start":25,"line_end":25,"column_start":10,"column_end":16},"name":"Output","qualname":"::ast::visitor::Visitor::Output","value":"type Output;","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" The result of visiting an AST.\n","sig":null,"attributes":[{"value":"/ The result of visiting an AST.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":286248,"byte_end":286282,"line_start":24,"line_end":24,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":301},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":286361,"byte_end":286364,"line_start":27,"line_end":27,"column_start":10,"column_end":13},"name":"Err","qualname":"::ast::visitor::Visitor::Err","value":"type Err;","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" An error that visiting an AST might return.\n","sig":null,"attributes":[{"value":"/ An error that visiting an AST might return.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":286304,"byte_end":286351,"line_start":26,"line_end":26,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":302},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":286509,"byte_end":286515,"line_start":31,"line_end":31,"column_start":8,"column_end":14},"name":"finish","qualname":"::ast::visitor::Visitor::finish","value":"fn finish(Self) -> Result<Self::Output, Self::Err>","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" All implementors of `Visitor` must provide a `finish` method, which\n yields the result of visiting the AST or an error.\n","sig":null,"attributes":[{"value":"/ All implementors of `Visitor` must provide a `finish` method, which","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":286371,"byte_end":286442,"line_start":29,"line_end":29,"column_start":5,"column_end":76}},{"value":"/ yields the result of visiting the AST or an error.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":286447,"byte_end":286501,"line_start":30,"line_end":30,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":286635,"byte_end":286640,"line_start":34,"line_end":34,"column_start":8,"column_end":13},"name":"start","qualname":"::ast::visitor::Visitor::start","value":"fn start<'_>(&'_ mut Self)","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" This method is called before beginning traversal of the AST.\n","sig":null,"attributes":[{"value":"/ This method is called before beginning traversal of the AST.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":286563,"byte_end":286627,"line_start":33,"line_end":33,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":286755,"byte_end":286764,"line_start":38,"line_end":38,"column_start":8,"column_end":17},"name":"visit_pre","qualname":"::ast::visitor::Visitor::visit_pre","value":"fn visit_pre<'_, '_>(&'_ mut Self, &'_ Ast) -> Result<(), Self::Err>","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" This method is called on an `Ast` before descending into child `Ast`\n nodes.\n","sig":null,"attributes":[{"value":"/ This method is called on an `Ast` before descending into child `Ast`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":286660,"byte_end":286732,"line_start":36,"line_end":36,"column_start":5,"column_end":77}},{"value":"/ nodes.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":286737,"byte_end":286747,"line_start":37,"line_end":37,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":286941,"byte_end":286951,"line_start":44,"line_end":44,"column_start":8,"column_end":18},"name":"visit_post","qualname":"::ast::visitor::Visitor::visit_post","value":"fn visit_post<'_, '_>(&'_ mut Self, &'_ Ast) -> Result<(), Self::Err>","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" This method is called on an `Ast` after descending all of its child\n `Ast` nodes.\n","sig":null,"attributes":[{"value":"/ This method is called on an `Ast` after descending all of its child","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":286841,"byte_end":286912,"line_start":42,"line_end":42,"column_start":5,"column_end":76}},{"value":"/ `Ast` nodes.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":286917,"byte_end":286933,"line_start":43,"line_end":43,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":306},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":287137,"byte_end":287157,"line_start":50,"line_end":50,"column_start":8,"column_end":28},"name":"visit_alternation_in","qualname":"::ast::visitor::Visitor::visit_alternation_in","value":"fn visit_alternation_in<'_>(&'_ mut Self) -> Result<(), Self::Err>","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" This method is called between child nodes of an\n [`Alternation`](struct.Alternation.html).\n","sig":null,"attributes":[{"value":"/ This method is called between child nodes of an","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":287028,"byte_end":287079,"line_start":48,"line_end":48,"column_start":5,"column_end":56}},{"value":"/ [`Alternation`](struct.Alternation.html).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":287084,"byte_end":287129,"line_start":49,"line_end":49,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":307},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":287357,"byte_end":287381,"line_start":57,"line_end":57,"column_start":8,"column_end":32},"name":"visit_class_set_item_pre","qualname":"::ast::visitor::Visitor::visit_class_set_item_pre","value":"fn visit_class_set_item_pre<'_, '_>(&'_ mut Self, &'_ ast::ClassSetItem)\n-> Result<(), Self::Err>","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" This method is called on every\n [`ClassSetItem`](enum.ClassSetItem.html)\n before descending into child nodes.\n","sig":null,"attributes":[{"value":"/ This method is called on every","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":287222,"byte_end":287256,"line_start":54,"line_end":54,"column_start":5,"column_end":39}},{"value":"/ [`ClassSetItem`](enum.ClassSetItem.html)","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":287261,"byte_end":287305,"line_start":55,"line_end":55,"column_start":5,"column_end":49}},{"value":"/ before descending into child nodes.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":287310,"byte_end":287349,"line_start":56,"line_end":56,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":308},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":287629,"byte_end":287654,"line_start":67,"line_end":67,"column_start":8,"column_end":33},"name":"visit_class_set_item_post","qualname":"::ast::visitor::Visitor::visit_class_set_item_post","value":"fn visit_class_set_item_post<'_, '_>(&'_ mut Self, &'_ ast::ClassSetItem)\n-> Result<(), Self::Err>","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" This method is called on every\n [`ClassSetItem`](enum.ClassSetItem.html)\n after descending into child nodes.\n","sig":null,"attributes":[{"value":"/ This method is called on every","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":287495,"byte_end":287529,"line_start":64,"line_end":64,"column_start":5,"column_end":39}},{"value":"/ [`ClassSetItem`](enum.ClassSetItem.html)","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":287534,"byte_end":287578,"line_start":65,"line_end":65,"column_start":5,"column_end":49}},{"value":"/ after descending into child nodes.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":287583,"byte_end":287621,"line_start":66,"line_end":66,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":309},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":287913,"byte_end":287942,"line_start":77,"line_end":77,"column_start":8,"column_end":37},"name":"visit_class_set_binary_op_pre","qualname":"::ast::visitor::Visitor::visit_class_set_binary_op_pre","value":"fn visit_class_set_binary_op_pre<'_,\n'_>(&'_ mut Self, &'_ ast::ClassSetBinaryOp) -> Result<(), Self::Err>","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" This method is called on every\n [`ClassSetBinaryOp`](struct.ClassSetBinaryOp.html)\n before descending into child nodes.\n","sig":null,"attributes":[{"value":"/ This method is called on every","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":287768,"byte_end":287802,"line_start":74,"line_end":74,"column_start":5,"column_end":39}},{"value":"/ [`ClassSetBinaryOp`](struct.ClassSetBinaryOp.html)","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":287807,"byte_end":287861,"line_start":75,"line_end":75,"column_start":5,"column_end":59}},{"value":"/ before descending into child nodes.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":287866,"byte_end":287905,"line_start":76,"line_end":76,"column_start":5,"column_end":44}}]},{"kind":"Method","id":{"krate":0,"index":310},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":288204,"byte_end":288234,"line_start":87,"line_end":87,"column_start":8,"column_end":38},"name":"visit_class_set_binary_op_post","qualname":"::ast::visitor::Visitor::visit_class_set_binary_op_post","value":"fn visit_class_set_binary_op_post<'_,\n'_>(&'_ mut Self, &'_ ast::ClassSetBinaryOp) -> Result<(), Self::Err>","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" This method is called on every\n [`ClassSetBinaryOp`](struct.ClassSetBinaryOp.html)\n after descending into child nodes.\n","sig":null,"attributes":[{"value":"/ This method is called on every","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":288060,"byte_end":288094,"line_start":84,"line_end":84,"column_start":5,"column_end":39}},{"value":"/ [`ClassSetBinaryOp`](struct.ClassSetBinaryOp.html)","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":288099,"byte_end":288153,"line_start":85,"line_end":85,"column_start":5,"column_end":59}},{"value":"/ after descending into child nodes.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":288158,"byte_end":288196,"line_start":86,"line_end":86,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":311},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":288499,"byte_end":288527,"line_start":96,"line_end":96,"column_start":8,"column_end":36},"name":"visit_class_set_binary_op_in","qualname":"::ast::visitor::Visitor::visit_class_set_binary_op_in","value":"fn visit_class_set_binary_op_in<'_,\n'_>(&'_ mut Self, &'_ ast::ClassSetBinaryOp) -> Result<(), Self::Err>","parent":{"krate":0,"index":299},"children":[],"decl_id":null,"docs":" This method is called between the left hand and right hand child nodes\n of a [`ClassSetBinaryOp`](struct.ClassSetBinaryOp.html).\n","sig":null,"attributes":[{"value":"/ This method is called between the left hand and right hand child nodes","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":288352,"byte_end":288426,"line_start":94,"line_end":94,"column_start":5,"column_end":79}},{"value":"/ of a [`ClassSetBinaryOp`](struct.ClassSetBinaryOp.html).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":288431,"byte_end":288491,"line_start":95,"line_end":95,"column_start":5,"column_end":65}}]},{"kind":"Function","id":{"krate":0,"index":312},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":289393,"byte_end":289398,"line_start":119,"line_end":119,"column_start":8,"column_end":13},"name":"visit","qualname":"::ast::visitor::visit","value":"fn visit<V, '_>(&'_ Ast, V) -> Result<V::Output, V::Err> where V: Visitor","parent":null,"children":[],"decl_id":null,"docs":" Executes an implementation of `Visitor` in constant stack space.","sig":null,"attributes":[{"value":"/ Executes an implementation of `Visitor` in constant stack space.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":288643,"byte_end":288711,"line_start":104,"line_end":104,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":288712,"byte_end":288715,"line_start":105,"line_end":105,"column_start":1,"column_end":4}},{"value":"/ This function will visit every node in the given `Ast` while calling the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":288716,"byte_end":288792,"line_start":106,"line_end":106,"column_start":1,"column_end":77}},{"value":"/ appropriate methods provided by the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":288793,"byte_end":288832,"line_start":107,"line_end":107,"column_start":1,"column_end":40}},{"value":"/ [`Visitor`](trait.Visitor.html) trait.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":288833,"byte_end":288875,"line_start":108,"line_end":108,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":288876,"byte_end":288879,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ The primary use case for this method is when one wants to perform case","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":288880,"byte_end":288954,"line_start":110,"line_end":110,"column_start":1,"column_end":75}},{"value":"/ analysis over an `Ast` without using a stack size proportional to the depth","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":288955,"byte_end":289034,"line_start":111,"line_end":111,"column_start":1,"column_end":80}},{"value":"/ of the `Ast`. Namely, this method will instead use constant stack size, but","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":289035,"byte_end":289114,"line_start":112,"line_end":112,"column_start":1,"column_end":80}},{"value":"/ will use heap space proportional to the size of the `Ast`. This may be","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":289115,"byte_end":289189,"line_start":113,"line_end":113,"column_start":1,"column_end":75}},{"value":"/ desirable in cases where the size of `Ast` is proportional to end user","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":289190,"byte_end":289264,"line_start":114,"line_end":114,"column_start":1,"column_end":75}},{"value":"/ input.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":289265,"byte_end":289275,"line_start":115,"line_end":115,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":289276,"byte_end":289279,"line_start":116,"line_end":116,"column_start":1,"column_end":4}},{"value":"/ If the visitor returns an error at any point, then visiting is stopped and","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":289280,"byte_end":289358,"line_start":117,"line_end":117,"column_start":1,"column_end":79}},{"value":"/ the error is returned.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":289359,"byte_end":289385,"line_start":118,"line_end":118,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":2008},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":12753,"byte_end":12758,"line_start":23,"line_end":23,"column_start":12,"column_end":17},"name":"Error","qualname":"::ast::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":2009},{"krate":0,"index":2010},{"krate":0,"index":2011}],"decl_id":null,"docs":" An error that occurred while parsing a regular expression into an abstract\n syntax tree.","sig":null,"attributes":[{"value":"/ An error that occurred while parsing a regular expression into an abstract","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":12298,"byte_end":12376,"line_start":15,"line_end":15,"column_start":1,"column_end":79}},{"value":"/ syntax tree.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":12377,"byte_end":12393,"line_start":16,"line_end":16,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":12394,"byte_end":12397,"line_start":17,"line_end":17,"column_start":1,"column_end":4}},{"value":"/ Note that not all ASTs represents a valid regular expression. For example,","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":12398,"byte_end":12476,"line_start":18,"line_end":18,"column_start":1,"column_end":79}},{"value":"/ an AST is constructed without error for `\\p{Quux}`, but `Quux` is not a","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":12477,"byte_end":12552,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/ valid Unicode property name. That particular error is reported when","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":12553,"byte_end":12624,"line_start":20,"line_end":20,"column_start":1,"column_end":72}},{"value":"/ translating an AST to the high-level intermediate representation (`HIR`).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":12625,"byte_end":12702,"line_start":21,"line_end":21,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":387},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":13081,"byte_end":13085,"line_start":35,"line_end":35,"column_start":12,"column_end":16},"name":"kind","qualname":"<Error>::kind","value":"fn kind<'_>(&'_ Self) -> &'_ ErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Return the type of this error.\n","sig":null,"attributes":[{"value":"/ Return the type of this error.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":13035,"byte_end":13069,"line_start":34,"line_end":34,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":388},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":13299,"byte_end":13306,"line_start":42,"line_end":42,"column_start":12,"column_end":19},"name":"pattern","qualname":"<Error>::pattern","value":"fn pattern<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":" The original pattern string in which this error occurred.","sig":null,"attributes":[{"value":"/ The original pattern string in which this error occurred.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":13139,"byte_end":13200,"line_start":39,"line_end":39,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":13205,"byte_end":13208,"line_start":40,"line_end":40,"column_start":5,"column_end":8}},{"value":"/ Every span reported by this error is reported in terms of this string.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":13213,"byte_end":13287,"line_start":41,"line_end":41,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":389},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":13418,"byte_end":13422,"line_start":47,"line_end":47,"column_start":12,"column_end":16},"name":"span","qualname":"<Error>::span","value":"fn span<'_>(&'_ Self) -> &'_ Span","parent":null,"children":[],"decl_id":null,"docs":" Return the span at which this error occurred.\n","sig":null,"attributes":[{"value":"/ Return the span at which this error occurred.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":13357,"byte_end":13406,"line_start":46,"line_end":46,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":390},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":13835,"byte_end":13849,"line_start":56,"line_end":56,"column_start":12,"column_end":26},"name":"auxiliary_span","qualname":"<Error>::auxiliary_span","value":"fn auxiliary_span<'_>(&'_ Self) -> Option<&'_ Span>","parent":null,"children":[],"decl_id":null,"docs":" Return an auxiliary span. This span exists only for some errors that\n benefit from being able to point to two locations in the original\n regular expression. For example, \"duplicate\" errors will have the\n main error position set to the duplicate occurrence while its\n auxiliary span will be set to the initial occurrence.\n","sig":null,"attributes":[{"value":"/ Return an auxiliary span. This span exists only for some errors that","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":13471,"byte_end":13543,"line_start":51,"line_end":51,"column_start":5,"column_end":77}},{"value":"/ benefit from being able to point to two locations in the original","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":13548,"byte_end":13617,"line_start":52,"line_end":52,"column_start":5,"column_end":74}},{"value":"/ regular expression. For example, \"duplicate\" errors will have the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":13622,"byte_end":13691,"line_start":53,"line_end":53,"column_start":5,"column_end":74}},{"value":"/ main error position set to the duplicate occurrence while its","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":13696,"byte_end":13761,"line_start":54,"line_end":54,"column_start":5,"column_end":70}},{"value":"/ auxiliary span will be set to the initial occurrence.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":13766,"byte_end":13823,"line_start":55,"line_end":55,"column_start":5,"column_end":62}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2024},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":14625,"byte_end":14645,"line_start":76,"line_end":76,"column_start":5,"column_end":25},"name":"CaptureLimitExceeded","qualname":"::ast::ErrorKind::CaptureLimitExceeded","value":"ErrorKind::CaptureLimitExceeded","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" The capturing group limit was exceeded.","sig":null,"attributes":[{"value":"/ The capturing group limit was exceeded.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":14308,"byte_end":14351,"line_start":70,"line_end":70,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":14356,"byte_end":14359,"line_start":71,"line_end":71,"column_start":5,"column_end":8}},{"value":"/ Note that this represents a limit on the total number of capturing","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":14364,"byte_end":14434,"line_start":72,"line_end":72,"column_start":5,"column_end":75}},{"value":"/ groups in a regex and not necessarily the number of nested capturing","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":14439,"byte_end":14511,"line_start":73,"line_end":73,"column_start":5,"column_end":77}},{"value":"/ groups. That is, the nest limit can be low and it is still possible for","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":14516,"byte_end":14591,"line_start":74,"line_end":74,"column_start":5,"column_end":80}},{"value":"/ this error to occur.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":14596,"byte_end":14620,"line_start":75,"line_end":75,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2026},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":14722,"byte_end":14740,"line_start":78,"line_end":78,"column_start":5,"column_end":23},"name":"ClassEscapeInvalid","qualname":"::ast::ErrorKind::ClassEscapeInvalid","value":"ErrorKind::ClassEscapeInvalid","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" An invalid escape sequence was found in a character class set.\n","sig":null,"attributes":[{"value":"/ An invalid escape sequence was found in a character class set.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":14651,"byte_end":14717,"line_start":77,"line_end":77,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2028},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":14877,"byte_end":14894,"line_start":81,"line_end":81,"column_start":5,"column_end":22},"name":"ClassRangeInvalid","qualname":"::ast::ErrorKind::ClassRangeInvalid","value":"ErrorKind::ClassRangeInvalid","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" An invalid character class range was found. An invalid range is any\n range where the start is greater than the end.\n","sig":null,"attributes":[{"value":"/ An invalid character class range was found. An invalid range is any","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":14746,"byte_end":14817,"line_start":79,"line_end":79,"column_start":5,"column_end":76}},{"value":"/ range where the start is greater than the end.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":14822,"byte_end":14872,"line_start":80,"line_end":80,"column_start":5,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2030},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":15115,"byte_end":15132,"line_start":85,"line_end":85,"column_start":5,"column_end":22},"name":"ClassRangeLiteral","qualname":"::ast::ErrorKind::ClassRangeLiteral","value":"ErrorKind::ClassRangeLiteral","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" An invalid range boundary was found in a character class. Range\n boundaries must be a single literal codepoint, but this error indicates\n that something else was found, such as a nested class.\n","sig":null,"attributes":[{"value":"/ An invalid range boundary was found in a character class. Range","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":14900,"byte_end":14967,"line_start":82,"line_end":82,"column_start":5,"column_end":72}},{"value":"/ boundaries must be a single literal codepoint, but this error indicates","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":14972,"byte_end":15047,"line_start":83,"line_end":83,"column_start":5,"column_end":80}},{"value":"/ that something else was found, such as a nested class.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":15052,"byte_end":15110,"line_start":84,"line_end":84,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2032},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":15206,"byte_end":15219,"line_start":87,"line_end":87,"column_start":5,"column_end":18},"name":"ClassUnclosed","qualname":"::ast::ErrorKind::ClassUnclosed","value":"ErrorKind::ClassUnclosed","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" An opening `[` was found with no corresponding closing `]`.\n","sig":null,"attributes":[{"value":"/ An opening `[` was found with no corresponding closing `]`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":15138,"byte_end":15201,"line_start":86,"line_end":86,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2034},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":15498,"byte_end":15510,"line_start":92,"line_end":92,"column_start":5,"column_end":17},"name":"DecimalEmpty","qualname":"::ast::ErrorKind::DecimalEmpty","value":"ErrorKind::DecimalEmpty","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" Note that this error variant is no longer used. Namely, a decimal\n number can only appear as a repetition quantifier. When the number\n in a repetition quantifier is empty, then it gets its own specialized\n error, `RepetitionCountDecimalEmpty`.\n","sig":null,"attributes":[{"value":"/ Note that this error variant is no longer used. Namely, a decimal","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":15225,"byte_end":15294,"line_start":88,"line_end":88,"column_start":5,"column_end":74}},{"value":"/ number can only appear as a repetition quantifier. When the number","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":15299,"byte_end":15369,"line_start":89,"line_end":89,"column_start":5,"column_end":75}},{"value":"/ in a repetition quantifier is empty, then it gets its own specialized","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":15374,"byte_end":15447,"line_start":90,"line_end":90,"column_start":5,"column_end":78}},{"value":"/ error, `RepetitionCountDecimalEmpty`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":15452,"byte_end":15493,"line_start":91,"line_end":91,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2036},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":15584,"byte_end":15598,"line_start":94,"line_end":94,"column_start":5,"column_end":19},"name":"DecimalInvalid","qualname":"::ast::ErrorKind::DecimalInvalid","value":"ErrorKind::DecimalInvalid","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" An invalid decimal number was given where one was expected.\n","sig":null,"attributes":[{"value":"/ An invalid decimal number was given where one was expected.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":15516,"byte_end":15579,"line_start":93,"line_end":93,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2038},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":15647,"byte_end":15661,"line_start":96,"line_end":96,"column_start":5,"column_end":19},"name":"EscapeHexEmpty","qualname":"::ast::ErrorKind::EscapeHexEmpty","value":"ErrorKind::EscapeHexEmpty","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" A bracketed hex literal was empty.\n","sig":null,"attributes":[{"value":"/ A bracketed hex literal was empty.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":15604,"byte_end":15642,"line_start":95,"line_end":95,"column_start":5,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2040},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":15745,"byte_end":15761,"line_start":98,"line_end":98,"column_start":5,"column_end":21},"name":"EscapeHexInvalid","qualname":"::ast::ErrorKind::EscapeHexInvalid","value":"ErrorKind::EscapeHexInvalid","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" A bracketed hex literal did not correspond to a Unicode scalar value.\n","sig":null,"attributes":[{"value":"/ A bracketed hex literal did not correspond to a Unicode scalar value.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":15667,"byte_end":15740,"line_start":97,"line_end":97,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2042},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":15815,"byte_end":15836,"line_start":100,"line_end":100,"column_start":5,"column_end":26},"name":"EscapeHexInvalidDigit","qualname":"::ast::ErrorKind::EscapeHexInvalidDigit","value":"ErrorKind::EscapeHexInvalidDigit","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" An invalid hexadecimal digit was found.\n","sig":null,"attributes":[{"value":"/ An invalid hexadecimal digit was found.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":15767,"byte_end":15810,"line_start":99,"line_end":99,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2044},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":15905,"byte_end":15924,"line_start":102,"line_end":102,"column_start":5,"column_end":24},"name":"EscapeUnexpectedEof","qualname":"::ast::ErrorKind::EscapeUnexpectedEof","value":"ErrorKind::EscapeUnexpectedEof","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" EOF was found before an escape sequence was completed.\n","sig":null,"attributes":[{"value":"/ EOF was found before an escape sequence was completed.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":15842,"byte_end":15900,"line_start":101,"line_end":101,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2046},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":15971,"byte_end":15989,"line_start":104,"line_end":104,"column_start":5,"column_end":23},"name":"EscapeUnrecognized","qualname":"::ast::ErrorKind::EscapeUnrecognized","value":"ErrorKind::EscapeUnrecognized","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" An unrecognized escape sequence.\n","sig":null,"attributes":[{"value":"/ An unrecognized escape sequence.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":15930,"byte_end":15966,"line_start":103,"line_end":103,"column_start":5,"column_end":41}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2048},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":16064,"byte_end":16084,"line_start":106,"line_end":106,"column_start":5,"column_end":25},"name":"FlagDanglingNegation","qualname":"::ast::ErrorKind::FlagDanglingNegation","value":"ErrorKind::FlagDanglingNegation","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" A dangling negation was used when setting flags, e.g., `i-`.\n","sig":null,"attributes":[{"value":"/ A dangling negation was used when setting flags, e.g., `i-`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":15995,"byte_end":16059,"line_start":105,"line_end":105,"column_start":5,"column_end":69}}]},{"kind":"StructVariant","id":{"krate":0,"index":2050},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":16134,"byte_end":16147,"line_start":108,"line_end":108,"column_start":5,"column_end":18},"name":"FlagDuplicate","qualname":"::ast::ErrorKind::FlagDuplicate","value":"ErrorKind::FlagDuplicate { original }","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" A flag was used twice, e.g., `i-i`.\n","sig":null,"attributes":[{"value":"/ A flag was used twice, e.g., `i-i`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":16090,"byte_end":16129,"line_start":107,"line_end":107,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2051},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":16266,"byte_end":16274,"line_start":111,"line_end":111,"column_start":9,"column_end":17},"name":"original","qualname":"::ast::ErrorKind::FlagDuplicate::original","value":"ast::Span","parent":{"krate":0,"index":2050},"children":[],"decl_id":null,"docs":" The position of the original flag. The error position\n points to the duplicate flag.\n","sig":null,"attributes":[{"value":"/ The position of the original flag. The error position","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":16158,"byte_end":16215,"line_start":109,"line_end":109,"column_start":9,"column_end":66}},{"value":"/ points to the duplicate flag.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":16224,"byte_end":16257,"line_start":110,"line_end":110,"column_start":9,"column_end":42}}]},{"kind":"StructVariant","id":{"krate":0,"index":2052},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":16353,"byte_end":16373,"line_start":114,"line_end":114,"column_start":5,"column_end":25},"name":"FlagRepeatedNegation","qualname":"::ast::ErrorKind::FlagRepeatedNegation","value":"ErrorKind::FlagRepeatedNegation { original }","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" The negation operator was used twice, e.g., `-i-s`.\n","sig":null,"attributes":[{"value":"/ The negation operator was used twice, e.g., `-i-s`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":16293,"byte_end":16348,"line_start":113,"line_end":113,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":2053},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":16518,"byte_end":16526,"line_start":117,"line_end":117,"column_start":9,"column_end":17},"name":"original","qualname":"::ast::ErrorKind::FlagRepeatedNegation::original","value":"ast::Span","parent":{"krate":0,"index":2052},"children":[],"decl_id":null,"docs":" The position of the original negation operator. The error position\n points to the duplicate negation operator.\n","sig":null,"attributes":[{"value":"/ The position of the original negation operator. The error position","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":16384,"byte_end":16454,"line_start":115,"line_end":115,"column_start":9,"column_end":79}},{"value":"/ points to the duplicate negation operator.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":16463,"byte_end":16509,"line_start":116,"line_end":116,"column_start":9,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2054},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":16594,"byte_end":16611,"line_start":120,"line_end":120,"column_start":5,"column_end":22},"name":"FlagUnexpectedEof","qualname":"::ast::ErrorKind::FlagUnexpectedEof","value":"ErrorKind::FlagUnexpectedEof","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" Expected a flag but got EOF, e.g., `(?`.\n","sig":null,"attributes":[{"value":"/ Expected a flag but got EOF, e.g., `(?`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":16545,"byte_end":16589,"line_start":119,"line_end":119,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2056},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":16655,"byte_end":16671,"line_start":122,"line_end":122,"column_start":5,"column_end":21},"name":"FlagUnrecognized","qualname":"::ast::ErrorKind::FlagUnrecognized","value":"ErrorKind::FlagUnrecognized","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" Unrecognized flag, e.g., `a`.\n","sig":null,"attributes":[{"value":"/ Unrecognized flag, e.g., `a`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":16617,"byte_end":16650,"line_start":121,"line_end":121,"column_start":5,"column_end":38}}]},{"kind":"StructVariant","id":{"krate":0,"index":2058},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":16721,"byte_end":16739,"line_start":124,"line_end":124,"column_start":5,"column_end":23},"name":"GroupNameDuplicate","qualname":"::ast::ErrorKind::GroupNameDuplicate","value":"ErrorKind::GroupNameDuplicate { original }","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" A duplicate capture name was found.\n","sig":null,"attributes":[{"value":"/ A duplicate capture name was found.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":16677,"byte_end":16716,"line_start":123,"line_end":123,"column_start":5,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2059},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":16896,"byte_end":16904,"line_start":127,"line_end":127,"column_start":9,"column_end":17},"name":"original","qualname":"::ast::ErrorKind::GroupNameDuplicate::original","value":"ast::Span","parent":{"krate":0,"index":2058},"children":[],"decl_id":null,"docs":" The position of the initial occurrence of the capture name. The\n error position itself points to the duplicate occurrence.\n","sig":null,"attributes":[{"value":"/ The position of the initial occurrence of the capture name. The","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":16750,"byte_end":16817,"line_start":125,"line_end":125,"column_start":9,"column_end":76}},{"value":"/ error position itself points to the duplicate occurrence.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":16826,"byte_end":16887,"line_start":126,"line_end":126,"column_start":9,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2060},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":16981,"byte_end":16995,"line_start":130,"line_end":130,"column_start":5,"column_end":19},"name":"GroupNameEmpty","qualname":"::ast::ErrorKind::GroupNameEmpty","value":"ErrorKind::GroupNameEmpty","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" A capture group name is empty, e.g., `(?P<>abc)`.\n","sig":null,"attributes":[{"value":"/ A capture group name is empty, e.g., `(?P<>abc)`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":16923,"byte_end":16976,"line_start":129,"line_end":129,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2062},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":17201,"byte_end":17217,"line_start":134,"line_end":134,"column_start":5,"column_end":21},"name":"GroupNameInvalid","qualname":"::ast::ErrorKind::GroupNameInvalid","value":"ErrorKind::GroupNameInvalid","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" An invalid character was seen for a capture group name. This includes\n errors where the first character is a digit (even though subsequent\n characters are allowed to be digits).\n","sig":null,"attributes":[{"value":"/ An invalid character was seen for a capture group name. This includes","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":17001,"byte_end":17074,"line_start":131,"line_end":131,"column_start":5,"column_end":78}},{"value":"/ errors where the first character is a digit (even though subsequent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":17079,"byte_end":17150,"line_start":132,"line_end":132,"column_start":5,"column_end":76}},{"value":"/ characters are allowed to be digits).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":17155,"byte_end":17196,"line_start":133,"line_end":133,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2064},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":17290,"byte_end":17312,"line_start":136,"line_end":136,"column_start":5,"column_end":27},"name":"GroupNameUnexpectedEof","qualname":"::ast::ErrorKind::GroupNameUnexpectedEof","value":"ErrorKind::GroupNameUnexpectedEof","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" A closing `>` could not be found for a capture group name.\n","sig":null,"attributes":[{"value":"/ A closing `>` could not be found for a capture group name.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":17223,"byte_end":17285,"line_start":135,"line_end":135,"column_start":5,"column_end":67}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2066},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":17438,"byte_end":17451,"line_start":140,"line_end":140,"column_start":5,"column_end":18},"name":"GroupUnclosed","qualname":"::ast::ErrorKind::GroupUnclosed","value":"ErrorKind::GroupUnclosed","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" An unclosed group, e.g., `(ab`.","sig":null,"attributes":[{"value":"/ An unclosed group, e.g., `(ab`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":17318,"byte_end":17353,"line_start":137,"line_end":137,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":17358,"byte_end":17361,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ The span of this error corresponds to the unclosed parenthesis.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":17366,"byte_end":17433,"line_start":139,"line_end":139,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2068},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":17497,"byte_end":17510,"line_start":142,"line_end":142,"column_start":5,"column_end":18},"name":"GroupUnopened","qualname":"::ast::ErrorKind::GroupUnopened","value":"ErrorKind::GroupUnopened","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" An unopened group, e.g., `ab)`.\n","sig":null,"attributes":[{"value":"/ An unopened group, e.g., `ab)`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":17457,"byte_end":17492,"line_start":141,"line_end":141,"column_start":5,"column_end":40}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2070},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":17622,"byte_end":17639,"line_start":145,"line_end":145,"column_start":5,"column_end":22},"name":"NestLimitExceeded","qualname":"::ast::ErrorKind::NestLimitExceeded","value":"ErrorKind::NestLimitExceeded(u32)","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" The nest limit was exceeded. The limit stored here is the limit\n configured in the parser.\n","sig":null,"attributes":[{"value":"/ The nest limit was exceeded. The limit stored here is the limit","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":17516,"byte_end":17583,"line_start":143,"line_end":143,"column_start":5,"column_end":72}},{"value":"/ configured in the parser.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":17588,"byte_end":17617,"line_start":144,"line_end":144,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":2072},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":17640,"byte_end":17643,"line_start":145,"line_end":145,"column_start":23,"column_end":26},"name":"0","qualname":"::ast::ErrorKind::NestLimitExceeded::0","value":"u32","parent":{"krate":0,"index":2070},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2073},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":17789,"byte_end":17811,"line_start":148,"line_end":148,"column_start":5,"column_end":27},"name":"RepetitionCountInvalid","qualname":"::ast::ErrorKind::RepetitionCountInvalid","value":"ErrorKind::RepetitionCountInvalid","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" The range provided in a counted repetition operator is invalid. The\n range is invalid if the start is greater than the end.\n","sig":null,"attributes":[{"value":"/ The range provided in a counted repetition operator is invalid. The","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":17650,"byte_end":17721,"line_start":146,"line_end":146,"column_start":5,"column_end":76}},{"value":"/ range is invalid if the start is greater than the end.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":17726,"byte_end":17784,"line_start":147,"line_end":147,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2075},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":17932,"byte_end":17959,"line_start":151,"line_end":151,"column_start":5,"column_end":32},"name":"RepetitionCountDecimalEmpty","qualname":"::ast::ErrorKind::RepetitionCountDecimalEmpty","value":"ErrorKind::RepetitionCountDecimalEmpty","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" An opening `{` was not followed by a valid decimal value.\n For example, `x{}` or `x{]}` would fail.\n","sig":null,"attributes":[{"value":"/ An opening `{` was not followed by a valid decimal value.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":17817,"byte_end":17878,"line_start":149,"line_end":149,"column_start":5,"column_end":66}},{"value":"/ For example, `x{}` or `x{]}` would fail.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":17883,"byte_end":17927,"line_start":150,"line_end":150,"column_start":5,"column_end":49}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2077},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":18033,"byte_end":18056,"line_start":153,"line_end":153,"column_start":5,"column_end":28},"name":"RepetitionCountUnclosed","qualname":"::ast::ErrorKind::RepetitionCountUnclosed","value":"ErrorKind::RepetitionCountUnclosed","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" An opening `{` was found with no corresponding closing `}`.\n","sig":null,"attributes":[{"value":"/ An opening `{` was found with no corresponding closing `}`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":17965,"byte_end":18028,"line_start":152,"line_end":152,"column_start":5,"column_end":68}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2079},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":18370,"byte_end":18387,"line_start":158,"line_end":158,"column_start":5,"column_end":22},"name":"RepetitionMissing","qualname":"::ast::ErrorKind::RepetitionMissing","value":"ErrorKind::RepetitionMissing","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" A repetition operator was applied to a missing sub-expression. This\n occurs, for example, in the regex consisting of just a `*` or even\n `(?i)*`. It is, however, possible to create a repetition operating on\n an empty sub-expression. For example, `()*` is still considered valid.\n","sig":null,"attributes":[{"value":"/ A repetition operator was applied to a missing sub-expression. This","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":18062,"byte_end":18133,"line_start":154,"line_end":154,"column_start":5,"column_end":76}},{"value":"/ occurs, for example, in the regex consisting of just a `*` or even","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":18138,"byte_end":18208,"line_start":155,"line_end":155,"column_start":5,"column_end":75}},{"value":"/ `(?i)*`. It is, however, possible to create a repetition operating on","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":18213,"byte_end":18286,"line_start":156,"line_end":156,"column_start":5,"column_end":78}},{"value":"/ an empty sub-expression. For example, `()*` is still considered valid.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":18291,"byte_end":18365,"line_start":157,"line_end":157,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2081},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":18518,"byte_end":18537,"line_start":161,"line_end":161,"column_start":5,"column_end":24},"name":"UnicodeClassInvalid","qualname":"::ast::ErrorKind::UnicodeClassInvalid","value":"ErrorKind::UnicodeClassInvalid","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" The Unicode class is not valid. This typically occurs when a `\\p` is\n followed by something other than a `{`.\n","sig":null,"attributes":[{"value":"/ The Unicode class is not valid. This typically occurs when a `\\p` is","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":18393,"byte_end":18465,"line_start":159,"line_end":159,"column_start":5,"column_end":77}},{"value":"/ followed by something other than a `{`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":18470,"byte_end":18513,"line_start":160,"line_end":160,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2083},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":18746,"byte_end":18770,"line_start":165,"line_end":165,"column_start":5,"column_end":29},"name":"UnsupportedBackreference","qualname":"::ast::ErrorKind::UnsupportedBackreference","value":"ErrorKind::UnsupportedBackreference","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" When octal support is disabled, this error is produced when an octal\n escape is used. The octal escape is assumed to be an invocation of\n a backreference, which is the common case.\n","sig":null,"attributes":[{"value":"/ When octal support is disabled, this error is produced when an octal","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":18543,"byte_end":18615,"line_start":162,"line_end":162,"column_start":5,"column_end":77}},{"value":"/ escape is used. The octal escape is assumed to be an invocation of","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":18620,"byte_end":18690,"line_start":163,"line_end":163,"column_start":5,"column_end":75}},{"value":"/ a backreference, which is the common case.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":18695,"byte_end":18741,"line_start":164,"line_end":164,"column_start":5,"column_end":51}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2085},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":19127,"byte_end":19148,"line_start":171,"line_end":171,"column_start":5,"column_end":26},"name":"UnsupportedLookAround","qualname":"::ast::ErrorKind::UnsupportedLookAround","value":"ErrorKind::UnsupportedLookAround","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" When syntax similar to PCRE's look-around is used, this error is\n returned. Some example syntaxes that are rejected include, but are\n not necessarily limited to, `(?=re)`, `(?!re)`, `(?<=re)` and\n `(?<!re)`. Note that all of these syntaxes are otherwise invalid; this\n error is used to improve the user experience.\n","sig":null,"attributes":[{"value":"/ When syntax similar to PCRE's look-around is used, this error is","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":18776,"byte_end":18844,"line_start":166,"line_end":166,"column_start":5,"column_end":73}},{"value":"/ returned. Some example syntaxes that are rejected include, but are","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":18849,"byte_end":18919,"line_start":167,"line_end":167,"column_start":5,"column_end":75}},{"value":"/ not necessarily limited to, `(?=re)`, `(?!re)`, `(?<=re)` and","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":18924,"byte_end":18989,"line_start":168,"line_end":168,"column_start":5,"column_end":70}},{"value":"/ `(?<!re)`. Note that all of these syntaxes are otherwise invalid; this","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":18994,"byte_end":19068,"line_start":169,"line_end":169,"column_start":5,"column_end":79}},{"value":"/ error is used to improve the user experience.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":19073,"byte_end":19122,"line_start":170,"line_end":170,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2087},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":19428,"byte_end":19443,"line_start":178,"line_end":178,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::ast::ErrorKind::__Nonexhaustive","value":"ErrorKind::__Nonexhaustive","parent":{"krate":0,"index":2023},"children":[],"decl_id":null,"docs":" Hints that destructuring should not be exhaustive.","sig":null,"attributes":[{"value":"/ Hints that destructuring should not be exhaustive.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":19154,"byte_end":19208,"line_start":172,"line_end":172,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":19213,"byte_end":19216,"line_start":173,"line_end":173,"column_start":5,"column_end":8}},{"value":"/ This enum may grow additional variants, so this makes sure clients","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":19221,"byte_end":19291,"line_start":174,"line_end":174,"column_start":5,"column_end":75}},{"value":"/ don't count on exhaustive matching. (Otherwise, adding a new variant","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":19296,"byte_end":19368,"line_start":175,"line_end":175,"column_start":5,"column_end":77}},{"value":"/ could break existing code.)","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":19373,"byte_end":19404,"line_start":176,"line_end":176,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":2023},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":14292,"byte_end":14301,"line_start":69,"line_end":69,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::ast::ErrorKind","value":"enum ErrorKind {\n    CaptureLimitExceeded,\n    ClassEscapeInvalid,\n    ClassRangeInvalid,\n    ClassRangeLiteral,\n    ClassUnclosed,\n    DecimalEmpty,\n    DecimalInvalid,\n    EscapeHexEmpty,\n    EscapeHexInvalid,\n    EscapeHexInvalidDigit,\n    EscapeUnexpectedEof,\n    EscapeUnrecognized,\n    FlagDanglingNegation,\n    FlagDuplicate {\n            original: Span,\n        },\n    FlagRepeatedNegation {\n            original: Span,\n        },\n    FlagUnexpectedEof,\n    FlagUnrecognized,\n    GroupNameDuplicate {\n            original: Span,\n        },\n    GroupNameEmpty,\n    GroupNameInvalid,\n    GroupNameUnexpectedEof,\n    GroupUnclosed,\n    GroupUnopened,\n    NestLimitExceeded(u32),\n    RepetitionCountInvalid,\n    RepetitionCountDecimalEmpty,\n    RepetitionCountUnclosed,\n    RepetitionMissing,\n    UnicodeClassInvalid,\n    UnsupportedBackreference,\n    UnsupportedLookAround,\n    __Nonexhaustive,\n}","parent":null,"children":[{"krate":0,"index":2024},{"krate":0,"index":2026},{"krate":0,"index":2028},{"krate":0,"index":2030},{"krate":0,"index":2032},{"krate":0,"index":2034},{"krate":0,"index":2036},{"krate":0,"index":2038},{"krate":0,"index":2040},{"krate":0,"index":2042},{"krate":0,"index":2044},{"krate":0,"index":2046},{"krate":0,"index":2048},{"krate":0,"index":2050},{"krate":0,"index":2052},{"krate":0,"index":2054},{"krate":0,"index":2056},{"krate":0,"index":2058},{"krate":0,"index":2060},{"krate":0,"index":2062},{"krate":0,"index":2064},{"krate":0,"index":2066},{"krate":0,"index":2068},{"krate":0,"index":2070},{"krate":0,"index":2073},{"krate":0,"index":2075},{"krate":0,"index":2077},{"krate":0,"index":2079},{"krate":0,"index":2081},{"krate":0,"index":2083},{"krate":0,"index":2085},{"krate":0,"index":2087}],"decl_id":null,"docs":" The type of an error that occurred while building an AST.\n","sig":null,"attributes":[{"value":"/ The type of an error that occurred while building an AST.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":14182,"byte_end":14243,"line_start":67,"line_end":67,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":393},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":19588,"byte_end":19599,"line_start":184,"line_end":184,"column_start":8,"column_end":19},"name":"description","qualname":"<Error as std::error::Error>::description","value":"fn description<'_>(&'_ Self) -> &'_ str","parent":{"krate":1,"index":2576},"children":[],"decl_id":{"krate":1,"index":2579},"docs":"","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":19560,"byte_end":19580,"line_start":183,"line_end":183,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":396},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":21695,"byte_end":21698,"line_start":223,"line_end":223,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Error as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":398},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":21852,"byte_end":21855,"line_start":229,"line_end":229,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ErrorKind as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2100},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":25697,"byte_end":25701,"line_start":323,"line_end":323,"column_start":12,"column_end":16},"name":"Span","qualname":"::ast::Span","value":"Span { start, end }","parent":null,"children":[{"krate":0,"index":2101},{"krate":0,"index":2102}],"decl_id":null,"docs":" Span represents the position information of a single AST item.","sig":null,"attributes":[{"value":"/ Span represents the position information of a single AST item.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":25455,"byte_end":25521,"line_start":318,"line_end":318,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":25522,"byte_end":25525,"line_start":319,"line_end":319,"column_start":1,"column_end":4}},{"value":"/ All span positions are absolute byte offsets that can be used on the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":25526,"byte_end":25598,"line_start":320,"line_end":320,"column_start":1,"column_end":73}},{"value":"/ original regular expression that was parsed.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":25599,"byte_end":25647,"line_start":321,"line_end":321,"column_start":1,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":2101},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":25743,"byte_end":25748,"line_start":325,"line_end":325,"column_start":9,"column_end":14},"name":"start","qualname":"::ast::Span::start","value":"ast::Position","parent":{"krate":0,"index":2100},"children":[],"decl_id":null,"docs":" The start byte offset.\n","sig":null,"attributes":[{"value":"/ The start byte offset.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":25708,"byte_end":25734,"line_start":324,"line_end":324,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":2102},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":25797,"byte_end":25800,"line_start":327,"line_end":327,"column_start":9,"column_end":12},"name":"end","qualname":"::ast::Span::end","value":"ast::Position","parent":{"krate":0,"index":2100},"children":[],"decl_id":null,"docs":" The end byte offset.\n","sig":null,"attributes":[{"value":"/ The end byte offset.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":25764,"byte_end":25788,"line_start":326,"line_end":326,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":401},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":25849,"byte_end":25852,"line_start":331,"line_end":331,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Span as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":403},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":26001,"byte_end":26004,"line_start":337,"line_end":337,"column_start":8,"column_end":11},"name":"cmp","qualname":"<Span as std::cmp::Ord>::cmp","value":"fn cmp<'_, '_>(&'_ Self, &'_ Span) -> Ordering","parent":{"krate":2,"index":2951},"children":[],"decl_id":{"krate":2,"index":2952},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":405},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":26149,"byte_end":26160,"line_start":343,"line_end":343,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<Span as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ Span) -> Option<Ordering>","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2963},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2113},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":26450,"byte_end":26458,"line_start":353,"line_end":353,"column_start":12,"column_end":20},"name":"Position","qualname":"::ast::Position","value":"Position { offset, line, column }","parent":null,"children":[{"krate":0,"index":2114},{"krate":0,"index":2115},{"krate":0,"index":2116}],"decl_id":null,"docs":" A single position in a regular expression.","sig":null,"attributes":[{"value":"/ A single position in a regular expression.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":26243,"byte_end":26289,"line_start":348,"line_end":348,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":26290,"byte_end":26293,"line_start":349,"line_end":349,"column_start":1,"column_end":4}},{"value":"/ A position encodes one half of a span, and include the byte offset, line","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":26294,"byte_end":26370,"line_start":350,"line_end":350,"column_start":1,"column_end":77}},{"value":"/ number and column number.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":26371,"byte_end":26400,"line_start":351,"line_end":351,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2114},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":26600,"byte_end":26606,"line_start":356,"line_end":356,"column_start":9,"column_end":15},"name":"offset","qualname":"::ast::Position::offset","value":"usize","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":" The absolute offset of this position, starting at `0` from the\n beginning of the regular expression pattern string.\n","sig":null,"attributes":[{"value":"/ The absolute offset of this position, starting at `0` from the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":26465,"byte_end":26531,"line_start":354,"line_end":354,"column_start":5,"column_end":71}},{"value":"/ beginning of the regular expression pattern string.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":26536,"byte_end":26591,"line_start":355,"line_end":355,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":2115},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":26665,"byte_end":26669,"line_start":358,"line_end":358,"column_start":9,"column_end":13},"name":"line","qualname":"::ast::Position::line","value":"usize","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":" The line number, starting at `1`.\n","sig":null,"attributes":[{"value":"/ The line number, starting at `1`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":26619,"byte_end":26656,"line_start":357,"line_end":357,"column_start":5,"column_end":42}}]},{"kind":"Field","id":{"krate":0,"index":2116},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":26742,"byte_end":26748,"line_start":360,"line_end":360,"column_start":9,"column_end":15},"name":"column","qualname":"::ast::Position::column","value":"usize","parent":{"krate":0,"index":2113},"children":[],"decl_id":null,"docs":" The approximate column number, starting at `1`.\n","sig":null,"attributes":[{"value":"/ The approximate column number, starting at `1`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":26682,"byte_end":26733,"line_start":359,"line_end":359,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":407},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":26798,"byte_end":26801,"line_start":364,"line_end":364,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Position as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":409},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":27034,"byte_end":27037,"line_start":374,"line_end":374,"column_start":8,"column_end":11},"name":"cmp","qualname":"<Position as std::cmp::Ord>::cmp","value":"fn cmp<'_, '_>(&'_ Self, &'_ Position) -> Ordering","parent":{"krate":2,"index":2951},"children":[],"decl_id":{"krate":2,"index":2952},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":411},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":27163,"byte_end":27174,"line_start":380,"line_end":380,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<Position as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ Position) -> Option<Ordering>","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":413},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":27336,"byte_end":27339,"line_start":387,"line_end":387,"column_start":12,"column_end":15},"name":"new","qualname":"<Span>::new","value":"fn new(Position, Position) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Create a new span with the given positions.\n","sig":null,"attributes":[{"value":"/ Create a new span with the given positions.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":27277,"byte_end":27324,"line_start":386,"line_end":386,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":414},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":27501,"byte_end":27506,"line_start":392,"line_end":392,"column_start":12,"column_end":17},"name":"splat","qualname":"<Span>::splat","value":"fn splat(Position) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Create a new span using the given position as the start and end.\n","sig":null,"attributes":[{"value":"/ Create a new span using the given position as the start and end.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":27421,"byte_end":27489,"line_start":391,"line_end":391,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":415},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":27671,"byte_end":27681,"line_start":398,"line_end":398,"column_start":12,"column_end":22},"name":"with_start","qualname":"<Span>::with_start","value":"fn with_start(Self, Position) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Create a new span by replacing the starting the position with the one\n given.\n","sig":null,"attributes":[{"value":"/ Create a new span by replacing the starting the position with the one","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":27571,"byte_end":27644,"line_start":396,"line_end":396,"column_start":5,"column_end":78}},{"value":"/ given.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":27649,"byte_end":27659,"line_start":397,"line_end":397,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":416},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":27858,"byte_end":27866,"line_start":404,"line_end":404,"column_start":12,"column_end":20},"name":"with_end","qualname":"<Span>::with_end","value":"fn with_end(Self, Position) -> Span","parent":null,"children":[],"decl_id":null,"docs":" Create a new span by replacing the ending the position with the one\n given.\n","sig":null,"attributes":[{"value":"/ Create a new span by replacing the ending the position with the one","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":27760,"byte_end":27831,"line_start":402,"line_end":402,"column_start":5,"column_end":76}},{"value":"/ given.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":27836,"byte_end":27846,"line_start":403,"line_end":403,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":417},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":28021,"byte_end":28032,"line_start":409,"line_end":409,"column_start":12,"column_end":23},"name":"is_one_line","qualname":"<Span>::is_one_line","value":"fn is_one_line<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if this span occurs on a single line.\n","sig":null,"attributes":[{"value":"/ Returns true if and only if this span occurs on a single line.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":27943,"byte_end":28009,"line_start":408,"line_end":408,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":418},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":28261,"byte_end":28269,"line_start":415,"line_end":415,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Span>::is_empty","value":"fn is_empty<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if this span is empty. That is, it points to\n a single position in the concrete syntax of a regular expression.\n","sig":null,"attributes":[{"value":"/ Returns true if and only if this span is empty. That is, it points to","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":28102,"byte_end":28175,"line_start":413,"line_end":413,"column_start":5,"column_end":78}},{"value":"/ a single position in the concrete syntax of a regular expression.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":28180,"byte_end":28249,"line_start":414,"line_end":414,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":420},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":28712,"byte_end":28715,"line_start":429,"line_end":429,"column_start":12,"column_end":15},"name":"new","qualname":"<Position>::new","value":"fn new(usize, usize, usize) -> Position","parent":null,"children":[],"decl_id":null,"docs":" Create a new position with the given information.","sig":null,"attributes":[{"value":"/ Create a new position with the given information.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":28361,"byte_end":28414,"line_start":421,"line_end":421,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":28419,"byte_end":28422,"line_start":422,"line_end":422,"column_start":5,"column_end":8}},{"value":"/ `offset` is the absolute offset of the position, starting at `0` from","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":28427,"byte_end":28500,"line_start":423,"line_end":423,"column_start":5,"column_end":78}},{"value":"/ the beginning of the regular expression pattern string.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":28505,"byte_end":28564,"line_start":424,"line_end":424,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":28569,"byte_end":28572,"line_start":425,"line_end":425,"column_start":5,"column_end":8}},{"value":"/ `line` is the line number, starting at `1`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":28577,"byte_end":28624,"line_start":426,"line_end":426,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":28629,"byte_end":28632,"line_start":427,"line_end":427,"column_start":5,"column_end":8}},{"value":"/ `column` is the approximate column number, starting at `1`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":28637,"byte_end":28700,"line_start":428,"line_end":428,"column_start":5,"column_end":68}}]},{"kind":"Struct","id":{"krate":0,"index":2127},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":29135,"byte_end":29147,"line_start":441,"line_end":441,"column_start":12,"column_end":24},"name":"WithComments","qualname":"::ast::WithComments","value":"WithComments { ast, comments }","parent":null,"children":[{"krate":0,"index":2128},{"krate":0,"index":2129}],"decl_id":null,"docs":" An abstract syntax tree for a singular expression along with comments\n found.","sig":null,"attributes":[{"value":"/ An abstract syntax tree for a singular expression along with comments","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":28824,"byte_end":28897,"line_start":434,"line_end":434,"column_start":1,"column_end":74}},{"value":"/ found.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":28898,"byte_end":28908,"line_start":435,"line_end":435,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":28909,"byte_end":28912,"line_start":436,"line_end":436,"column_start":1,"column_end":4}},{"value":"/ Comments are not stored in the tree itself to avoid complexity. Each","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":28913,"byte_end":28985,"line_start":437,"line_end":437,"column_start":1,"column_end":73}},{"value":"/ comment contains a span of precisely where it occurred in the original","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":28986,"byte_end":29060,"line_start":438,"line_end":438,"column_start":1,"column_end":75}},{"value":"/ regular expression.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":29061,"byte_end":29084,"line_start":439,"line_end":439,"column_start":1,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":2128},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":29182,"byte_end":29185,"line_start":443,"line_end":443,"column_start":9,"column_end":12},"name":"ast","qualname":"::ast::WithComments::ast","value":"ast::Ast","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" The actual ast.\n","sig":null,"attributes":[{"value":"/ The actual ast.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":29154,"byte_end":29173,"line_start":442,"line_end":442,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":2129},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":29263,"byte_end":29271,"line_start":445,"line_end":445,"column_start":9,"column_end":17},"name":"comments","qualname":"::ast::WithComments::comments","value":"std::vec::Vec<ast::Comment>","parent":{"krate":0,"index":2127},"children":[],"decl_id":null,"docs":" All comments found in the original regular expression.\n","sig":null,"attributes":[{"value":"/ All comments found in the original regular expression.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":29196,"byte_end":29254,"line_start":444,"line_end":444,"column_start":5,"column_end":63}}]},{"kind":"Struct","id":{"krate":0,"index":2141},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":29494,"byte_end":29501,"line_start":453,"line_end":453,"column_start":12,"column_end":19},"name":"Comment","qualname":"::ast::Comment","value":"Comment { span, comment }","parent":null,"children":[{"krate":0,"index":2142},{"krate":0,"index":2143}],"decl_id":null,"docs":" A comment from a regular expression with an associated span.","sig":null,"attributes":[{"value":"/ A comment from a regular expression with an associated span.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":29290,"byte_end":29354,"line_start":448,"line_end":448,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":29355,"byte_end":29358,"line_start":449,"line_end":449,"column_start":1,"column_end":4}},{"value":"/ A regular expression can only contain comments when the `x` flag is","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":29359,"byte_end":29430,"line_start":450,"line_end":450,"column_start":1,"column_end":72}},{"value":"/ enabled.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":29431,"byte_end":29443,"line_start":451,"line_end":451,"column_start":1,"column_end":13}}]},{"kind":"Field","id":{"krate":0,"index":2142},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":29591,"byte_end":29595,"line_start":455,"line_end":455,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::Comment::span","value":"ast::Span","parent":{"krate":0,"index":2141},"children":[],"decl_id":null,"docs":" The span of this comment, including the beginning `#` and ending `\\n`.\n","sig":null,"attributes":[{"value":"/ The span of this comment, including the beginning `#` and ending `\\n`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":29508,"byte_end":29582,"line_start":454,"line_end":454,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":2143},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":29752,"byte_end":29759,"line_start":458,"line_end":458,"column_start":9,"column_end":16},"name":"comment","qualname":"::ast::Comment::comment","value":"std::string::String","parent":{"krate":0,"index":2141},"children":[],"decl_id":null,"docs":" The comment text, starting with the first character following the `#`\n and ending with the last character preceding the `\\n`.\n","sig":null,"attributes":[{"value":"/ The comment text, starting with the first character following the `#`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":29607,"byte_end":29680,"line_start":456,"line_end":456,"column_start":5,"column_end":78}},{"value":"/ and ending with the last character preceding the `\\n`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":29685,"byte_end":29743,"line_start":457,"line_end":457,"column_start":5,"column_end":63}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2156},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":30206,"byte_end":30211,"line_start":471,"line_end":471,"column_start":5,"column_end":10},"name":"Empty","qualname":"::ast::Ast::Empty","value":"Ast::Empty(Span)","parent":{"krate":0,"index":2155},"children":[],"decl_id":null,"docs":" An empty regex that matches everything.\n","sig":null,"attributes":[{"value":"/ An empty regex that matches everything.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":30158,"byte_end":30201,"line_start":470,"line_end":470,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":2158},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":30212,"byte_end":30216,"line_start":471,"line_end":471,"column_start":11,"column_end":15},"name":"0","qualname":"::ast::Ast::Empty::0","value":"ast::Span","parent":{"krate":0,"index":2156},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2159},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":30262,"byte_end":30267,"line_start":473,"line_end":473,"column_start":5,"column_end":10},"name":"Flags","qualname":"::ast::Ast::Flags","value":"Ast::Flags(SetFlags)","parent":{"krate":0,"index":2155},"children":[],"decl_id":null,"docs":" A set of flags, e.g., `(?is)`.\n","sig":null,"attributes":[{"value":"/ A set of flags, e.g., `(?is)`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":30223,"byte_end":30257,"line_start":472,"line_end":472,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":2161},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":30268,"byte_end":30276,"line_start":473,"line_end":473,"column_start":11,"column_end":19},"name":"0","qualname":"::ast::Ast::Flags::0","value":"ast::SetFlags","parent":{"krate":0,"index":2159},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2162},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":30352,"byte_end":30359,"line_start":475,"line_end":475,"column_start":5,"column_end":12},"name":"Literal","qualname":"::ast::Ast::Literal","value":"Ast::Literal(Literal)","parent":{"krate":0,"index":2155},"children":[],"decl_id":null,"docs":" A single character literal, which includes escape sequences.\n","sig":null,"attributes":[{"value":"/ A single character literal, which includes escape sequences.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":30283,"byte_end":30347,"line_start":474,"line_end":474,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":2164},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":30360,"byte_end":30367,"line_start":475,"line_end":475,"column_start":13,"column_end":20},"name":"0","qualname":"::ast::Ast::Literal::0","value":"ast::Literal","parent":{"krate":0,"index":2162},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2165},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":30409,"byte_end":30412,"line_start":477,"line_end":477,"column_start":5,"column_end":8},"name":"Dot","qualname":"::ast::Ast::Dot","value":"Ast::Dot(Span)","parent":{"krate":0,"index":2155},"children":[],"decl_id":null,"docs":" The \"any character\" class.\n","sig":null,"attributes":[{"value":"/ The \"any character\" class.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":30374,"byte_end":30404,"line_start":476,"line_end":476,"column_start":5,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2167},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":30413,"byte_end":30417,"line_start":477,"line_end":477,"column_start":9,"column_end":13},"name":"0","qualname":"::ast::Ast::Dot::0","value":"ast::Span","parent":{"krate":0,"index":2165},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2168},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":30463,"byte_end":30472,"line_start":479,"line_end":479,"column_start":5,"column_end":14},"name":"Assertion","qualname":"::ast::Ast::Assertion","value":"Ast::Assertion(Assertion)","parent":{"krate":0,"index":2155},"children":[],"decl_id":null,"docs":" A single zero-width assertion.\n","sig":null,"attributes":[{"value":"/ A single zero-width assertion.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":30424,"byte_end":30458,"line_start":478,"line_end":478,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":2170},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":30473,"byte_end":30482,"line_start":479,"line_end":479,"column_start":15,"column_end":24},"name":"0","qualname":"::ast::Ast::Assertion::0","value":"ast::Assertion","parent":{"krate":0,"index":2168},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2171},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":30638,"byte_end":30643,"line_start":482,"line_end":482,"column_start":5,"column_end":10},"name":"Class","qualname":"::ast::Ast::Class","value":"Ast::Class(Class)","parent":{"krate":0,"index":2155},"children":[],"decl_id":null,"docs":" A single character class. This includes all forms of character classes\n except for `.`. e.g., `\\d`, `\\pN`, `[a-z]` and `[[:alpha:]]`.\n","sig":null,"attributes":[{"value":"/ A single character class. This includes all forms of character classes","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":30489,"byte_end":30563,"line_start":480,"line_end":480,"column_start":5,"column_end":79}},{"value":"/ except for `.`. e.g., `\\d`, `\\pN`, `[a-z]` and `[[:alpha:]]`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":30568,"byte_end":30633,"line_start":481,"line_end":481,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":2173},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":30644,"byte_end":30649,"line_start":482,"line_end":482,"column_start":11,"column_end":16},"name":"0","qualname":"::ast::Ast::Class::0","value":"ast::Class","parent":{"krate":0,"index":2171},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2174},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":30730,"byte_end":30740,"line_start":484,"line_end":484,"column_start":5,"column_end":15},"name":"Repetition","qualname":"::ast::Ast::Repetition","value":"Ast::Repetition(Repetition)","parent":{"krate":0,"index":2155},"children":[],"decl_id":null,"docs":" A repetition operator applied to an arbitrary regular expression.\n","sig":null,"attributes":[{"value":"/ A repetition operator applied to an arbitrary regular expression.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":30656,"byte_end":30725,"line_start":483,"line_end":483,"column_start":5,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":2176},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":30741,"byte_end":30751,"line_start":484,"line_end":484,"column_start":16,"column_end":26},"name":"0","qualname":"::ast::Ast::Repetition::0","value":"ast::Repetition","parent":{"krate":0,"index":2174},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2177},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":30796,"byte_end":30801,"line_start":486,"line_end":486,"column_start":5,"column_end":10},"name":"Group","qualname":"::ast::Ast::Group","value":"Ast::Group(Group)","parent":{"krate":0,"index":2155},"children":[],"decl_id":null,"docs":" A grouped regular expression.\n","sig":null,"attributes":[{"value":"/ A grouped regular expression.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":30758,"byte_end":30791,"line_start":485,"line_end":485,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":2179},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":30802,"byte_end":30807,"line_start":486,"line_end":486,"column_start":11,"column_end":16},"name":"0","qualname":"::ast::Ast::Group::0","value":"ast::Group","parent":{"krate":0,"index":2177},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2180},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":30861,"byte_end":30872,"line_start":488,"line_end":488,"column_start":5,"column_end":16},"name":"Alternation","qualname":"::ast::Ast::Alternation","value":"Ast::Alternation(Alternation)","parent":{"krate":0,"index":2155},"children":[],"decl_id":null,"docs":" An alternation of regular expressions.\n","sig":null,"attributes":[{"value":"/ An alternation of regular expressions.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":30814,"byte_end":30856,"line_start":487,"line_end":487,"column_start":5,"column_end":47}}]},{"kind":"Field","id":{"krate":0,"index":2182},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":30873,"byte_end":30884,"line_start":488,"line_end":488,"column_start":17,"column_end":28},"name":"0","qualname":"::ast::Ast::Alternation::0","value":"ast::Alternation","parent":{"krate":0,"index":2180},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2183},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":30939,"byte_end":30945,"line_start":490,"line_end":490,"column_start":5,"column_end":11},"name":"Concat","qualname":"::ast::Ast::Concat","value":"Ast::Concat(Concat)","parent":{"krate":0,"index":2155},"children":[],"decl_id":null,"docs":" A concatenation of regular expressions.\n","sig":null,"attributes":[{"value":"/ A concatenation of regular expressions.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":30891,"byte_end":30934,"line_start":489,"line_end":489,"column_start":5,"column_end":48}}]},{"kind":"Field","id":{"krate":0,"index":2185},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":30946,"byte_end":30952,"line_start":490,"line_end":490,"column_start":12,"column_end":18},"name":"0","qualname":"::ast::Ast::Concat::0","value":"ast::Concat","parent":{"krate":0,"index":2183},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2155},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":30148,"byte_end":30151,"line_start":469,"line_end":469,"column_start":10,"column_end":13},"name":"Ast","qualname":"::ast::Ast","value":"enum Ast {\n    Empty(Span),\n    Flags(SetFlags),\n    Literal(Literal),\n    Dot(Span),\n    Assertion(Assertion),\n    Class(Class),\n    Repetition(Repetition),\n    Group(Group),\n    Alternation(Alternation),\n    Concat(Concat),\n}","parent":null,"children":[{"krate":0,"index":2156},{"krate":0,"index":2159},{"krate":0,"index":2162},{"krate":0,"index":2165},{"krate":0,"index":2168},{"krate":0,"index":2171},{"krate":0,"index":2174},{"krate":0,"index":2177},{"krate":0,"index":2180},{"krate":0,"index":2183}],"decl_id":null,"docs":" An abstract syntax tree for a single regular expression.","sig":null,"attributes":[{"value":"/ An abstract syntax tree for a single regular expression.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":29772,"byte_end":29832,"line_start":461,"line_end":461,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":29833,"byte_end":29836,"line_start":462,"line_end":462,"column_start":1,"column_end":4}},{"value":"/ An `Ast`'s `fmt::Display` implementation uses constant stack space and heap","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":29837,"byte_end":29916,"line_start":463,"line_end":463,"column_start":1,"column_end":80}},{"value":"/ space proportional to the size of the `Ast`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":29917,"byte_end":29965,"line_start":464,"line_end":464,"column_start":1,"column_end":49}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":29966,"byte_end":29969,"line_start":465,"line_end":465,"column_start":1,"column_end":4}},{"value":"/ This type defines its own destructor that uses constant stack space and","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":29970,"byte_end":30045,"line_start":466,"line_end":466,"column_start":1,"column_end":76}},{"value":"/ heap space proportional to the size of the `Ast`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":30046,"byte_end":30099,"line_start":467,"line_end":467,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":422},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":31034,"byte_end":31038,"line_start":495,"line_end":495,"column_start":12,"column_end":16},"name":"span","qualname":"<Ast>::span","value":"fn span<'_>(&'_ Self) -> &'_ Span","parent":null,"children":[],"decl_id":null,"docs":" Return the span of this abstract syntax tree.\n","sig":null,"attributes":[{"value":"/ Return the span of this abstract syntax tree.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":30973,"byte_end":31022,"line_start":494,"line_end":494,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":423},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":31598,"byte_end":31606,"line_start":511,"line_end":511,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Ast>::is_empty","value":"fn is_empty<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if and only if this Ast is empty.\n","sig":null,"attributes":[{"value":"/ Return true if and only if this Ast is empty.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":31537,"byte_end":31586,"line_start":510,"line_end":510,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":426},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":32587,"byte_end":32590,"line_start":545,"line_end":545,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Ast as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2197},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":32823,"byte_end":32834,"line_start":553,"line_end":553,"column_start":12,"column_end":23},"name":"Alternation","qualname":"::ast::Alternation","value":"Alternation { span, asts }","parent":null,"children":[{"krate":0,"index":2198},{"krate":0,"index":2199}],"decl_id":null,"docs":" An alternation of regular expressions.\n","sig":null,"attributes":[{"value":"/ An alternation of regular expressions.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":32730,"byte_end":32772,"line_start":551,"line_end":551,"column_start":1,"column_end":43}}]},{"kind":"Field","id":{"krate":0,"index":2198},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":32883,"byte_end":32887,"line_start":555,"line_end":555,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::Alternation::span","value":"ast::Span","parent":{"krate":0,"index":2197},"children":[],"decl_id":null,"docs":" The span of this alternation.\n","sig":null,"attributes":[{"value":"/ The span of this alternation.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":32841,"byte_end":32874,"line_start":554,"line_end":554,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":2199},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":32946,"byte_end":32950,"line_start":557,"line_end":557,"column_start":9,"column_end":13},"name":"asts","qualname":"::ast::Alternation::asts","value":"std::vec::Vec<ast::Ast>","parent":{"krate":0,"index":2197},"children":[],"decl_id":null,"docs":" The alternate regular expressions.\n","sig":null,"attributes":[{"value":"/ The alternate regular expressions.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":32899,"byte_end":32937,"line_start":556,"line_end":556,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":33264,"byte_end":33272,"line_start":566,"line_end":566,"column_start":12,"column_end":20},"name":"into_ast","qualname":"<Alternation>::into_ast","value":"fn into_ast(Self) -> Ast","parent":null,"children":[],"decl_id":null,"docs":" Return this alternation as an AST.","sig":null,"attributes":[{"value":"/ Return this alternation as an AST.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":32988,"byte_end":33026,"line_start":561,"line_end":561,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":33031,"byte_end":33034,"line_start":562,"line_end":562,"column_start":5,"column_end":8}},{"value":"/ If this alternation contains zero ASTs, then Ast::Empty is","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":33039,"byte_end":33101,"line_start":563,"line_end":563,"column_start":5,"column_end":67}},{"value":"/ returned. If this alternation contains exactly 1 AST, then the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":33106,"byte_end":33172,"line_start":564,"line_end":564,"column_start":5,"column_end":71}},{"value":"/ corresponding AST is returned. Otherwise, Ast::Alternation is returned.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":33177,"byte_end":33252,"line_start":565,"line_end":565,"column_start":5,"column_end":80}}]},{"kind":"Struct","id":{"krate":0,"index":2211},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":33561,"byte_end":33567,"line_start":577,"line_end":577,"column_start":12,"column_end":18},"name":"Concat","qualname":"::ast::Concat","value":"Concat { span, asts }","parent":null,"children":[{"krate":0,"index":2212},{"krate":0,"index":2213}],"decl_id":null,"docs":" A concatenation of regular expressions.\n","sig":null,"attributes":[{"value":"/ A concatenation of regular expressions.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":33467,"byte_end":33510,"line_start":575,"line_end":575,"column_start":1,"column_end":44}}]},{"kind":"Field","id":{"krate":0,"index":2212},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":33618,"byte_end":33622,"line_start":579,"line_end":579,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::Concat::span","value":"ast::Span","parent":{"krate":0,"index":2211},"children":[],"decl_id":null,"docs":" The span of this concatenation.\n","sig":null,"attributes":[{"value":"/ The span of this concatenation.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":33574,"byte_end":33609,"line_start":578,"line_end":578,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2213},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":33685,"byte_end":33689,"line_start":581,"line_end":581,"column_start":9,"column_end":13},"name":"asts","qualname":"::ast::Concat::asts","value":"std::vec::Vec<ast::Ast>","parent":{"krate":0,"index":2211},"children":[],"decl_id":null,"docs":" The concatenation regular expressions.\n","sig":null,"attributes":[{"value":"/ The concatenation regular expressions.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":33634,"byte_end":33676,"line_start":580,"line_end":580,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":433},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":33999,"byte_end":34007,"line_start":590,"line_end":590,"column_start":12,"column_end":20},"name":"into_ast","qualname":"<Concat>::into_ast","value":"fn into_ast(Self) -> Ast","parent":null,"children":[],"decl_id":null,"docs":" Return this concatenation as an AST.","sig":null,"attributes":[{"value":"/ Return this concatenation as an AST.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":33722,"byte_end":33762,"line_start":585,"line_end":585,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":33767,"byte_end":33770,"line_start":586,"line_end":586,"column_start":5,"column_end":8}},{"value":"/ If this concatenation contains zero ASTs, then Ast::Empty is","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":33775,"byte_end":33839,"line_start":587,"line_end":587,"column_start":5,"column_end":69}},{"value":"/ returned. If this concatenation contains exactly 1 AST, then the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":33844,"byte_end":33912,"line_start":588,"line_end":588,"column_start":5,"column_end":73}},{"value":"/ corresponding AST is returned. Otherwise, Ast::Concat is returned.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":33917,"byte_end":33987,"line_start":589,"line_end":589,"column_start":5,"column_end":75}}]},{"kind":"Struct","id":{"krate":0,"index":2225},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":34453,"byte_end":34460,"line_start":605,"line_end":605,"column_start":12,"column_end":19},"name":"Literal","qualname":"::ast::Literal","value":"Literal { span, kind, c }","parent":null,"children":[{"krate":0,"index":2226},{"krate":0,"index":2227},{"krate":0,"index":2228}],"decl_id":null,"docs":" A single literal expression.","sig":null,"attributes":[{"value":"/ A single literal expression.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":34197,"byte_end":34229,"line_start":599,"line_end":599,"column_start":1,"column_end":33}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":34230,"byte_end":34233,"line_start":600,"line_end":600,"column_start":1,"column_end":4}},{"value":"/ A literal corresponds to a single Unicode scalar value. Literals may be","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":34234,"byte_end":34309,"line_start":601,"line_end":601,"column_start":1,"column_end":76}},{"value":"/ represented in their literal form, e.g., `a` or in their escaped form,","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":34310,"byte_end":34384,"line_start":602,"line_end":602,"column_start":1,"column_end":75}},{"value":"/ e.g., `\\x61`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":34385,"byte_end":34402,"line_start":603,"line_end":603,"column_start":1,"column_end":18}}]},{"kind":"Field","id":{"krate":0,"index":2226},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":34505,"byte_end":34509,"line_start":607,"line_end":607,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::Literal::span","value":"ast::Span","parent":{"krate":0,"index":2225},"children":[],"decl_id":null,"docs":" The span of this literal.\n","sig":null,"attributes":[{"value":"/ The span of this literal.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":34467,"byte_end":34496,"line_start":606,"line_end":606,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":2227},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":34559,"byte_end":34563,"line_start":609,"line_end":609,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::Literal::kind","value":"ast::LiteralKind","parent":{"krate":0,"index":2225},"children":[],"decl_id":null,"docs":" The kind of this literal.\n","sig":null,"attributes":[{"value":"/ The kind of this literal.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":34521,"byte_end":34550,"line_start":608,"line_end":608,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":2228},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":34650,"byte_end":34651,"line_start":611,"line_end":611,"column_start":9,"column_end":10},"name":"c","qualname":"::ast::Literal::c","value":"char","parent":{"krate":0,"index":2225},"children":[],"decl_id":null,"docs":" The Unicode scalar value corresponding to this literal.\n","sig":null,"attributes":[{"value":"/ The Unicode scalar value corresponding to this literal.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":34582,"byte_end":34641,"line_start":610,"line_end":610,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":435},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":34834,"byte_end":34838,"line_start":617,"line_end":617,"column_start":12,"column_end":16},"name":"byte","qualname":"<Literal>::byte","value":"fn byte<'_>(&'_ Self) -> Option<u8>","parent":null,"children":[],"decl_id":null,"docs":" If this literal was written as a `\\x` hex escape, then this returns\n the corresponding byte value. Otherwise, this returns `None`.\n","sig":null,"attributes":[{"value":"/ If this literal was written as a `\\x` hex escape, then this returns","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":34681,"byte_end":34752,"line_start":615,"line_end":615,"column_start":5,"column_end":76}},{"value":"/ the corresponding byte value. Otherwise, this returns `None`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":34757,"byte_end":34822,"line_start":616,"line_end":616,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2241},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":35244,"byte_end":35252,"line_start":631,"line_end":631,"column_start":5,"column_end":13},"name":"Verbatim","qualname":"::ast::LiteralKind::Verbatim","value":"LiteralKind::Verbatim","parent":{"krate":0,"index":2240},"children":[],"decl_id":null,"docs":" The literal is written verbatim, e.g., `a` or `☃`.\n","sig":null,"attributes":[{"value":"/ The literal is written verbatim, e.g., `a` or `☃`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":35183,"byte_end":35239,"line_start":630,"line_end":630,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2243},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":35357,"byte_end":35368,"line_start":634,"line_end":634,"column_start":5,"column_end":16},"name":"Punctuation","qualname":"::ast::LiteralKind::Punctuation","value":"LiteralKind::Punctuation","parent":{"krate":0,"index":2240},"children":[],"decl_id":null,"docs":" The literal is written as an escape because it is punctuation, e.g.,\n `\\*` or `\\[`.\n","sig":null,"attributes":[{"value":"/ The literal is written as an escape because it is punctuation, e.g.,","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":35258,"byte_end":35330,"line_start":632,"line_end":632,"column_start":5,"column_end":77}},{"value":"/ `\\*` or `\\[`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":35335,"byte_end":35352,"line_start":633,"line_end":633,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2245},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":35439,"byte_end":35444,"line_start":636,"line_end":636,"column_start":5,"column_end":10},"name":"Octal","qualname":"::ast::LiteralKind::Octal","value":"LiteralKind::Octal","parent":{"krate":0,"index":2240},"children":[],"decl_id":null,"docs":" The literal is written as an octal escape, e.g., `\\141`.\n","sig":null,"attributes":[{"value":"/ The literal is written as an octal escape, e.g., `\\141`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":35374,"byte_end":35434,"line_start":635,"line_end":635,"column_start":5,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2247},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":35623,"byte_end":35631,"line_start":640,"line_end":640,"column_start":5,"column_end":13},"name":"HexFixed","qualname":"::ast::LiteralKind::HexFixed","value":"LiteralKind::HexFixed(HexLiteralKind)","parent":{"krate":0,"index":2240},"children":[],"decl_id":null,"docs":" The literal is written as a hex code with a fixed number of digits\n depending on the type of the escape, e.g., `\\x61` or or `\\u0061` or\n `\\U00000061`.\n","sig":null,"attributes":[{"value":"/ The literal is written as a hex code with a fixed number of digits","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":35450,"byte_end":35520,"line_start":637,"line_end":637,"column_start":5,"column_end":75}},{"value":"/ depending on the type of the escape, e.g., `\\x61` or or `\\u0061` or","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":35525,"byte_end":35596,"line_start":638,"line_end":638,"column_start":5,"column_end":76}},{"value":"/ `\\U00000061`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":35601,"byte_end":35618,"line_start":639,"line_end":639,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":2249},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":35632,"byte_end":35646,"line_start":640,"line_end":640,"column_start":14,"column_end":28},"name":"0","qualname":"::ast::LiteralKind::HexFixed::0","value":"ast::HexLiteralKind","parent":{"krate":0,"index":2247},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2250},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":35845,"byte_end":35853,"line_start":644,"line_end":644,"column_start":5,"column_end":13},"name":"HexBrace","qualname":"::ast::LiteralKind::HexBrace","value":"LiteralKind::HexBrace(HexLiteralKind)","parent":{"krate":0,"index":2240},"children":[],"decl_id":null,"docs":" The literal is written as a hex code with a bracketed number of\n digits. The only restriction is that the bracketed hex code must refer\n to a valid Unicode scalar value.\n","sig":null,"attributes":[{"value":"/ The literal is written as a hex code with a bracketed number of","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":35653,"byte_end":35720,"line_start":641,"line_end":641,"column_start":5,"column_end":72}},{"value":"/ digits. The only restriction is that the bracketed hex code must refer","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":35725,"byte_end":35799,"line_start":642,"line_end":642,"column_start":5,"column_end":79}},{"value":"/ to a valid Unicode scalar value.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":35804,"byte_end":35840,"line_start":643,"line_end":643,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2252},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":35854,"byte_end":35868,"line_start":644,"line_end":644,"column_start":14,"column_end":28},"name":"0","qualname":"::ast::LiteralKind::HexBrace::0","value":"ast::HexLiteralKind","parent":{"krate":0,"index":2250},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2253},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":35968,"byte_end":35975,"line_start":647,"line_end":647,"column_start":5,"column_end":12},"name":"Special","qualname":"::ast::LiteralKind::Special","value":"LiteralKind::Special(SpecialLiteralKind)","parent":{"krate":0,"index":2240},"children":[],"decl_id":null,"docs":" The literal is written as a specially recognized escape, e.g., `\\f`\n or `\\n`.\n","sig":null,"attributes":[{"value":"/ The literal is written as a specially recognized escape, e.g., `\\f`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":35875,"byte_end":35946,"line_start":645,"line_end":645,"column_start":5,"column_end":76}},{"value":"/ or `\\n`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":35951,"byte_end":35963,"line_start":646,"line_end":646,"column_start":5,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":2255},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":35976,"byte_end":35994,"line_start":647,"line_end":647,"column_start":13,"column_end":31},"name":"0","qualname":"::ast::LiteralKind::Special::0","value":"ast::SpecialLiteralKind","parent":{"krate":0,"index":2253},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2240},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":35165,"byte_end":35176,"line_start":629,"line_end":629,"column_start":10,"column_end":21},"name":"LiteralKind","qualname":"::ast::LiteralKind","value":"enum LiteralKind {\n    Verbatim,\n    Punctuation,\n    Octal,\n    HexFixed(HexLiteralKind),\n    HexBrace(HexLiteralKind),\n    Special(SpecialLiteralKind),\n}","parent":null,"children":[{"krate":0,"index":2241},{"krate":0,"index":2243},{"krate":0,"index":2245},{"krate":0,"index":2247},{"krate":0,"index":2250},{"krate":0,"index":2253}],"decl_id":null,"docs":" The kind of a single literal expression.\n","sig":null,"attributes":[{"value":"/ The kind of a single literal expression.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":35072,"byte_end":35116,"line_start":627,"line_end":627,"column_start":1,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2268},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":36256,"byte_end":36260,"line_start":657,"line_end":657,"column_start":5,"column_end":9},"name":"Bell","qualname":"::ast::SpecialLiteralKind::Bell","value":"SpecialLiteralKind::Bell","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":" Bell, spelled `\\a` (`\\x07`).\n","sig":null,"attributes":[{"value":"/ Bell, spelled `\\a` (`\\x07`).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":36219,"byte_end":36251,"line_start":656,"line_end":656,"column_start":5,"column_end":37}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2270},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":36308,"byte_end":36316,"line_start":659,"line_end":659,"column_start":5,"column_end":13},"name":"FormFeed","qualname":"::ast::SpecialLiteralKind::FormFeed","value":"SpecialLiteralKind::FormFeed","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":" Form feed, spelled `\\f` (`\\x0C`).\n","sig":null,"attributes":[{"value":"/ Form feed, spelled `\\f` (`\\x0C`).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":36266,"byte_end":36303,"line_start":658,"line_end":658,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2272},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":36358,"byte_end":36361,"line_start":661,"line_end":661,"column_start":5,"column_end":8},"name":"Tab","qualname":"::ast::SpecialLiteralKind::Tab","value":"SpecialLiteralKind::Tab","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":" Tab, spelled `\\t` (`\\x09`).\n","sig":null,"attributes":[{"value":"/ Tab, spelled `\\t` (`\\x09`).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":36322,"byte_end":36353,"line_start":660,"line_end":660,"column_start":5,"column_end":36}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2274},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":36409,"byte_end":36417,"line_start":663,"line_end":663,"column_start":5,"column_end":13},"name":"LineFeed","qualname":"::ast::SpecialLiteralKind::LineFeed","value":"SpecialLiteralKind::LineFeed","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":" Line feed, spelled `\\n` (`\\x0A`).\n","sig":null,"attributes":[{"value":"/ Line feed, spelled `\\n` (`\\x0A`).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":36367,"byte_end":36404,"line_start":662,"line_end":662,"column_start":5,"column_end":42}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2276},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":36471,"byte_end":36485,"line_start":665,"line_end":665,"column_start":5,"column_end":19},"name":"CarriageReturn","qualname":"::ast::SpecialLiteralKind::CarriageReturn","value":"SpecialLiteralKind::CarriageReturn","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":" Carriage return, spelled `\\r` (`\\x0D`).\n","sig":null,"attributes":[{"value":"/ Carriage return, spelled `\\r` (`\\x0D`).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":36423,"byte_end":36466,"line_start":664,"line_end":664,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2278},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":36536,"byte_end":36547,"line_start":667,"line_end":667,"column_start":5,"column_end":16},"name":"VerticalTab","qualname":"::ast::SpecialLiteralKind::VerticalTab","value":"SpecialLiteralKind::VerticalTab","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":" Vertical tab, spelled `\\v` (`\\x0B`).\n","sig":null,"attributes":[{"value":"/ Vertical tab, spelled `\\v` (`\\x0B`).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":36491,"byte_end":36531,"line_start":666,"line_end":666,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2280},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":36660,"byte_end":36665,"line_start":670,"line_end":670,"column_start":5,"column_end":10},"name":"Space","qualname":"::ast::SpecialLiteralKind::Space","value":"SpecialLiteralKind::Space","parent":{"krate":0,"index":2267},"children":[],"decl_id":null,"docs":" Space, spelled `\\ ` (`\\x20`). Note that this can only appear when\n parsing in verbose mode.\n","sig":null,"attributes":[{"value":"/ Space, spelled `\\ ` (`\\x20`). Note that this can only appear when","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":36553,"byte_end":36622,"line_start":668,"line_end":668,"column_start":5,"column_end":74}},{"value":"/ parsing in verbose mode.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":36627,"byte_end":36655,"line_start":669,"line_end":669,"column_start":5,"column_end":33}}]},{"kind":"Enum","id":{"krate":0,"index":2267},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":36194,"byte_end":36212,"line_start":655,"line_end":655,"column_start":10,"column_end":28},"name":"SpecialLiteralKind","qualname":"::ast::SpecialLiteralKind","value":"enum SpecialLiteralKind {\n    Bell,\n    FormFeed,\n    Tab,\n    LineFeed,\n    CarriageReturn,\n    VerticalTab,\n    Space,\n}","parent":null,"children":[{"krate":0,"index":2268},{"krate":0,"index":2270},{"krate":0,"index":2272},{"krate":0,"index":2274},{"krate":0,"index":2276},{"krate":0,"index":2278},{"krate":0,"index":2280}],"decl_id":null,"docs":" The type of a special literal.","sig":null,"attributes":[{"value":"/ The type of a special literal.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":36000,"byte_end":36034,"line_start":650,"line_end":650,"column_start":1,"column_end":35}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":36035,"byte_end":36038,"line_start":651,"line_end":651,"column_start":1,"column_end":4}},{"value":"/ A special literal is a special escape sequence recognized by the regex","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":36039,"byte_end":36113,"line_start":652,"line_end":652,"column_start":1,"column_end":75}},{"value":"/ parser, e.g., `\\f` or `\\n`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":36114,"byte_end":36145,"line_start":653,"line_end":653,"column_start":1,"column_end":32}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2293},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":37043,"byte_end":37044,"line_start":682,"line_end":682,"column_start":5,"column_end":6},"name":"X","qualname":"::ast::HexLiteralKind::X","value":"HexLiteralKind::X","parent":{"krate":0,"index":2292},"children":[],"decl_id":null,"docs":" A `\\x` prefix. When used without brackets, this form is limited to\n two digits.\n","sig":null,"attributes":[{"value":"/ A `\\x` prefix. When used without brackets, this form is limited to","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":36948,"byte_end":37018,"line_start":680,"line_end":680,"column_start":5,"column_end":75}},{"value":"/ two digits.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":37023,"byte_end":37038,"line_start":681,"line_end":681,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2295},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":37146,"byte_end":37158,"line_start":685,"line_end":685,"column_start":5,"column_end":17},"name":"UnicodeShort","qualname":"::ast::HexLiteralKind::UnicodeShort","value":"HexLiteralKind::UnicodeShort","parent":{"krate":0,"index":2292},"children":[],"decl_id":null,"docs":" A `\\u` prefix. When used without brackets, this form is limited to\n four digits.\n","sig":null,"attributes":[{"value":"/ A `\\u` prefix. When used without brackets, this form is limited to","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":37050,"byte_end":37120,"line_start":683,"line_end":683,"column_start":5,"column_end":75}},{"value":"/ four digits.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":37125,"byte_end":37141,"line_start":684,"line_end":684,"column_start":5,"column_end":21}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2297},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":37261,"byte_end":37272,"line_start":688,"line_end":688,"column_start":5,"column_end":16},"name":"UnicodeLong","qualname":"::ast::HexLiteralKind::UnicodeLong","value":"HexLiteralKind::UnicodeLong","parent":{"krate":0,"index":2292},"children":[],"decl_id":null,"docs":" A `\\U` prefix. When used without brackets, this form is limited to\n eight digits.\n","sig":null,"attributes":[{"value":"/ A `\\U` prefix. When used without brackets, this form is limited to","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":37164,"byte_end":37234,"line_start":686,"line_end":686,"column_start":5,"column_end":75}},{"value":"/ eight digits.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":37239,"byte_end":37256,"line_start":687,"line_end":687,"column_start":5,"column_end":22}}]},{"kind":"Enum","id":{"krate":0,"index":2292},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":36927,"byte_end":36941,"line_start":679,"line_end":679,"column_start":10,"column_end":24},"name":"HexLiteralKind","qualname":"::ast::HexLiteralKind","value":"enum HexLiteralKind { X, UnicodeShort, UnicodeLong, }","parent":null,"children":[{"krate":0,"index":2293},{"krate":0,"index":2295},{"krate":0,"index":2297}],"decl_id":null,"docs":" The type of a Unicode hex literal.","sig":null,"attributes":[{"value":"/ The type of a Unicode hex literal.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":36670,"byte_end":36708,"line_start":673,"line_end":673,"column_start":1,"column_end":39}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":36709,"byte_end":36712,"line_start":674,"line_end":674,"column_start":1,"column_end":4}},{"value":"/ Note that all variants behave the same when used with brackets. They only","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":36713,"byte_end":36790,"line_start":675,"line_end":675,"column_start":1,"column_end":78}},{"value":"/ differ when used without brackets in the number of hex digits that must","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":36791,"byte_end":36866,"line_start":676,"line_end":676,"column_start":1,"column_end":76}},{"value":"/ follow.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":36867,"byte_end":36878,"line_start":677,"line_end":677,"column_start":1,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":437},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":37498,"byte_end":37504,"line_start":695,"line_end":695,"column_start":12,"column_end":18},"name":"digits","qualname":"<HexLiteralKind>::digits","value":"fn digits<'_>(&'_ Self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The number of digits that must be used with this literal form when\n used without brackets. When used with brackets, there is no\n restriction on the number of digits.\n","sig":null,"attributes":[{"value":"/ The number of digits that must be used with this literal form when","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":37303,"byte_end":37373,"line_start":692,"line_end":692,"column_start":5,"column_end":75}},{"value":"/ used without brackets. When used with brackets, there is no","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":37378,"byte_end":37441,"line_start":693,"line_end":693,"column_start":5,"column_end":68}},{"value":"/ restriction on the number of digits.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":37446,"byte_end":37486,"line_start":694,"line_end":694,"column_start":5,"column_end":45}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2310},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":37855,"byte_end":37862,"line_start":708,"line_end":708,"column_start":5,"column_end":12},"name":"Unicode","qualname":"::ast::Class::Unicode","value":"Class::Unicode(ClassUnicode)","parent":{"krate":0,"index":2309},"children":[],"decl_id":null,"docs":" A Unicode character class, e.g., `\\pL` or `\\p{Greek}`.\n","sig":null,"attributes":[{"value":"/ A Unicode character class, e.g., `\\pL` or `\\p{Greek}`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":37792,"byte_end":37850,"line_start":707,"line_end":707,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":2312},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":37863,"byte_end":37875,"line_start":708,"line_end":708,"column_start":13,"column_end":25},"name":"0","qualname":"::ast::Class::Unicode::0","value":"ast::ClassUnicode","parent":{"krate":0,"index":2310},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2313},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":37934,"byte_end":37938,"line_start":710,"line_end":710,"column_start":5,"column_end":9},"name":"Perl","qualname":"::ast::Class::Perl","value":"Class::Perl(ClassPerl)","parent":{"krate":0,"index":2309},"children":[],"decl_id":null,"docs":" A perl character class, e.g., `\\d` or `\\W`.\n","sig":null,"attributes":[{"value":"/ A perl character class, e.g., `\\d` or `\\W`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":37882,"byte_end":37929,"line_start":709,"line_end":709,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2315},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":37939,"byte_end":37948,"line_start":710,"line_end":710,"column_start":10,"column_end":19},"name":"0","qualname":"::ast::Class::Perl::0","value":"ast::ClassPerl","parent":{"krate":0,"index":2313},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2316},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":38117,"byte_end":38126,"line_start":714,"line_end":714,"column_start":5,"column_end":14},"name":"Bracketed","qualname":"::ast::Class::Bracketed","value":"Class::Bracketed(ClassBracketed)","parent":{"krate":0,"index":2309},"children":[],"decl_id":null,"docs":" A bracketed character class set, which may contain zero or more\n character ranges and/or zero or more nested classes. e.g.,\n `[a-zA-Z\\pL]`.\n","sig":null,"attributes":[{"value":"/ A bracketed character class set, which may contain zero or more","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":37955,"byte_end":38022,"line_start":711,"line_end":711,"column_start":5,"column_end":72}},{"value":"/ character ranges and/or zero or more nested classes. e.g.,","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":38027,"byte_end":38089,"line_start":712,"line_end":712,"column_start":5,"column_end":67}},{"value":"/ `[a-zA-Z\\pL]`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":38094,"byte_end":38112,"line_start":713,"line_end":713,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":2318},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":38127,"byte_end":38141,"line_start":714,"line_end":714,"column_start":15,"column_end":29},"name":"0","qualname":"::ast::Class::Bracketed::0","value":"ast::ClassBracketed","parent":{"krate":0,"index":2316},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2309},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":37780,"byte_end":37785,"line_start":706,"line_end":706,"column_start":10,"column_end":15},"name":"Class","qualname":"::ast::Class","value":"enum Class {\n    Unicode(ClassUnicode),\n    Perl(ClassPerl),\n    Bracketed(ClassBracketed),\n}","parent":null,"children":[{"krate":0,"index":2310},{"krate":0,"index":2313},{"krate":0,"index":2316}],"decl_id":null,"docs":" A single character class expression.\n","sig":null,"attributes":[{"value":"/ A single character class expression.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":37691,"byte_end":37731,"line_start":704,"line_end":704,"column_start":1,"column_end":41}}]},{"kind":"Method","id":{"krate":0,"index":439},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":38220,"byte_end":38224,"line_start":719,"line_end":719,"column_start":12,"column_end":16},"name":"span","qualname":"<Class>::span","value":"fn span<'_>(&'_ Self) -> &'_ Span","parent":null,"children":[],"decl_id":null,"docs":" Return the span of this character class.\n","sig":null,"attributes":[{"value":"/ Return the span of this character class.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":38164,"byte_end":38208,"line_start":718,"line_end":718,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2330},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":38499,"byte_end":38508,"line_start":730,"line_end":730,"column_start":12,"column_end":21},"name":"ClassPerl","qualname":"::ast::ClassPerl","value":"ClassPerl { span, kind, negated }","parent":null,"children":[{"krate":0,"index":2331},{"krate":0,"index":2332},{"krate":0,"index":2333}],"decl_id":null,"docs":" A Perl character class.\n","sig":null,"attributes":[{"value":"/ A Perl character class.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":38421,"byte_end":38448,"line_start":728,"line_end":728,"column_start":1,"column_end":28}}]},{"kind":"Field","id":{"krate":0,"index":2331},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":38551,"byte_end":38555,"line_start":732,"line_end":732,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::ClassPerl::span","value":"ast::Span","parent":{"krate":0,"index":2330},"children":[],"decl_id":null,"docs":" The span of this class.\n","sig":null,"attributes":[{"value":"/ The span of this class.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":38515,"byte_end":38542,"line_start":731,"line_end":731,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":2332},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":38603,"byte_end":38607,"line_start":734,"line_end":734,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::ClassPerl::kind","value":"ast::ClassPerlKind","parent":{"krate":0,"index":2330},"children":[],"decl_id":null,"docs":" The kind of Perl class.\n","sig":null,"attributes":[{"value":"/ The kind of Perl class.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":38567,"byte_end":38594,"line_start":733,"line_end":733,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":2333},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":38724,"byte_end":38731,"line_start":737,"line_end":737,"column_start":9,"column_end":16},"name":"negated","qualname":"::ast::ClassPerl::negated","value":"bool","parent":{"krate":0,"index":2330},"children":[],"decl_id":null,"docs":" Whether the class is negated or not. e.g., `\\d` is not negated but\n `\\D` is.\n","sig":null,"attributes":[{"value":"/ Whether the class is negated or not. e.g., `\\d` is not negated but","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":38628,"byte_end":38698,"line_start":735,"line_end":735,"column_start":5,"column_end":75}},{"value":"/ `\\D` is.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":38703,"byte_end":38715,"line_start":736,"line_end":736,"column_start":5,"column_end":17}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2346},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":38877,"byte_end":38882,"line_start":744,"line_end":744,"column_start":5,"column_end":10},"name":"Digit","qualname":"::ast::ClassPerlKind::Digit","value":"ClassPerlKind::Digit","parent":{"krate":0,"index":2345},"children":[],"decl_id":null,"docs":" Decimal numbers.\n","sig":null,"attributes":[{"value":"/ Decimal numbers.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":38852,"byte_end":38872,"line_start":743,"line_end":743,"column_start":5,"column_end":25}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2348},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":38908,"byte_end":38913,"line_start":746,"line_end":746,"column_start":5,"column_end":10},"name":"Space","qualname":"::ast::ClassPerlKind::Space","value":"ClassPerlKind::Space","parent":{"krate":0,"index":2345},"children":[],"decl_id":null,"docs":" Whitespace.\n","sig":null,"attributes":[{"value":"/ Whitespace.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":38888,"byte_end":38903,"line_start":745,"line_end":745,"column_start":5,"column_end":20}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2350},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":38944,"byte_end":38948,"line_start":748,"line_end":748,"column_start":5,"column_end":9},"name":"Word","qualname":"::ast::ClassPerlKind::Word","value":"ClassPerlKind::Word","parent":{"krate":0,"index":2345},"children":[],"decl_id":null,"docs":" Word characters.\n","sig":null,"attributes":[{"value":"/ Word characters.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":38919,"byte_end":38939,"line_start":747,"line_end":747,"column_start":5,"column_end":25}}]},{"kind":"Enum","id":{"krate":0,"index":2345},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":38832,"byte_end":38845,"line_start":742,"line_end":742,"column_start":10,"column_end":23},"name":"ClassPerlKind","qualname":"::ast::ClassPerlKind","value":"enum ClassPerlKind { Digit, Space, Word, }","parent":null,"children":[{"krate":0,"index":2346},{"krate":0,"index":2348},{"krate":0,"index":2350}],"decl_id":null,"docs":" The available Perl character classes.\n","sig":null,"attributes":[{"value":"/ The available Perl character classes.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":38742,"byte_end":38783,"line_start":740,"line_end":740,"column_start":1,"column_end":42}}]},{"kind":"Struct","id":{"krate":0,"index":2362},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39033,"byte_end":39043,"line_start":753,"line_end":753,"column_start":12,"column_end":22},"name":"ClassAscii","qualname":"::ast::ClassAscii","value":"ClassAscii { span, kind, negated }","parent":null,"children":[{"krate":0,"index":2363},{"krate":0,"index":2364},{"krate":0,"index":2365}],"decl_id":null,"docs":" An ASCII character class.\n","sig":null,"attributes":[{"value":"/ An ASCII character class.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":38953,"byte_end":38982,"line_start":751,"line_end":751,"column_start":1,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2363},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39086,"byte_end":39090,"line_start":755,"line_end":755,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::ClassAscii::span","value":"ast::Span","parent":{"krate":0,"index":2362},"children":[],"decl_id":null,"docs":" The span of this class.\n","sig":null,"attributes":[{"value":"/ The span of this class.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39050,"byte_end":39077,"line_start":754,"line_end":754,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":2364},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39139,"byte_end":39143,"line_start":757,"line_end":757,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::ClassAscii::kind","value":"ast::ClassAsciiKind","parent":{"krate":0,"index":2362},"children":[],"decl_id":null,"docs":" The kind of ASCII class.\n","sig":null,"attributes":[{"value":"/ The kind of ASCII class.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39102,"byte_end":39130,"line_start":756,"line_end":756,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":2365},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39280,"byte_end":39287,"line_start":760,"line_end":760,"column_start":9,"column_end":16},"name":"negated","qualname":"::ast::ClassAscii::negated","value":"bool","parent":{"krate":0,"index":2362},"children":[],"decl_id":null,"docs":" Whether the class is negated or not. e.g., `[[:alpha:]]` is not negated\n but `[[:^alpha:]]` is.\n","sig":null,"attributes":[{"value":"/ Whether the class is negated or not. e.g., `[[:alpha:]]` is not negated","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39165,"byte_end":39240,"line_start":758,"line_end":758,"column_start":5,"column_end":80}},{"value":"/ but `[[:^alpha:]]` is.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39245,"byte_end":39271,"line_start":759,"line_end":759,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2378},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39432,"byte_end":39437,"line_start":767,"line_end":767,"column_start":5,"column_end":10},"name":"Alnum","qualname":"::ast::ClassAsciiKind::Alnum","value":"ClassAsciiKind::Alnum","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" `[0-9A-Za-z]`\n","sig":null,"attributes":[{"value":"/ `[0-9A-Za-z]`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39410,"byte_end":39427,"line_start":766,"line_end":766,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2380},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39462,"byte_end":39467,"line_start":769,"line_end":769,"column_start":5,"column_end":10},"name":"Alpha","qualname":"::ast::ClassAsciiKind::Alpha","value":"ClassAsciiKind::Alpha","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" `[A-Za-z]`\n","sig":null,"attributes":[{"value":"/ `[A-Za-z]`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39443,"byte_end":39457,"line_start":768,"line_end":768,"column_start":5,"column_end":19}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2382},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39495,"byte_end":39500,"line_start":771,"line_end":771,"column_start":5,"column_end":10},"name":"Ascii","qualname":"::ast::ClassAsciiKind::Ascii","value":"ClassAsciiKind::Ascii","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" `[\\x00-\\x7F]`\n","sig":null,"attributes":[{"value":"/ `[\\x00-\\x7F]`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39473,"byte_end":39490,"line_start":770,"line_end":770,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2384},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39522,"byte_end":39527,"line_start":773,"line_end":773,"column_start":5,"column_end":10},"name":"Blank","qualname":"::ast::ClassAsciiKind::Blank","value":"ClassAsciiKind::Blank","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" `[ \\t]`\n","sig":null,"attributes":[{"value":"/ `[ \\t]`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39506,"byte_end":39517,"line_start":772,"line_end":772,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2386},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39559,"byte_end":39564,"line_start":775,"line_end":775,"column_start":5,"column_end":10},"name":"Cntrl","qualname":"::ast::ClassAsciiKind::Cntrl","value":"ClassAsciiKind::Cntrl","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" `[\\x00-\\x1F\\x7F]`\n","sig":null,"attributes":[{"value":"/ `[\\x00-\\x1F\\x7F]`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39533,"byte_end":39554,"line_start":774,"line_end":774,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2388},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39586,"byte_end":39591,"line_start":777,"line_end":777,"column_start":5,"column_end":10},"name":"Digit","qualname":"::ast::ClassAsciiKind::Digit","value":"ClassAsciiKind::Digit","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" `[0-9]`\n","sig":null,"attributes":[{"value":"/ `[0-9]`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39570,"byte_end":39581,"line_start":776,"line_end":776,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2390},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39613,"byte_end":39618,"line_start":779,"line_end":779,"column_start":5,"column_end":10},"name":"Graph","qualname":"::ast::ClassAsciiKind::Graph","value":"ClassAsciiKind::Graph","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" `[!-~]`\n","sig":null,"attributes":[{"value":"/ `[!-~]`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39597,"byte_end":39608,"line_start":778,"line_end":778,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2392},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39640,"byte_end":39645,"line_start":781,"line_end":781,"column_start":5,"column_end":10},"name":"Lower","qualname":"::ast::ClassAsciiKind::Lower","value":"ClassAsciiKind::Lower","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" `[a-z]`\n","sig":null,"attributes":[{"value":"/ `[a-z]`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39624,"byte_end":39635,"line_start":780,"line_end":780,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2394},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39667,"byte_end":39672,"line_start":783,"line_end":783,"column_start":5,"column_end":10},"name":"Print","qualname":"::ast::ClassAsciiKind::Print","value":"ClassAsciiKind::Print","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" `[ -~]`\n","sig":null,"attributes":[{"value":"/ `[ -~]`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39651,"byte_end":39662,"line_start":782,"line_end":782,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2396},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39704,"byte_end":39709,"line_start":785,"line_end":785,"column_start":5,"column_end":10},"name":"Punct","qualname":"::ast::ClassAsciiKind::Punct","value":"ClassAsciiKind::Punct","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" `[!-/:-@\\[-`{-~]`\n","sig":null,"attributes":[{"value":"/ `[!-/:-@\\[-`{-~]`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39678,"byte_end":39699,"line_start":784,"line_end":784,"column_start":5,"column_end":26}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2398},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39739,"byte_end":39744,"line_start":787,"line_end":787,"column_start":5,"column_end":10},"name":"Space","qualname":"::ast::ClassAsciiKind::Space","value":"ClassAsciiKind::Space","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" `[\\t\\n\\v\\f\\r ]`\n","sig":null,"attributes":[{"value":"/ `[\\t\\n\\v\\f\\r ]`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39715,"byte_end":39734,"line_start":786,"line_end":786,"column_start":5,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2400},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39766,"byte_end":39771,"line_start":789,"line_end":789,"column_start":5,"column_end":10},"name":"Upper","qualname":"::ast::ClassAsciiKind::Upper","value":"ClassAsciiKind::Upper","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" `[A-Z]`\n","sig":null,"attributes":[{"value":"/ `[A-Z]`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39750,"byte_end":39761,"line_start":788,"line_end":788,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2402},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39800,"byte_end":39804,"line_start":791,"line_end":791,"column_start":5,"column_end":9},"name":"Word","qualname":"::ast::ClassAsciiKind::Word","value":"ClassAsciiKind::Word","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" `[0-9A-Za-z_]`\n","sig":null,"attributes":[{"value":"/ `[0-9A-Za-z_]`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39777,"byte_end":39795,"line_start":790,"line_end":790,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2404},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39832,"byte_end":39838,"line_start":793,"line_end":793,"column_start":5,"column_end":11},"name":"Xdigit","qualname":"::ast::ClassAsciiKind::Xdigit","value":"ClassAsciiKind::Xdigit","parent":{"krate":0,"index":2377},"children":[],"decl_id":null,"docs":" `[0-9A-Fa-f]`\n","sig":null,"attributes":[{"value":"/ `[0-9A-Fa-f]`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39810,"byte_end":39827,"line_start":792,"line_end":792,"column_start":5,"column_end":22}}]},{"kind":"Enum","id":{"krate":0,"index":2377},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39389,"byte_end":39403,"line_start":765,"line_end":765,"column_start":10,"column_end":24},"name":"ClassAsciiKind","qualname":"::ast::ClassAsciiKind","value":"enum ClassAsciiKind {\n    Alnum,\n    Alpha,\n    Ascii,\n    Blank,\n    Cntrl,\n    Digit,\n    Graph,\n    Lower,\n    Print,\n    Punct,\n    Space,\n    Upper,\n    Word,\n    Xdigit,\n}","parent":null,"children":[{"krate":0,"index":2378},{"krate":0,"index":2380},{"krate":0,"index":2382},{"krate":0,"index":2384},{"krate":0,"index":2386},{"krate":0,"index":2388},{"krate":0,"index":2390},{"krate":0,"index":2392},{"krate":0,"index":2394},{"krate":0,"index":2396},{"krate":0,"index":2398},{"krate":0,"index":2400},{"krate":0,"index":2402},{"krate":0,"index":2404}],"decl_id":null,"docs":" The available ASCII character classes.\n","sig":null,"attributes":[{"value":"/ The available ASCII character classes.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39298,"byte_end":39340,"line_start":763,"line_end":763,"column_start":1,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":441},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":40209,"byte_end":40218,"line_start":804,"line_end":804,"column_start":12,"column_end":21},"name":"from_name","qualname":"<ClassAsciiKind>::from_name","value":"fn from_name<'_>(&'_ str) -> Option<ClassAsciiKind>","parent":null,"children":[],"decl_id":null,"docs":" Return the corresponding ClassAsciiKind variant for the given name.","sig":null,"attributes":[{"value":"/ Return the corresponding ClassAsciiKind variant for the given name.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39869,"byte_end":39940,"line_start":797,"line_end":797,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39945,"byte_end":39948,"line_start":798,"line_end":798,"column_start":5,"column_end":8}},{"value":"/ The name given should correspond to the lowercase version of the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39953,"byte_end":40021,"line_start":799,"line_end":799,"column_start":5,"column_end":73}},{"value":"/ variant name. e.g., `cntrl` is the name for `ClassAsciiKind::Cntrl`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":40026,"byte_end":40098,"line_start":800,"line_end":800,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":40103,"byte_end":40106,"line_start":801,"line_end":801,"column_start":5,"column_end":8}},{"value":"/ If no variant with the corresponding name exists, then `None` is","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":40111,"byte_end":40179,"line_start":802,"line_end":802,"column_start":5,"column_end":73}},{"value":"/ returned.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":40184,"byte_end":40197,"line_start":803,"line_end":803,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2416},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":40944,"byte_end":40956,"line_start":828,"line_end":828,"column_start":12,"column_end":24},"name":"ClassUnicode","qualname":"::ast::ClassUnicode","value":"ClassUnicode { span, negated, kind }","parent":null,"children":[{"krate":0,"index":2417},{"krate":0,"index":2418},{"krate":0,"index":2419}],"decl_id":null,"docs":" A Unicode character class.\n","sig":null,"attributes":[{"value":"/ A Unicode character class.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":40863,"byte_end":40893,"line_start":826,"line_end":826,"column_start":1,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":2417},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":40999,"byte_end":41003,"line_start":830,"line_end":830,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::ClassUnicode::span","value":"ast::Span","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":" The span of this class.\n","sig":null,"attributes":[{"value":"/ The span of this class.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":40963,"byte_end":40990,"line_start":829,"line_end":829,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":2418},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":41560,"byte_end":41567,"line_start":840,"line_end":840,"column_start":9,"column_end":16},"name":"negated","qualname":"::ast::ClassUnicode::negated","value":"bool","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":" Whether this class is negated or not.","sig":null,"attributes":[{"value":"/ Whether this class is negated or not.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":41015,"byte_end":41056,"line_start":831,"line_end":831,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":41061,"byte_end":41064,"line_start":832,"line_end":832,"column_start":5,"column_end":8}},{"value":"/ Note: be careful when using this attribute. This specifically refers","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":41069,"byte_end":41141,"line_start":833,"line_end":833,"column_start":5,"column_end":77}},{"value":"/ to whether the class is written as `\\p` or `\\P`, where the latter","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":41146,"byte_end":41215,"line_start":834,"line_end":834,"column_start":5,"column_end":74}},{"value":"/ is `negated = true`. However, it also possible to write something like","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":41220,"byte_end":41294,"line_start":835,"line_end":835,"column_start":5,"column_end":79}},{"value":"/ `\\P{scx!=Katakana}` which is actually equivalent to","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":41299,"byte_end":41354,"line_start":836,"line_end":836,"column_start":5,"column_end":60}},{"value":"/ `\\p{scx=Katakana}` and is therefore not actually negated even though","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":41359,"byte_end":41431,"line_start":837,"line_end":837,"column_start":5,"column_end":77}},{"value":"/ `negated = true` here. To test whether this class is truly negated","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":41436,"byte_end":41506,"line_start":838,"line_end":838,"column_start":5,"column_end":75}},{"value":"/ or not, use the `is_negated` method.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":41511,"byte_end":41551,"line_start":839,"line_end":839,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":2419},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":41618,"byte_end":41622,"line_start":842,"line_end":842,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::ClassUnicode::kind","value":"ast::ClassUnicodeKind","parent":{"krate":0,"index":2416},"children":[],"decl_id":null,"docs":" The kind of Unicode class.\n","sig":null,"attributes":[{"value":"/ The kind of Unicode class.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":41579,"byte_end":41609,"line_start":841,"line_end":841,"column_start":5,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":41884,"byte_end":41894,"line_start":850,"line_end":850,"column_start":12,"column_end":22},"name":"is_negated","qualname":"<ClassUnicode>::is_negated","value":"fn is_negated<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this class has been negated.","sig":null,"attributes":[{"value":"/ Returns true if this class has been negated.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":41669,"byte_end":41717,"line_start":846,"line_end":846,"column_start":5,"column_end":53}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":41722,"byte_end":41725,"line_start":847,"line_end":847,"column_start":5,"column_end":8}},{"value":"/ Note that this takes the Unicode op into account, if it's present.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":41730,"byte_end":41800,"line_start":848,"line_end":848,"column_start":5,"column_end":75}},{"value":"/ e.g., `is_negated` for `\\P{scx!=Katakana}` will return `false`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":41805,"byte_end":41872,"line_start":849,"line_end":849,"column_start":5,"column_end":72}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2432},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":42310,"byte_end":42319,"line_start":865,"line_end":865,"column_start":5,"column_end":14},"name":"OneLetter","qualname":"::ast::ClassUnicodeKind::OneLetter","value":"ClassUnicodeKind::OneLetter(char)","parent":{"krate":0,"index":2431},"children":[],"decl_id":null,"docs":" A one letter abbreviated class, e.g., `\\pN`.\n","sig":null,"attributes":[{"value":"/ A one letter abbreviated class, e.g., `\\pN`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":42257,"byte_end":42305,"line_start":864,"line_end":864,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":2434},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":42320,"byte_end":42324,"line_start":865,"line_end":865,"column_start":15,"column_end":19},"name":"0","qualname":"::ast::ClassUnicodeKind::OneLetter::0","value":"char","parent":{"krate":0,"index":2432},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2435},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":42419,"byte_end":42424,"line_start":868,"line_end":868,"column_start":5,"column_end":10},"name":"Named","qualname":"::ast::ClassUnicodeKind::Named","value":"ClassUnicodeKind::Named(String)","parent":{"krate":0,"index":2431},"children":[],"decl_id":null,"docs":" A binary property, general category or script. The string may be\n empty.\n","sig":null,"attributes":[{"value":"/ A binary property, general category or script. The string may be","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":42331,"byte_end":42399,"line_start":866,"line_end":866,"column_start":5,"column_end":73}},{"value":"/ empty.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":42404,"byte_end":42414,"line_start":867,"line_end":867,"column_start":5,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":2437},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":42425,"byte_end":42431,"line_start":868,"line_end":868,"column_start":11,"column_end":17},"name":"0","qualname":"::ast::ClassUnicodeKind::Named::0","value":"std::string::String","parent":{"krate":0,"index":2435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":2438},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":42487,"byte_end":42497,"line_start":870,"line_end":870,"column_start":5,"column_end":15},"name":"NamedValue","qualname":"::ast::ClassUnicodeKind::NamedValue","value":"ClassUnicodeKind::NamedValue { op, name, value }","parent":{"krate":0,"index":2431},"children":[],"decl_id":null,"docs":" A property name and an associated value.\n","sig":null,"attributes":[{"value":"/ A property name and an associated value.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":42438,"byte_end":42482,"line_start":869,"line_end":869,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":2439},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":42582,"byte_end":42584,"line_start":872,"line_end":872,"column_start":9,"column_end":11},"name":"op","qualname":"::ast::ClassUnicodeKind::NamedValue::op","value":"ast::ClassUnicodeOpKind","parent":{"krate":0,"index":2438},"children":[],"decl_id":null,"docs":" The type of Unicode op used to associate `name` with `value`.\n","sig":null,"attributes":[{"value":"/ The type of Unicode op used to associate `name` with `value`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":42508,"byte_end":42573,"line_start":871,"line_end":871,"column_start":9,"column_end":74}}]},{"kind":"Field","id":{"krate":0,"index":2440},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":42666,"byte_end":42670,"line_start":874,"line_end":874,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::ClassUnicodeKind::NamedValue::name","value":"std::string::String","parent":{"krate":0,"index":2438},"children":[],"decl_id":null,"docs":" The property name (which may be empty).\n","sig":null,"attributes":[{"value":"/ The property name (which may be empty).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":42614,"byte_end":42657,"line_start":873,"line_end":873,"column_start":9,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2441},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":42741,"byte_end":42746,"line_start":876,"line_end":876,"column_start":9,"column_end":14},"name":"value","qualname":"::ast::ClassUnicodeKind::NamedValue::value","value":"std::string::String","parent":{"krate":0,"index":2438},"children":[],"decl_id":null,"docs":" The property value (which may be empty).\n","sig":null,"attributes":[{"value":"/ The property value (which may be empty).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":42688,"byte_end":42732,"line_start":875,"line_end":875,"column_start":9,"column_end":53}}]},{"kind":"Enum","id":{"krate":0,"index":2431},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":42234,"byte_end":42250,"line_start":863,"line_end":863,"column_start":10,"column_end":26},"name":"ClassUnicodeKind","qualname":"::ast::ClassUnicodeKind","value":"enum ClassUnicodeKind {\n    OneLetter(char),\n    Named(String),\n    NamedValue {\n            op: ClassUnicodeOpKind,\n            name: String,\n            value: String,\n        },\n}","parent":null,"children":[{"krate":0,"index":2432},{"krate":0,"index":2435},{"krate":0,"index":2438}],"decl_id":null,"docs":" The available forms of Unicode character classes.\n","sig":null,"attributes":[{"value":"/ The available forms of Unicode character classes.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":42132,"byte_end":42185,"line_start":861,"line_end":861,"column_start":1,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2454},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":42963,"byte_end":42968,"line_start":884,"line_end":884,"column_start":5,"column_end":10},"name":"Equal","qualname":"::ast::ClassUnicodeOpKind::Equal","value":"ClassUnicodeOpKind::Equal","parent":{"krate":0,"index":2453},"children":[],"decl_id":null,"docs":" A property set to a specific value, e.g., `\\p{scx=Katakana}`.\n","sig":null,"attributes":[{"value":"/ A property set to a specific value, e.g., `\\p{scx=Katakana}`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":42893,"byte_end":42958,"line_start":883,"line_end":883,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2456},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":43066,"byte_end":43071,"line_start":887,"line_end":887,"column_start":5,"column_end":10},"name":"Colon","qualname":"::ast::ClassUnicodeOpKind::Colon","value":"ClassUnicodeOpKind::Colon","parent":{"krate":0,"index":2453},"children":[],"decl_id":null,"docs":" A property set to a specific value using a colon, e.g.,\n `\\p{scx:Katakana}`.\n","sig":null,"attributes":[{"value":"/ A property set to a specific value using a colon, e.g.,","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":42974,"byte_end":43033,"line_start":885,"line_end":885,"column_start":5,"column_end":64}},{"value":"/ `\\p{scx:Katakana}`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":43038,"byte_end":43061,"line_start":886,"line_end":886,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2458},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":43154,"byte_end":43162,"line_start":889,"line_end":889,"column_start":5,"column_end":13},"name":"NotEqual","qualname":"::ast::ClassUnicodeOpKind::NotEqual","value":"ClassUnicodeOpKind::NotEqual","parent":{"krate":0,"index":2453},"children":[],"decl_id":null,"docs":" A property that isn't a particular value, e.g., `\\p{scx!=Katakana}`.\n","sig":null,"attributes":[{"value":"/ A property that isn't a particular value, e.g., `\\p{scx!=Katakana}`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":43077,"byte_end":43149,"line_start":888,"line_end":888,"column_start":5,"column_end":77}}]},{"kind":"Enum","id":{"krate":0,"index":2453},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":42868,"byte_end":42886,"line_start":882,"line_end":882,"column_start":10,"column_end":28},"name":"ClassUnicodeOpKind","qualname":"::ast::ClassUnicodeOpKind","value":"enum ClassUnicodeOpKind { Equal, Colon, NotEqual, }","parent":null,"children":[{"krate":0,"index":2454},{"krate":0,"index":2456},{"krate":0,"index":2458}],"decl_id":null,"docs":" The type of op used in a Unicode character class.\n","sig":null,"attributes":[{"value":"/ The type of op used in a Unicode character class.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":42766,"byte_end":42819,"line_start":880,"line_end":880,"column_start":1,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":43253,"byte_end":43261,"line_start":894,"line_end":894,"column_start":12,"column_end":20},"name":"is_equal","qualname":"<ClassUnicodeOpKind>::is_equal","value":"fn is_equal<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Whether the op is an equality op or not.\n","sig":null,"attributes":[{"value":"/ Whether the op is an equality op or not.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":43197,"byte_end":43241,"line_start":893,"line_end":893,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2470},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":43520,"byte_end":43534,"line_start":904,"line_end":904,"column_start":12,"column_end":26},"name":"ClassBracketed","qualname":"::ast::ClassBracketed","value":"ClassBracketed { span, negated, kind }","parent":null,"children":[{"krate":0,"index":2471},{"krate":0,"index":2472},{"krate":0,"index":2473}],"decl_id":null,"docs":" A bracketed character class, e.g., `[a-z0-9]`.\n","sig":null,"attributes":[{"value":"/ A bracketed character class, e.g., `[a-z0-9]`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":43419,"byte_end":43469,"line_start":902,"line_end":902,"column_start":1,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":2471},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":43577,"byte_end":43581,"line_start":906,"line_end":906,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::ClassBracketed::span","value":"ast::Span","parent":{"krate":0,"index":2470},"children":[],"decl_id":null,"docs":" The span of this class.\n","sig":null,"attributes":[{"value":"/ The span of this class.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":43541,"byte_end":43568,"line_start":905,"line_end":905,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":2472},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":43693,"byte_end":43700,"line_start":909,"line_end":909,"column_start":9,"column_end":16},"name":"negated","qualname":"::ast::ClassBracketed::negated","value":"bool","parent":{"krate":0,"index":2470},"children":[],"decl_id":null,"docs":" Whether this class is negated or not. e.g., `[a]` is not negated but\n `[^a]` is.\n","sig":null,"attributes":[{"value":"/ Whether this class is negated or not. e.g., `[a]` is not negated but","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":43593,"byte_end":43665,"line_start":907,"line_end":907,"column_start":5,"column_end":77}},{"value":"/ `[^a]` is.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":43670,"byte_end":43684,"line_start":908,"line_end":908,"column_start":5,"column_end":19}}]},{"kind":"Field","id":{"krate":0,"index":2473},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":43868,"byte_end":43872,"line_start":912,"line_end":912,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::ClassBracketed::kind","value":"ast::ClassSet","parent":{"krate":0,"index":2470},"children":[],"decl_id":null,"docs":" The type of this set. A set is either a normal union of things, e.g.,\n `[abc]` or a result of applying set operations, e.g., `[\\pL--c]`.\n","sig":null,"attributes":[{"value":"/ The type of this set. A set is either a normal union of things, e.g.,","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":43712,"byte_end":43785,"line_start":910,"line_end":910,"column_start":5,"column_end":78}},{"value":"/ `[abc]` or a result of applying set operations, e.g., `[\\pL--c]`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":43790,"byte_end":43859,"line_start":911,"line_end":911,"column_start":5,"column_end":74}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2486},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":44337,"byte_end":44341,"line_start":925,"line_end":925,"column_start":5,"column_end":9},"name":"Item","qualname":"::ast::ClassSet::Item","value":"ClassSet::Item(ClassSetItem)","parent":{"krate":0,"index":2485},"children":[],"decl_id":null,"docs":" An item, which can be a single literal, range, nested character class\n or a union of items.\n","sig":null,"attributes":[{"value":"/ An item, which can be a single literal, range, nested character class","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":44230,"byte_end":44303,"line_start":923,"line_end":923,"column_start":5,"column_end":78}},{"value":"/ or a union of items.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":44308,"byte_end":44332,"line_start":924,"line_end":924,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":2488},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":44342,"byte_end":44354,"line_start":925,"line_end":925,"column_start":10,"column_end":22},"name":"0","qualname":"::ast::ClassSet::Item::0","value":"ast::ClassSetItem","parent":{"krate":0,"index":2486},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2489},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":44417,"byte_end":44425,"line_start":927,"line_end":927,"column_start":5,"column_end":13},"name":"BinaryOp","qualname":"::ast::ClassSet::BinaryOp","value":"ClassSet::BinaryOp(ClassSetBinaryOp)","parent":{"krate":0,"index":2485},"children":[],"decl_id":null,"docs":" A single binary operation (i.e., &&, -- or ~~).\n","sig":null,"attributes":[{"value":"/ A single binary operation (i.e., &&, -- or ~~).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":44361,"byte_end":44412,"line_start":926,"line_end":926,"column_start":5,"column_end":56}}]},{"kind":"Field","id":{"krate":0,"index":2491},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":44426,"byte_end":44442,"line_start":927,"line_end":927,"column_start":14,"column_end":30},"name":"0","qualname":"::ast::ClassSet::BinaryOp::0","value":"ast::ClassSetBinaryOp","parent":{"krate":0,"index":2489},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2485},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":44215,"byte_end":44223,"line_start":922,"line_end":922,"column_start":10,"column_end":18},"name":"ClassSet","qualname":"::ast::ClassSet","value":"enum ClassSet { Item(ClassSetItem), BinaryOp(ClassSetBinaryOp), }","parent":null,"children":[{"krate":0,"index":2486},{"krate":0,"index":2489}],"decl_id":null,"docs":" A character class set.","sig":null,"attributes":[{"value":"/ A character class set.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":43887,"byte_end":43913,"line_start":915,"line_end":915,"column_start":1,"column_end":27}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":43914,"byte_end":43917,"line_start":916,"line_end":916,"column_start":1,"column_end":4}},{"value":"/ This type corresponds to the internal structure of a bracketed character","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":43918,"byte_end":43994,"line_start":917,"line_end":917,"column_start":1,"column_end":77}},{"value":"/ class. That is, every bracketed character is one of two types: a union of","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":43995,"byte_end":44072,"line_start":918,"line_end":918,"column_start":1,"column_end":78}},{"value":"/ items (literals, ranges, other bracketed classes) or a tree of binary set","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":44073,"byte_end":44150,"line_start":919,"line_end":919,"column_start":1,"column_end":78}},{"value":"/ operations.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":44151,"byte_end":44166,"line_start":920,"line_end":920,"column_start":1,"column_end":16}}]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":44509,"byte_end":44514,"line_start":932,"line_end":932,"column_start":12,"column_end":17},"name":"union","qualname":"<ClassSet>::union","value":"fn union(ClassSetUnion) -> ClassSet","parent":null,"children":[],"decl_id":null,"docs":" Build a set from a union.\n","sig":null,"attributes":[{"value":"/ Build a set from a union.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":44468,"byte_end":44497,"line_start":931,"line_end":931,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":44669,"byte_end":44673,"line_start":937,"line_end":937,"column_start":12,"column_end":16},"name":"span","qualname":"<ClassSet>::span","value":"fn span<'_>(&'_ Self) -> &'_ Span","parent":null,"children":[],"decl_id":null,"docs":" Return the span of this character class set.\n","sig":null,"attributes":[{"value":"/ Return the span of this character class set.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":44609,"byte_end":44657,"line_start":936,"line_end":936,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2504},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":45416,"byte_end":45421,"line_start":961,"line_end":961,"column_start":5,"column_end":10},"name":"Empty","qualname":"::ast::ClassSetItem::Empty","value":"ClassSetItem::Empty(Span)","parent":{"krate":0,"index":2503},"children":[],"decl_id":null,"docs":" An empty item.","sig":null,"attributes":[{"value":"/ An empty item.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":45162,"byte_end":45180,"line_start":956,"line_end":956,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":45185,"byte_end":45188,"line_start":957,"line_end":957,"column_start":5,"column_end":8}},{"value":"/ Note that a bracketed character class cannot contain a single empty","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":45193,"byte_end":45264,"line_start":958,"line_end":958,"column_start":5,"column_end":76}},{"value":"/ item. Empty items can appear when using one of the binary operators.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":45269,"byte_end":45341,"line_start":959,"line_end":959,"column_start":5,"column_end":77}},{"value":"/ For example, `[&&]` is the intersection of two empty classes.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":45346,"byte_end":45411,"line_start":960,"line_end":960,"column_start":5,"column_end":70}}]},{"kind":"Field","id":{"krate":0,"index":2506},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":45422,"byte_end":45426,"line_start":961,"line_end":961,"column_start":11,"column_end":15},"name":"0","qualname":"::ast::ClassSetItem::Empty::0","value":"ast::Span","parent":{"krate":0,"index":2504},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2507},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":45459,"byte_end":45466,"line_start":963,"line_end":963,"column_start":5,"column_end":12},"name":"Literal","qualname":"::ast::ClassSetItem::Literal","value":"ClassSetItem::Literal(Literal)","parent":{"krate":0,"index":2503},"children":[],"decl_id":null,"docs":" A single literal.\n","sig":null,"attributes":[{"value":"/ A single literal.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":45433,"byte_end":45454,"line_start":962,"line_end":962,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":2509},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":45467,"byte_end":45474,"line_start":963,"line_end":963,"column_start":13,"column_end":20},"name":"0","qualname":"::ast::ClassSetItem::Literal::0","value":"ast::Literal","parent":{"krate":0,"index":2507},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2510},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":45519,"byte_end":45524,"line_start":965,"line_end":965,"column_start":5,"column_end":10},"name":"Range","qualname":"::ast::ClassSetItem::Range","value":"ClassSetItem::Range(ClassSetRange)","parent":{"krate":0,"index":2503},"children":[],"decl_id":null,"docs":" A range between two literals.\n","sig":null,"attributes":[{"value":"/ A range between two literals.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":45481,"byte_end":45514,"line_start":964,"line_end":964,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":2512},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":45525,"byte_end":45538,"line_start":965,"line_end":965,"column_start":11,"column_end":24},"name":"0","qualname":"::ast::ClassSetItem::Range::0","value":"ast::ClassSetRange","parent":{"krate":0,"index":2510},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2513},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":45613,"byte_end":45618,"line_start":967,"line_end":967,"column_start":5,"column_end":10},"name":"Ascii","qualname":"::ast::ClassSetItem::Ascii","value":"ClassSetItem::Ascii(ClassAscii)","parent":{"krate":0,"index":2503},"children":[],"decl_id":null,"docs":" An ASCII character class, e.g., `[:alnum:]` or `[:punct:]`.\n","sig":null,"attributes":[{"value":"/ An ASCII character class, e.g., `[:alnum:]` or `[:punct:]`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":45545,"byte_end":45608,"line_start":966,"line_end":966,"column_start":5,"column_end":68}}]},{"kind":"Field","id":{"krate":0,"index":2515},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":45619,"byte_end":45629,"line_start":967,"line_end":967,"column_start":11,"column_end":21},"name":"0","qualname":"::ast::ClassSetItem::Ascii::0","value":"ast::ClassAscii","parent":{"krate":0,"index":2513},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2516},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":45699,"byte_end":45706,"line_start":969,"line_end":969,"column_start":5,"column_end":12},"name":"Unicode","qualname":"::ast::ClassSetItem::Unicode","value":"ClassSetItem::Unicode(ClassUnicode)","parent":{"krate":0,"index":2503},"children":[],"decl_id":null,"docs":" A Unicode character class, e.g., `\\pL` or `\\p{Greek}`.\n","sig":null,"attributes":[{"value":"/ A Unicode character class, e.g., `\\pL` or `\\p{Greek}`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":45636,"byte_end":45694,"line_start":968,"line_end":968,"column_start":5,"column_end":63}}]},{"kind":"Field","id":{"krate":0,"index":2518},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":45707,"byte_end":45719,"line_start":969,"line_end":969,"column_start":13,"column_end":25},"name":"0","qualname":"::ast::ClassSetItem::Unicode::0","value":"ast::ClassUnicode","parent":{"krate":0,"index":2516},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2519},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":45778,"byte_end":45782,"line_start":971,"line_end":971,"column_start":5,"column_end":9},"name":"Perl","qualname":"::ast::ClassSetItem::Perl","value":"ClassSetItem::Perl(ClassPerl)","parent":{"krate":0,"index":2503},"children":[],"decl_id":null,"docs":" A perl character class, e.g., `\\d` or `\\W`.\n","sig":null,"attributes":[{"value":"/ A perl character class, e.g., `\\d` or `\\W`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":45726,"byte_end":45773,"line_start":970,"line_end":970,"column_start":5,"column_end":52}}]},{"kind":"Field","id":{"krate":0,"index":2521},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":45783,"byte_end":45792,"line_start":971,"line_end":971,"column_start":10,"column_end":19},"name":"0","qualname":"::ast::ClassSetItem::Perl::0","value":"ast::ClassPerl","parent":{"krate":0,"index":2519},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2522},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":45961,"byte_end":45970,"line_start":975,"line_end":975,"column_start":5,"column_end":14},"name":"Bracketed","qualname":"::ast::ClassSetItem::Bracketed","value":"ClassSetItem::Bracketed(Box<ClassBracketed>)","parent":{"krate":0,"index":2503},"children":[],"decl_id":null,"docs":" A bracketed character class set, which may contain zero or more\n character ranges and/or zero or more nested classes. e.g.,\n `[a-zA-Z\\pL]`.\n","sig":null,"attributes":[{"value":"/ A bracketed character class set, which may contain zero or more","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":45799,"byte_end":45866,"line_start":972,"line_end":972,"column_start":5,"column_end":72}},{"value":"/ character ranges and/or zero or more nested classes. e.g.,","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":45871,"byte_end":45933,"line_start":973,"line_end":973,"column_start":5,"column_end":67}},{"value":"/ `[a-zA-Z\\pL]`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":45938,"byte_end":45956,"line_start":974,"line_end":974,"column_start":5,"column_end":23}}]},{"kind":"Field","id":{"krate":0,"index":2524},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":45971,"byte_end":45990,"line_start":975,"line_end":975,"column_start":15,"column_end":34},"name":"0","qualname":"::ast::ClassSetItem::Bracketed::0","value":"std::boxed::Box<ast::ClassBracketed>","parent":{"krate":0,"index":2522},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2525},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":46023,"byte_end":46028,"line_start":977,"line_end":977,"column_start":5,"column_end":10},"name":"Union","qualname":"::ast::ClassSetItem::Union","value":"ClassSetItem::Union(ClassSetUnion)","parent":{"krate":0,"index":2503},"children":[],"decl_id":null,"docs":" A union of items.\n","sig":null,"attributes":[{"value":"/ A union of items.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":45997,"byte_end":46018,"line_start":976,"line_end":976,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":2527},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":46029,"byte_end":46042,"line_start":977,"line_end":977,"column_start":11,"column_end":24},"name":"0","qualname":"::ast::ClassSetItem::Union::0","value":"ast::ClassSetUnion","parent":{"krate":0,"index":2525},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2503},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":45143,"byte_end":45155,"line_start":955,"line_end":955,"column_start":10,"column_end":22},"name":"ClassSetItem","qualname":"::ast::ClassSetItem","value":"enum ClassSetItem {\n    Empty(Span),\n    Literal(Literal),\n    Range(ClassSetRange),\n    Ascii(ClassAscii),\n    Unicode(ClassUnicode),\n    Perl(ClassPerl),\n    Bracketed(Box<ClassBracketed>),\n    Union(ClassSetUnion),\n}","parent":null,"children":[{"krate":0,"index":2504},{"krate":0,"index":2507},{"krate":0,"index":2510},{"krate":0,"index":2513},{"krate":0,"index":2516},{"krate":0,"index":2519},{"krate":0,"index":2522},{"krate":0,"index":2525}],"decl_id":null,"docs":" A single component of a character class set.\n","sig":null,"attributes":[{"value":"/ A single component of a character class set.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":45046,"byte_end":45094,"line_start":953,"line_end":953,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":452},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":46137,"byte_end":46141,"line_start":982,"line_end":982,"column_start":12,"column_end":16},"name":"span","qualname":"<ClassSetItem>::span","value":"fn span<'_>(&'_ Self) -> &'_ Span","parent":null,"children":[],"decl_id":null,"docs":" Return the span of this character class set item.\n","sig":null,"attributes":[{"value":"/ Return the span of this character class set item.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":46072,"byte_end":46125,"line_start":981,"line_end":981,"column_start":5,"column_end":58}}]},{"kind":"Struct","id":{"krate":0,"index":2539},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":46711,"byte_end":46724,"line_start":998,"line_end":998,"column_start":12,"column_end":25},"name":"ClassSetRange","qualname":"::ast::ClassSetRange","value":"ClassSetRange { span, start, end }","parent":null,"children":[{"krate":0,"index":2540},{"krate":0,"index":2541},{"krate":0,"index":2542}],"decl_id":null,"docs":" A single character class range in a set.\n","sig":null,"attributes":[{"value":"/ A single character class range in a set.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":46616,"byte_end":46660,"line_start":996,"line_end":996,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":2540},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":46767,"byte_end":46771,"line_start":1000,"line_end":1000,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::ClassSetRange::span","value":"ast::Span","parent":{"krate":0,"index":2539},"children":[],"decl_id":null,"docs":" The span of this range.\n","sig":null,"attributes":[{"value":"/ The span of this range.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":46731,"byte_end":46758,"line_start":999,"line_end":999,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":2541},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":46820,"byte_end":46825,"line_start":1002,"line_end":1002,"column_start":9,"column_end":14},"name":"start","qualname":"::ast::ClassSetRange::start","value":"ast::Literal","parent":{"krate":0,"index":2539},"children":[],"decl_id":null,"docs":" The start of this range.\n","sig":null,"attributes":[{"value":"/ The start of this range.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":46783,"byte_end":46811,"line_start":1001,"line_end":1001,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":2542},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":46875,"byte_end":46878,"line_start":1004,"line_end":1004,"column_start":9,"column_end":12},"name":"end","qualname":"::ast::ClassSetRange::end","value":"ast::Literal","parent":{"krate":0,"index":2539},"children":[],"decl_id":null,"docs":" The end of this range.\n","sig":null,"attributes":[{"value":"/ The end of this range.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":46840,"byte_end":46866,"line_start":1003,"line_end":1003,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":454},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":47101,"byte_end":47109,"line_start":1012,"line_end":1012,"column_start":12,"column_end":20},"name":"is_valid","qualname":"<ClassSetRange>::is_valid","value":"fn is_valid<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if this character class range is valid.","sig":null,"attributes":[{"value":"/ Returns true if and only if this character class range is valid.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":46917,"byte_end":46985,"line_start":1008,"line_end":1008,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":46990,"byte_end":46993,"line_start":1009,"line_end":1009,"column_start":5,"column_end":8}},{"value":"/ The only case where a range is invalid is if its start is greater than","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":46998,"byte_end":47072,"line_start":1010,"line_end":1010,"column_start":5,"column_end":79}},{"value":"/ its end.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":47077,"byte_end":47089,"line_start":1011,"line_end":1011,"column_start":5,"column_end":17}}]},{"kind":"Struct","id":{"krate":0,"index":2554},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":47272,"byte_end":47285,"line_start":1019,"line_end":1019,"column_start":12,"column_end":25},"name":"ClassSetUnion","qualname":"::ast::ClassSetUnion","value":"ClassSetUnion { span, items }","parent":null,"children":[{"krate":0,"index":2555},{"krate":0,"index":2556}],"decl_id":null,"docs":" A union of items inside a character class set.\n","sig":null,"attributes":[{"value":"/ A union of items inside a character class set.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":47171,"byte_end":47221,"line_start":1017,"line_end":1017,"column_start":1,"column_end":51}}]},{"kind":"Field","id":{"krate":0,"index":2555},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":47387,"byte_end":47391,"line_start":1022,"line_end":1022,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::ClassSetUnion::span","value":"ast::Span","parent":{"krate":0,"index":2554},"children":[],"decl_id":null,"docs":" The span of the items in this operation. e.g., the `a-z0-9` in\n `[^a-z0-9]`\n","sig":null,"attributes":[{"value":"/ The span of the items in this operation. e.g., the `a-z0-9` in","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":47292,"byte_end":47358,"line_start":1020,"line_end":1020,"column_start":5,"column_end":71}},{"value":"/ `[^a-z0-9]`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":47363,"byte_end":47378,"line_start":1021,"line_end":1021,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":2556},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":47462,"byte_end":47467,"line_start":1024,"line_end":1024,"column_start":9,"column_end":14},"name":"items","qualname":"::ast::ClassSetUnion::items","value":"std::vec::Vec<ast::ClassSetItem>","parent":{"krate":0,"index":2554},"children":[],"decl_id":null,"docs":" The sequence of items that make up this union.\n","sig":null,"attributes":[{"value":"/ The sequence of items that make up this union.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":47403,"byte_end":47453,"line_start":1023,"line_end":1023,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":48033,"byte_end":48037,"line_start":1038,"line_end":1038,"column_start":12,"column_end":16},"name":"push","qualname":"<ClassSetUnion>::push","value":"fn push<'_>(&'_ mut Self, ClassSetItem)","parent":null,"children":[],"decl_id":null,"docs":" Push a new item in this union.","sig":null,"attributes":[{"value":"/ Push a new item in this union.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":47516,"byte_end":47550,"line_start":1028,"line_end":1028,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":47555,"byte_end":47558,"line_start":1029,"line_end":1029,"column_start":5,"column_end":8}},{"value":"/ The ending position of this union's span is updated to the ending","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":47563,"byte_end":47632,"line_start":1030,"line_end":1030,"column_start":5,"column_end":74}},{"value":"/ position of the span of the item given. If the union is empty, then","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":47637,"byte_end":47708,"line_start":1031,"line_end":1031,"column_start":5,"column_end":76}},{"value":"/ the starting position of this union is set to the starting position","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":47713,"byte_end":47784,"line_start":1032,"line_end":1032,"column_start":5,"column_end":76}},{"value":"/ of this item.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":47789,"byte_end":47806,"line_start":1033,"line_end":1033,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":47811,"byte_end":47814,"line_start":1034,"line_end":1034,"column_start":5,"column_end":8}},{"value":"/ In other words, if you only use this method to add items to a union","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":47819,"byte_end":47890,"line_start":1035,"line_end":1035,"column_start":5,"column_end":76}},{"value":"/ and you set the spans on each item correctly, then you should never","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":47895,"byte_end":47966,"line_start":1036,"line_end":1036,"column_start":5,"column_end":76}},{"value":"/ need to adjust the span of the union directly.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":47971,"byte_end":48021,"line_start":1037,"line_end":1037,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":457},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":48552,"byte_end":48561,"line_start":1052,"line_end":1052,"column_start":12,"column_end":21},"name":"into_item","qualname":"<ClassSetUnion>::into_item","value":"fn into_item(Self) -> ClassSetItem","parent":null,"children":[],"decl_id":null,"docs":" Return this union as a character class set item.","sig":null,"attributes":[{"value":"/ Return this union as a character class set item.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":48248,"byte_end":48300,"line_start":1046,"line_end":1046,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":48305,"byte_end":48308,"line_start":1047,"line_end":1047,"column_start":5,"column_end":8}},{"value":"/ If this union contains zero items, then an empty union is","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":48313,"byte_end":48374,"line_start":1048,"line_end":1048,"column_start":5,"column_end":66}},{"value":"/ returned. If this concatenation contains exactly 1 item, then the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":48379,"byte_end":48448,"line_start":1049,"line_end":1049,"column_start":5,"column_end":74}},{"value":"/ corresponding item is returned. Otherwise, ClassSetItem::Union is","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":48453,"byte_end":48522,"line_start":1050,"line_end":1050,"column_start":5,"column_end":74}},{"value":"/ returned.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":48527,"byte_end":48540,"line_start":1051,"line_end":1051,"column_start":5,"column_end":18}}]},{"kind":"Struct","id":{"krate":0,"index":2568},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":48874,"byte_end":48890,"line_start":1063,"line_end":1063,"column_start":12,"column_end":28},"name":"ClassSetBinaryOp","qualname":"::ast::ClassSetBinaryOp","value":"ClassSetBinaryOp { span, kind, lhs, rhs }","parent":null,"children":[{"krate":0,"index":2569},{"krate":0,"index":2570},{"krate":0,"index":2571},{"krate":0,"index":2572}],"decl_id":null,"docs":" A Unicode character class set operation.\n","sig":null,"attributes":[{"value":"/ A Unicode character class set operation.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":48779,"byte_end":48823,"line_start":1061,"line_end":1061,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":2569},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":48977,"byte_end":48981,"line_start":1065,"line_end":1065,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::ClassSetBinaryOp::span","value":"ast::Span","parent":{"krate":0,"index":2568},"children":[],"decl_id":null,"docs":" The span of this operation. e.g., the `a-z--[h-p]` in `[a-z--h-p]`.\n","sig":null,"attributes":[{"value":"/ The span of this operation. e.g., the `a-z--[h-p]` in `[a-z--h-p]`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":48897,"byte_end":48968,"line_start":1064,"line_end":1064,"column_start":5,"column_end":76}}]},{"kind":"Field","id":{"krate":0,"index":2570},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":49037,"byte_end":49041,"line_start":1067,"line_end":1067,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::ClassSetBinaryOp::kind","value":"ast::ClassSetBinaryOpKind","parent":{"krate":0,"index":2568},"children":[],"decl_id":null,"docs":" The type of this set operation.\n","sig":null,"attributes":[{"value":"/ The type of this set operation.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":48993,"byte_end":49028,"line_start":1066,"line_end":1066,"column_start":5,"column_end":40}}]},{"kind":"Field","id":{"krate":0,"index":2571},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":49118,"byte_end":49121,"line_start":1069,"line_end":1069,"column_start":9,"column_end":12},"name":"lhs","qualname":"::ast::ClassSetBinaryOp::lhs","value":"std::boxed::Box<ast::ClassSet>","parent":{"krate":0,"index":2568},"children":[],"decl_id":null,"docs":" The left hand side of the operation.\n","sig":null,"attributes":[{"value":"/ The left hand side of the operation.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":49069,"byte_end":49109,"line_start":1068,"line_end":1068,"column_start":5,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":2572},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":49192,"byte_end":49195,"line_start":1071,"line_end":1071,"column_start":9,"column_end":12},"name":"rhs","qualname":"::ast::ClassSetBinaryOp::rhs","value":"std::boxed::Box<ast::ClassSet>","parent":{"krate":0,"index":2568},"children":[],"decl_id":null,"docs":" The right hand side of the operation.\n","sig":null,"attributes":[{"value":"/ The right hand side of the operation.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":49142,"byte_end":49183,"line_start":1070,"line_end":1070,"column_start":5,"column_end":46}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2585},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":49595,"byte_end":49607,"line_start":1082,"line_end":1082,"column_start":5,"column_end":17},"name":"Intersection","qualname":"::ast::ClassSetBinaryOpKind::Intersection","value":"ClassSetBinaryOpKind::Intersection","parent":{"krate":0,"index":2584},"children":[],"decl_id":null,"docs":" The intersection of two sets, e.g., `\\pN&&[a-z]`.\n","sig":null,"attributes":[{"value":"/ The intersection of two sets, e.g., `\\pN&&[a-z]`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":49537,"byte_end":49590,"line_start":1081,"line_end":1081,"column_start":5,"column_end":58}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2587},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":49669,"byte_end":49679,"line_start":1084,"line_end":1084,"column_start":5,"column_end":15},"name":"Difference","qualname":"::ast::ClassSetBinaryOpKind::Difference","value":"ClassSetBinaryOpKind::Difference","parent":{"krate":0,"index":2584},"children":[],"decl_id":null,"docs":" The difference of two sets, e.g., `\\pN--[0-9]`.\n","sig":null,"attributes":[{"value":"/ The difference of two sets, e.g., `\\pN--[0-9]`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":49613,"byte_end":49664,"line_start":1083,"line_end":1083,"column_start":5,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2589},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":49857,"byte_end":49876,"line_start":1088,"line_end":1088,"column_start":5,"column_end":24},"name":"SymmetricDifference","qualname":"::ast::ClassSetBinaryOpKind::SymmetricDifference","value":"ClassSetBinaryOpKind::SymmetricDifference","parent":{"krate":0,"index":2584},"children":[],"decl_id":null,"docs":" The symmetric difference of two sets. The symmetric difference is the\n set of elements belonging to one but not both sets.\n e.g., `[\\pL~~[:ascii:]]`.\n","sig":null,"attributes":[{"value":"/ The symmetric difference of two sets. The symmetric difference is the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":49685,"byte_end":49758,"line_start":1085,"line_end":1085,"column_start":5,"column_end":78}},{"value":"/ set of elements belonging to one but not both sets.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":49763,"byte_end":49818,"line_start":1086,"line_end":1086,"column_start":5,"column_end":60}},{"value":"/ e.g., `[\\pL~~[:ascii:]]`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":49823,"byte_end":49852,"line_start":1087,"line_end":1087,"column_start":5,"column_end":34}}]},{"kind":"Enum","id":{"krate":0,"index":2584},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":49510,"byte_end":49530,"line_start":1080,"line_end":1080,"column_start":10,"column_end":30},"name":"ClassSetBinaryOpKind","qualname":"::ast::ClassSetBinaryOpKind","value":"enum ClassSetBinaryOpKind { Intersection, Difference, SymmetricDifference, }","parent":null,"children":[{"krate":0,"index":2585},{"krate":0,"index":2587},{"krate":0,"index":2589}],"decl_id":null,"docs":" The type of a Unicode character class set operation.","sig":null,"attributes":[{"value":"/ The type of a Unicode character class set operation.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":49215,"byte_end":49271,"line_start":1074,"line_end":1074,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":49272,"byte_end":49275,"line_start":1075,"line_end":1075,"column_start":1,"column_end":4}},{"value":"/ Note that this doesn't explicitly represent union since there is no","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":49276,"byte_end":49347,"line_start":1076,"line_end":1076,"column_start":1,"column_end":72}},{"value":"/ explicit union operator. Concatenation inside a character class corresponds","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":49348,"byte_end":49427,"line_start":1077,"line_end":1077,"column_start":1,"column_end":80}},{"value":"/ to the union operation.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":49428,"byte_end":49455,"line_start":1078,"line_end":1078,"column_start":1,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":2602},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":49966,"byte_end":49975,"line_start":1093,"line_end":1093,"column_start":12,"column_end":21},"name":"Assertion","qualname":"::ast::Assertion","value":"Assertion { span, kind }","parent":null,"children":[{"krate":0,"index":2603},{"krate":0,"index":2604}],"decl_id":null,"docs":" A single zero-width assertion.\n","sig":null,"attributes":[{"value":"/ A single zero-width assertion.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":49881,"byte_end":49915,"line_start":1091,"line_end":1091,"column_start":1,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":2603},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":50022,"byte_end":50026,"line_start":1095,"line_end":1095,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::Assertion::span","value":"ast::Span","parent":{"krate":0,"index":2602},"children":[],"decl_id":null,"docs":" The span of this assertion.\n","sig":null,"attributes":[{"value":"/ The span of this assertion.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":49982,"byte_end":50013,"line_start":1094,"line_end":1094,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":2604},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":50089,"byte_end":50093,"line_start":1097,"line_end":1097,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::Assertion::kind","value":"ast::AssertionKind","parent":{"krate":0,"index":2602},"children":[],"decl_id":null,"docs":" The assertion kind, e.g., `\\b` or `^`.\n","sig":null,"attributes":[{"value":"/ The assertion kind, e.g., `\\b` or `^`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":50038,"byte_end":50080,"line_start":1096,"line_end":1096,"column_start":5,"column_end":47}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2617},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":50216,"byte_end":50225,"line_start":1104,"line_end":1104,"column_start":5,"column_end":14},"name":"StartLine","qualname":"::ast::AssertionKind::StartLine","value":"AssertionKind::StartLine","parent":{"krate":0,"index":2616},"children":[],"decl_id":null,"docs":" `^`\n","sig":null,"attributes":[{"value":"/ `^`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":50204,"byte_end":50211,"line_start":1103,"line_end":1103,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2619},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":50243,"byte_end":50250,"line_start":1106,"line_end":1106,"column_start":5,"column_end":12},"name":"EndLine","qualname":"::ast::AssertionKind::EndLine","value":"AssertionKind::EndLine","parent":{"krate":0,"index":2616},"children":[],"decl_id":null,"docs":" `$`\n","sig":null,"attributes":[{"value":"/ `$`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":50231,"byte_end":50238,"line_start":1105,"line_end":1105,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2621},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":50269,"byte_end":50278,"line_start":1108,"line_end":1108,"column_start":5,"column_end":14},"name":"StartText","qualname":"::ast::AssertionKind::StartText","value":"AssertionKind::StartText","parent":{"krate":0,"index":2616},"children":[],"decl_id":null,"docs":" `\\A`\n","sig":null,"attributes":[{"value":"/ `\\A`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":50256,"byte_end":50264,"line_start":1107,"line_end":1107,"column_start":5,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2623},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":50297,"byte_end":50304,"line_start":1110,"line_end":1110,"column_start":5,"column_end":12},"name":"EndText","qualname":"::ast::AssertionKind::EndText","value":"AssertionKind::EndText","parent":{"krate":0,"index":2616},"children":[],"decl_id":null,"docs":" `\\z`\n","sig":null,"attributes":[{"value":"/ `\\z`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":50284,"byte_end":50292,"line_start":1109,"line_end":1109,"column_start":5,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2625},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":50323,"byte_end":50335,"line_start":1112,"line_end":1112,"column_start":5,"column_end":17},"name":"WordBoundary","qualname":"::ast::AssertionKind::WordBoundary","value":"AssertionKind::WordBoundary","parent":{"krate":0,"index":2616},"children":[],"decl_id":null,"docs":" `\\b`\n","sig":null,"attributes":[{"value":"/ `\\b`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":50310,"byte_end":50318,"line_start":1111,"line_end":1111,"column_start":5,"column_end":13}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2627},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":50354,"byte_end":50369,"line_start":1114,"line_end":1114,"column_start":5,"column_end":20},"name":"NotWordBoundary","qualname":"::ast::AssertionKind::NotWordBoundary","value":"AssertionKind::NotWordBoundary","parent":{"krate":0,"index":2616},"children":[],"decl_id":null,"docs":" `\\B`\n","sig":null,"attributes":[{"value":"/ `\\B`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":50341,"byte_end":50349,"line_start":1113,"line_end":1113,"column_start":5,"column_end":13}}]},{"kind":"Enum","id":{"krate":0,"index":2616},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":50184,"byte_end":50197,"line_start":1102,"line_end":1102,"column_start":10,"column_end":23},"name":"AssertionKind","qualname":"::ast::AssertionKind","value":"enum AssertionKind {\n    StartLine,\n    EndLine,\n    StartText,\n    EndText,\n    WordBoundary,\n    NotWordBoundary,\n}","parent":null,"children":[{"krate":0,"index":2617},{"krate":0,"index":2619},{"krate":0,"index":2621},{"krate":0,"index":2623},{"krate":0,"index":2625},{"krate":0,"index":2627}],"decl_id":null,"docs":" An assertion kind.\n","sig":null,"attributes":[{"value":"/ An assertion kind.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":50113,"byte_end":50135,"line_start":1100,"line_end":1100,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":2639},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":50484,"byte_end":50494,"line_start":1119,"line_end":1119,"column_start":12,"column_end":22},"name":"Repetition","qualname":"::ast::Repetition","value":"Repetition { span, op, greedy, ast }","parent":null,"children":[{"krate":0,"index":2640},{"krate":0,"index":2641},{"krate":0,"index":2642},{"krate":0,"index":2643}],"decl_id":null,"docs":" A repetition operation applied to a regular expression.\n","sig":null,"attributes":[{"value":"/ A repetition operation applied to a regular expression.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":50374,"byte_end":50433,"line_start":1117,"line_end":1117,"column_start":1,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":2640},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":50541,"byte_end":50545,"line_start":1121,"line_end":1121,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::Repetition::span","value":"ast::Span","parent":{"krate":0,"index":2639},"children":[],"decl_id":null,"docs":" The span of this operation.\n","sig":null,"attributes":[{"value":"/ The span of this operation.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":50501,"byte_end":50532,"line_start":1120,"line_end":1120,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":2641},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":50591,"byte_end":50593,"line_start":1123,"line_end":1123,"column_start":9,"column_end":11},"name":"op","qualname":"::ast::Repetition::op","value":"ast::RepetitionOp","parent":{"krate":0,"index":2639},"children":[],"decl_id":null,"docs":" The actual operation.\n","sig":null,"attributes":[{"value":"/ The actual operation.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":50557,"byte_end":50582,"line_start":1122,"line_end":1122,"column_start":5,"column_end":30}}]},{"kind":"Field","id":{"krate":0,"index":2642},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":50677,"byte_end":50683,"line_start":1125,"line_end":1125,"column_start":9,"column_end":15},"name":"greedy","qualname":"::ast::Repetition::greedy","value":"bool","parent":{"krate":0,"index":2639},"children":[],"decl_id":null,"docs":" Whether this operation was applied greedily or not.\n","sig":null,"attributes":[{"value":"/ Whether this operation was applied greedily or not.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":50613,"byte_end":50668,"line_start":1124,"line_end":1124,"column_start":5,"column_end":60}}]},{"kind":"Field","id":{"krate":0,"index":2643},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":50748,"byte_end":50751,"line_start":1127,"line_end":1127,"column_start":9,"column_end":12},"name":"ast","qualname":"::ast::Repetition::ast","value":"std::boxed::Box<ast::Ast>","parent":{"krate":0,"index":2639},"children":[],"decl_id":null,"docs":" The regular expression under repetition.\n","sig":null,"attributes":[{"value":"/ The regular expression under repetition.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":50695,"byte_end":50739,"line_start":1126,"line_end":1126,"column_start":5,"column_end":49}}]},{"kind":"Struct","id":{"krate":0,"index":2655},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":50852,"byte_end":50864,"line_start":1132,"line_end":1132,"column_start":12,"column_end":24},"name":"RepetitionOp","qualname":"::ast::RepetitionOp","value":"RepetitionOp { span, kind }","parent":null,"children":[{"krate":0,"index":2656},{"krate":0,"index":2657}],"decl_id":null,"docs":" The repetition operator itself.\n","sig":null,"attributes":[{"value":"/ The repetition operator itself.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":50766,"byte_end":50801,"line_start":1130,"line_end":1130,"column_start":1,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":2656},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":50967,"byte_end":50971,"line_start":1135,"line_end":1135,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::RepetitionOp::span","value":"ast::Span","parent":{"krate":0,"index":2655},"children":[],"decl_id":null,"docs":" The span of this operator. This includes things like `+`, `*?` and\n `{m,n}`.\n","sig":null,"attributes":[{"value":"/ The span of this operator. This includes things like `+`, `*?` and","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":50871,"byte_end":50941,"line_start":1133,"line_end":1133,"column_start":5,"column_end":75}},{"value":"/ `{m,n}`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":50946,"byte_end":50958,"line_start":1134,"line_end":1134,"column_start":5,"column_end":17}}]},{"kind":"Field","id":{"krate":0,"index":2657},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":51018,"byte_end":51022,"line_start":1137,"line_end":1137,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::RepetitionOp::kind","value":"ast::RepetitionKind","parent":{"krate":0,"index":2655},"children":[],"decl_id":null,"docs":" The type of operation.\n","sig":null,"attributes":[{"value":"/ The type of operation.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":50983,"byte_end":51009,"line_start":1136,"line_end":1136,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2670},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":51163,"byte_end":51172,"line_start":1144,"line_end":1144,"column_start":5,"column_end":14},"name":"ZeroOrOne","qualname":"::ast::RepetitionKind::ZeroOrOne","value":"RepetitionKind::ZeroOrOne","parent":{"krate":0,"index":2669},"children":[],"decl_id":null,"docs":" `?`\n","sig":null,"attributes":[{"value":"/ `?`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":51151,"byte_end":51158,"line_start":1143,"line_end":1143,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2672},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":51190,"byte_end":51200,"line_start":1146,"line_end":1146,"column_start":5,"column_end":15},"name":"ZeroOrMore","qualname":"::ast::RepetitionKind::ZeroOrMore","value":"RepetitionKind::ZeroOrMore","parent":{"krate":0,"index":2669},"children":[],"decl_id":null,"docs":" `*`\n","sig":null,"attributes":[{"value":"/ `*`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":51178,"byte_end":51185,"line_start":1145,"line_end":1145,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2674},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":51218,"byte_end":51227,"line_start":1148,"line_end":1148,"column_start":5,"column_end":14},"name":"OneOrMore","qualname":"::ast::RepetitionKind::OneOrMore","value":"RepetitionKind::OneOrMore","parent":{"krate":0,"index":2669},"children":[],"decl_id":null,"docs":" `+`\n","sig":null,"attributes":[{"value":"/ `+`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":51206,"byte_end":51213,"line_start":1147,"line_end":1147,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2676},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":51249,"byte_end":51254,"line_start":1150,"line_end":1150,"column_start":5,"column_end":10},"name":"Range","qualname":"::ast::RepetitionKind::Range","value":"RepetitionKind::Range(RepetitionRange)","parent":{"krate":0,"index":2669},"children":[],"decl_id":null,"docs":" `{m,n}`\n","sig":null,"attributes":[{"value":"/ `{m,n}`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":51233,"byte_end":51244,"line_start":1149,"line_end":1149,"column_start":5,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":2678},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":51255,"byte_end":51270,"line_start":1150,"line_end":1150,"column_start":11,"column_end":26},"name":"0","qualname":"::ast::RepetitionKind::Range::0","value":"ast::RepetitionRange","parent":{"krate":0,"index":2676},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2669},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":51130,"byte_end":51144,"line_start":1142,"line_end":1142,"column_start":10,"column_end":24},"name":"RepetitionKind","qualname":"::ast::RepetitionKind","value":"enum RepetitionKind {\n    ZeroOrOne,\n    ZeroOrMore,\n    OneOrMore,\n    Range(RepetitionRange),\n}","parent":null,"children":[{"krate":0,"index":2670},{"krate":0,"index":2672},{"krate":0,"index":2674},{"krate":0,"index":2676}],"decl_id":null,"docs":" The kind of a repetition operator.\n","sig":null,"attributes":[{"value":"/ The kind of a repetition operator.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":51043,"byte_end":51081,"line_start":1140,"line_end":1140,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2691},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":51393,"byte_end":51400,"line_start":1157,"line_end":1157,"column_start":5,"column_end":12},"name":"Exactly","qualname":"::ast::RepetitionRange::Exactly","value":"RepetitionRange::Exactly(u32)","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":" `{m}`\n","sig":null,"attributes":[{"value":"/ `{m}`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":51379,"byte_end":51388,"line_start":1156,"line_end":1156,"column_start":5,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":2693},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":51401,"byte_end":51404,"line_start":1157,"line_end":1157,"column_start":13,"column_end":16},"name":"0","qualname":"::ast::RepetitionRange::Exactly::0","value":"u32","parent":{"krate":0,"index":2691},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2694},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":51426,"byte_end":51433,"line_start":1159,"line_end":1159,"column_start":5,"column_end":12},"name":"AtLeast","qualname":"::ast::RepetitionRange::AtLeast","value":"RepetitionRange::AtLeast(u32)","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":" `{m,}`\n","sig":null,"attributes":[{"value":"/ `{m,}`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":51411,"byte_end":51421,"line_start":1158,"line_end":1158,"column_start":5,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":2696},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":51434,"byte_end":51437,"line_start":1159,"line_end":1159,"column_start":13,"column_end":16},"name":"0","qualname":"::ast::RepetitionRange::AtLeast::0","value":"u32","parent":{"krate":0,"index":2694},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2697},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":51460,"byte_end":51467,"line_start":1161,"line_end":1161,"column_start":5,"column_end":12},"name":"Bounded","qualname":"::ast::RepetitionRange::Bounded","value":"RepetitionRange::Bounded(u32, u32)","parent":{"krate":0,"index":2690},"children":[],"decl_id":null,"docs":" `{m,n}`\n","sig":null,"attributes":[{"value":"/ `{m,n}`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":51444,"byte_end":51455,"line_start":1160,"line_end":1160,"column_start":5,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":2699},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":51468,"byte_end":51471,"line_start":1161,"line_end":1161,"column_start":13,"column_end":16},"name":"0","qualname":"::ast::RepetitionRange::Bounded::0","value":"u32","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":2700},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":51473,"byte_end":51476,"line_start":1161,"line_end":1161,"column_start":18,"column_end":21},"name":"1","qualname":"::ast::RepetitionRange::Bounded::1","value":"u32","parent":{"krate":0,"index":2697},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2690},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":51357,"byte_end":51372,"line_start":1155,"line_end":1155,"column_start":10,"column_end":25},"name":"RepetitionRange","qualname":"::ast::RepetitionRange","value":"enum RepetitionRange { Exactly(u32), AtLeast(u32), Bounded(u32, u32), }","parent":null,"children":[{"krate":0,"index":2691},{"krate":0,"index":2694},{"krate":0,"index":2697}],"decl_id":null,"docs":" A range repetition operator.\n","sig":null,"attributes":[{"value":"/ A range repetition operator.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":51276,"byte_end":51308,"line_start":1153,"line_end":1153,"column_start":1,"column_end":33}}]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":51717,"byte_end":51725,"line_start":1169,"line_end":1169,"column_start":12,"column_end":20},"name":"is_valid","qualname":"<RepetitionRange>::is_valid","value":"fn is_valid<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if this repetition range is valid.","sig":null,"attributes":[{"value":"/ Returns true if and only if this repetition range is valid.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":51509,"byte_end":51572,"line_start":1165,"line_end":1165,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":51577,"byte_end":51580,"line_start":1166,"line_end":1166,"column_start":5,"column_end":8}},{"value":"/ The only case where a repetition range is invalid is if it is bounded","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":51585,"byte_end":51658,"line_start":1167,"line_end":1167,"column_start":5,"column_end":78}},{"value":"/ and its start is greater than its end.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":51663,"byte_end":51705,"line_start":1168,"line_end":1168,"column_start":5,"column_end":47}}]},{"kind":"Struct","id":{"krate":0,"index":2712},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":52195,"byte_end":52200,"line_start":1184,"line_end":1184,"column_start":12,"column_end":17},"name":"Group","qualname":"::ast::Group","value":"Group { span, kind, ast }","parent":null,"children":[{"krate":0,"index":2713},{"krate":0,"index":2714},{"krate":0,"index":2715}],"decl_id":null,"docs":" A grouped regular expression.","sig":null,"attributes":[{"value":"/ A grouped regular expression.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":51869,"byte_end":51902,"line_start":1177,"line_end":1177,"column_start":1,"column_end":34}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":51903,"byte_end":51906,"line_start":1178,"line_end":1178,"column_start":1,"column_end":4}},{"value":"/ This includes both capturing and non-capturing groups. This does **not**","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":51907,"byte_end":51983,"line_start":1179,"line_end":1179,"column_start":1,"column_end":77}},{"value":"/ include flag-only groups like `(?is)`, but does contain any group that","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":51984,"byte_end":52058,"line_start":1180,"line_end":1180,"column_start":1,"column_end":75}},{"value":"/ contains a sub-expression, e.g., `(a)`, `(?P<name>a)`, `(?:a)` and","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":52059,"byte_end":52129,"line_start":1181,"line_end":1181,"column_start":1,"column_end":71}},{"value":"/ `(?is:a)`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":52130,"byte_end":52144,"line_start":1182,"line_end":1182,"column_start":1,"column_end":15}}]},{"kind":"Field","id":{"krate":0,"index":2713},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":52243,"byte_end":52247,"line_start":1186,"line_end":1186,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::Group::span","value":"ast::Span","parent":{"krate":0,"index":2712},"children":[],"decl_id":null,"docs":" The span of this group.\n","sig":null,"attributes":[{"value":"/ The span of this group.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":52207,"byte_end":52234,"line_start":1185,"line_end":1185,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":2714},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":52295,"byte_end":52299,"line_start":1188,"line_end":1188,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::Group::kind","value":"ast::GroupKind","parent":{"krate":0,"index":2712},"children":[],"decl_id":null,"docs":" The kind of this group.\n","sig":null,"attributes":[{"value":"/ The kind of this group.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":52259,"byte_end":52286,"line_start":1187,"line_end":1187,"column_start":5,"column_end":32}}]},{"kind":"Field","id":{"krate":0,"index":2715},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":52366,"byte_end":52369,"line_start":1190,"line_end":1190,"column_start":9,"column_end":12},"name":"ast","qualname":"::ast::Group::ast","value":"std::boxed::Box<ast::Ast>","parent":{"krate":0,"index":2712},"children":[],"decl_id":null,"docs":" The regular expression in this group.\n","sig":null,"attributes":[{"value":"/ The regular expression in this group.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":52316,"byte_end":52357,"line_start":1189,"line_end":1189,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":461},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":52540,"byte_end":52545,"line_start":1196,"line_end":1196,"column_start":12,"column_end":17},"name":"flags","qualname":"<Group>::flags","value":"fn flags<'_>(&'_ Self) -> Option<&'_ Flags>","parent":null,"children":[],"decl_id":null,"docs":" If this group is non-capturing, then this returns the (possibly empty)\n set of flags. Otherwise, `None` is returned.\n","sig":null,"attributes":[{"value":"/ If this group is non-capturing, then this returns the (possibly empty)","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":52401,"byte_end":52475,"line_start":1194,"line_end":1194,"column_start":5,"column_end":79}},{"value":"/ set of flags. Otherwise, `None` is returned.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":52480,"byte_end":52528,"line_start":1195,"line_end":1195,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":462},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":52774,"byte_end":52786,"line_start":1204,"line_end":1204,"column_start":12,"column_end":24},"name":"is_capturing","qualname":"<Group>::is_capturing","value":"fn is_capturing<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if this group is capturing.\n","sig":null,"attributes":[{"value":"/ Returns true if and only if this group is capturing.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":52706,"byte_end":52762,"line_start":1203,"line_end":1203,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":463},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":53148,"byte_end":53161,"line_start":1214,"line_end":1214,"column_start":12,"column_end":25},"name":"capture_index","qualname":"<Group>::capture_index","value":"fn capture_index<'_>(&'_ Self) -> Option<u32>","parent":null,"children":[],"decl_id":null,"docs":" Returns the capture index of this group, if this is a capturing group.","sig":null,"attributes":[{"value":"/ Returns the capture index of this group, if this is a capturing group.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":52976,"byte_end":53050,"line_start":1211,"line_end":1211,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":53055,"byte_end":53058,"line_start":1212,"line_end":1212,"column_start":5,"column_end":8}},{"value":"/ This returns a capture index precisely when `is_capturing` is `true`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":53063,"byte_end":53136,"line_start":1213,"line_end":1213,"column_start":5,"column_end":78}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2728},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":53493,"byte_end":53505,"line_start":1227,"line_end":1227,"column_start":5,"column_end":17},"name":"CaptureIndex","qualname":"::ast::GroupKind::CaptureIndex","value":"GroupKind::CaptureIndex(u32)","parent":{"krate":0,"index":2727},"children":[],"decl_id":null,"docs":" `(a)`\n","sig":null,"attributes":[{"value":"/ `(a)`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":53479,"byte_end":53488,"line_start":1226,"line_end":1226,"column_start":5,"column_end":14}}]},{"kind":"Field","id":{"krate":0,"index":2730},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":53506,"byte_end":53509,"line_start":1227,"line_end":1227,"column_start":18,"column_end":21},"name":"0","qualname":"::ast::GroupKind::CaptureIndex::0","value":"u32","parent":{"krate":0,"index":2728},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2731},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":53538,"byte_end":53549,"line_start":1229,"line_end":1229,"column_start":5,"column_end":16},"name":"CaptureName","qualname":"::ast::GroupKind::CaptureName","value":"GroupKind::CaptureName(CaptureName)","parent":{"krate":0,"index":2727},"children":[],"decl_id":null,"docs":" `(?P<name>a)`\n","sig":null,"attributes":[{"value":"/ `(?P<name>a)`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":53516,"byte_end":53533,"line_start":1228,"line_end":1228,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":2733},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":53550,"byte_end":53561,"line_start":1229,"line_end":1229,"column_start":17,"column_end":28},"name":"0","qualname":"::ast::GroupKind::CaptureName::0","value":"ast::CaptureName","parent":{"krate":0,"index":2731},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2734},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":53597,"byte_end":53609,"line_start":1231,"line_end":1231,"column_start":5,"column_end":17},"name":"NonCapturing","qualname":"::ast::GroupKind::NonCapturing","value":"GroupKind::NonCapturing(Flags)","parent":{"krate":0,"index":2727},"children":[],"decl_id":null,"docs":" `(?:a)` and `(?i:a)`\n","sig":null,"attributes":[{"value":"/ `(?:a)` and `(?i:a)`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":53568,"byte_end":53592,"line_start":1230,"line_end":1230,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":2736},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":53610,"byte_end":53615,"line_start":1231,"line_end":1231,"column_start":18,"column_end":23},"name":"0","qualname":"::ast::GroupKind::NonCapturing::0","value":"ast::Flags","parent":{"krate":0,"index":2734},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2727},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":53463,"byte_end":53472,"line_start":1225,"line_end":1225,"column_start":10,"column_end":19},"name":"GroupKind","qualname":"::ast::GroupKind","value":"enum GroupKind {\n    CaptureIndex(u32),\n    CaptureName(CaptureName),\n    NonCapturing(Flags),\n}","parent":null,"children":[{"krate":0,"index":2728},{"krate":0,"index":2731},{"krate":0,"index":2734}],"decl_id":null,"docs":" The kind of a group.\n","sig":null,"attributes":[{"value":"/ The kind of a group.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":53390,"byte_end":53414,"line_start":1223,"line_end":1223,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":2748},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":53793,"byte_end":53804,"line_start":1239,"line_end":1239,"column_start":12,"column_end":23},"name":"CaptureName","qualname":"::ast::CaptureName","value":"CaptureName { span, name, index }","parent":null,"children":[{"krate":0,"index":2749},{"krate":0,"index":2750},{"krate":0,"index":2751}],"decl_id":null,"docs":" A capture name.","sig":null,"attributes":[{"value":"/ A capture name.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":53621,"byte_end":53640,"line_start":1234,"line_end":1234,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":53641,"byte_end":53644,"line_start":1235,"line_end":1235,"column_start":1,"column_end":4}},{"value":"/ This corresponds to the name itself between the angle brackets in, e.g.,","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":53645,"byte_end":53721,"line_start":1236,"line_end":1236,"column_start":1,"column_end":77}},{"value":"/ `(?P<foo>expr)`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":53722,"byte_end":53742,"line_start":1237,"line_end":1237,"column_start":1,"column_end":21}}]},{"kind":"Field","id":{"krate":0,"index":2749},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":53854,"byte_end":53858,"line_start":1241,"line_end":1241,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::CaptureName::span","value":"ast::Span","parent":{"krate":0,"index":2748},"children":[],"decl_id":null,"docs":" The span of this capture name.\n","sig":null,"attributes":[{"value":"/ The span of this capture name.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":53811,"byte_end":53845,"line_start":1240,"line_end":1240,"column_start":5,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":2750},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":53900,"byte_end":53904,"line_start":1243,"line_end":1243,"column_start":9,"column_end":13},"name":"name","qualname":"::ast::CaptureName::name","value":"std::string::String","parent":{"krate":0,"index":2748},"children":[],"decl_id":null,"docs":" The capture name.\n","sig":null,"attributes":[{"value":"/ The capture name.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":53870,"byte_end":53891,"line_start":1242,"line_end":1242,"column_start":5,"column_end":26}}]},{"kind":"Field","id":{"krate":0,"index":2751},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":53949,"byte_end":53954,"line_start":1245,"line_end":1245,"column_start":9,"column_end":14},"name":"index","qualname":"::ast::CaptureName::index","value":"u32","parent":{"krate":0,"index":2748},"children":[],"decl_id":null,"docs":" The capture index.\n","sig":null,"attributes":[{"value":"/ The capture index.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":53918,"byte_end":53940,"line_start":1244,"line_end":1244,"column_start":5,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":2763},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":54091,"byte_end":54099,"line_start":1250,"line_end":1250,"column_start":12,"column_end":20},"name":"SetFlags","qualname":"::ast::SetFlags","value":"SetFlags { span, flags }","parent":null,"children":[{"krate":0,"index":2764},{"krate":0,"index":2765}],"decl_id":null,"docs":" A group of flags that is not applied to a particular regular expression.\n","sig":null,"attributes":[{"value":"/ A group of flags that is not applied to a particular regular expression.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":53964,"byte_end":54040,"line_start":1248,"line_end":1248,"column_start":1,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":2764},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":54179,"byte_end":54183,"line_start":1252,"line_end":1252,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::SetFlags::span","value":"ast::Span","parent":{"krate":0,"index":2763},"children":[],"decl_id":null,"docs":" The span of these flags, including the grouping parentheses.\n","sig":null,"attributes":[{"value":"/ The span of these flags, including the grouping parentheses.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":54106,"byte_end":54170,"line_start":1251,"line_end":1251,"column_start":5,"column_end":69}}]},{"kind":"Field","id":{"krate":0,"index":2765},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":54237,"byte_end":54242,"line_start":1254,"line_end":1254,"column_start":9,"column_end":14},"name":"flags","qualname":"::ast::SetFlags::flags","value":"ast::Flags","parent":{"krate":0,"index":2763},"children":[],"decl_id":null,"docs":" The actual sequence of flags.\n","sig":null,"attributes":[{"value":"/ The actual sequence of flags.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":54195,"byte_end":54228,"line_start":1253,"line_end":1253,"column_start":5,"column_end":38}}]},{"kind":"Struct","id":{"krate":0,"index":2777},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":54407,"byte_end":54412,"line_start":1261,"line_end":1261,"column_start":12,"column_end":17},"name":"Flags","qualname":"::ast::Flags","value":"Flags { span, items }","parent":null,"children":[{"krate":0,"index":2778},{"krate":0,"index":2779}],"decl_id":null,"docs":" A group of flags.","sig":null,"attributes":[{"value":"/ A group of flags.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":54254,"byte_end":54275,"line_start":1257,"line_end":1257,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":54276,"byte_end":54279,"line_start":1258,"line_end":1258,"column_start":1,"column_end":4}},{"value":"/ This corresponds only to the sequence of flags themselves, e.g., `is-u`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":54280,"byte_end":54356,"line_start":1259,"line_end":1259,"column_start":1,"column_end":77}}]},{"kind":"Field","id":{"krate":0,"index":2778},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":54464,"byte_end":54468,"line_start":1263,"line_end":1263,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::Flags::span","value":"ast::Span","parent":{"krate":0,"index":2777},"children":[],"decl_id":null,"docs":" The span of this group of flags.\n","sig":null,"attributes":[{"value":"/ The span of this group of flags.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":54419,"byte_end":54455,"line_start":1262,"line_end":1262,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":2779},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":54577,"byte_end":54582,"line_start":1266,"line_end":1266,"column_start":9,"column_end":14},"name":"items","qualname":"::ast::Flags::items","value":"std::vec::Vec<ast::FlagsItem>","parent":{"krate":0,"index":2777},"children":[],"decl_id":null,"docs":" A sequence of flag items. Each item is either a flag or a negation\n operator.\n","sig":null,"attributes":[{"value":"/ A sequence of flag items. Each item is either a flag or a negation","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":54480,"byte_end":54550,"line_start":1264,"line_end":1264,"column_start":5,"column_end":75}},{"value":"/ operator.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":54555,"byte_end":54568,"line_start":1265,"line_end":1265,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":465},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":54872,"byte_end":54880,"line_start":1275,"line_end":1275,"column_start":12,"column_end":20},"name":"add_item","qualname":"<Flags>::add_item","value":"fn add_item<'_>(&'_ mut Self, FlagsItem) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Add the given item to this sequence of flags.","sig":null,"attributes":[{"value":"/ Add the given item to this sequence of flags.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":54620,"byte_end":54669,"line_start":1270,"line_end":1270,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":54674,"byte_end":54677,"line_start":1271,"line_end":1271,"column_start":5,"column_end":8}},{"value":"/ If the item was added successfully, then `None` is returned. If the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":54682,"byte_end":54753,"line_start":1272,"line_end":1272,"column_start":5,"column_end":76}},{"value":"/ given item is a duplicate, then `Some(i)` is returned, where","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":54758,"byte_end":54822,"line_start":1273,"line_end":1273,"column_start":5,"column_end":69}},{"value":"/ `items[i].kind == item.kind`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":54827,"byte_end":54860,"line_start":1274,"line_end":1274,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":466},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":55452,"byte_end":55462,"line_start":1294,"line_end":1294,"column_start":12,"column_end":22},"name":"flag_state","qualname":"<Flags>::flag_state","value":"fn flag_state<'_>(&'_ Self, Flag) -> Option<bool>","parent":null,"children":[],"decl_id":null,"docs":" Returns the state of the given flag in this set.","sig":null,"attributes":[{"value":"/ Returns the state of the given flag in this set.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":55130,"byte_end":55182,"line_start":1285,"line_end":1285,"column_start":5,"column_end":57}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":55187,"byte_end":55190,"line_start":1286,"line_end":1286,"column_start":5,"column_end":8}},{"value":"/ If the given flag is in the set but is negated, then `Some(false)` is","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":55195,"byte_end":55268,"line_start":1287,"line_end":1287,"column_start":5,"column_end":78}},{"value":"/ returned.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":55273,"byte_end":55286,"line_start":1288,"line_end":1288,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":55291,"byte_end":55294,"line_start":1289,"line_end":1289,"column_start":5,"column_end":8}},{"value":"/ If the given flag is in the set and is not negated, then `Some(true)`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":55299,"byte_end":55372,"line_start":1290,"line_end":1290,"column_start":5,"column_end":78}},{"value":"/ is returned.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":55377,"byte_end":55393,"line_start":1291,"line_end":1291,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":55398,"byte_end":55401,"line_start":1292,"line_end":1292,"column_start":5,"column_end":8}},{"value":"/ Otherwise, `None` is returned.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":55406,"byte_end":55440,"line_start":1293,"line_end":1293,"column_start":5,"column_end":39}}]},{"kind":"Struct","id":{"krate":0,"index":2791},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":55980,"byte_end":55989,"line_start":1313,"line_end":1313,"column_start":12,"column_end":21},"name":"FlagsItem","qualname":"::ast::FlagsItem","value":"FlagsItem { span, kind }","parent":null,"children":[{"krate":0,"index":2792},{"krate":0,"index":2793}],"decl_id":null,"docs":" A single item in a group of flags.\n","sig":null,"attributes":[{"value":"/ A single item in a group of flags.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":55891,"byte_end":55929,"line_start":1311,"line_end":1311,"column_start":1,"column_end":39}}]},{"kind":"Field","id":{"krate":0,"index":2792},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":56031,"byte_end":56035,"line_start":1315,"line_end":1315,"column_start":9,"column_end":13},"name":"span","qualname":"::ast::FlagsItem::span","value":"ast::Span","parent":{"krate":0,"index":2791},"children":[],"decl_id":null,"docs":" The span of this item.\n","sig":null,"attributes":[{"value":"/ The span of this item.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":55996,"byte_end":56022,"line_start":1314,"line_end":1314,"column_start":5,"column_end":31}}]},{"kind":"Field","id":{"krate":0,"index":2793},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":56082,"byte_end":56086,"line_start":1317,"line_end":1317,"column_start":9,"column_end":13},"name":"kind","qualname":"::ast::FlagsItem::kind","value":"ast::FlagsItemKind","parent":{"krate":0,"index":2791},"children":[],"decl_id":null,"docs":" The kind of this item.\n","sig":null,"attributes":[{"value":"/ The kind of this item.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":56047,"byte_end":56073,"line_start":1316,"line_end":1316,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2806},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":56311,"byte_end":56319,"line_start":1325,"line_end":1325,"column_start":5,"column_end":13},"name":"Negation","qualname":"::ast::FlagsItemKind::Negation","value":"FlagsItemKind::Negation","parent":{"krate":0,"index":2805},"children":[],"decl_id":null,"docs":" A negation operator applied to all subsequent flags in the enclosing\n group.\n","sig":null,"attributes":[{"value":"/ A negation operator applied to all subsequent flags in the enclosing","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":56219,"byte_end":56291,"line_start":1323,"line_end":1323,"column_start":5,"column_end":77}},{"value":"/ group.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":56296,"byte_end":56306,"line_start":1324,"line_end":1324,"column_start":5,"column_end":15}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2808},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":56359,"byte_end":56363,"line_start":1327,"line_end":1327,"column_start":5,"column_end":9},"name":"Flag","qualname":"::ast::FlagsItemKind::Flag","value":"FlagsItemKind::Flag(Flag)","parent":{"krate":0,"index":2805},"children":[],"decl_id":null,"docs":" A single flag in a group.\n","sig":null,"attributes":[{"value":"/ A single flag in a group.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":56325,"byte_end":56354,"line_start":1326,"line_end":1326,"column_start":5,"column_end":34}}]},{"kind":"Field","id":{"krate":0,"index":2810},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":56364,"byte_end":56368,"line_start":1327,"line_end":1327,"column_start":10,"column_end":14},"name":"0","qualname":"::ast::FlagsItemKind::Flag::0","value":"ast::Flag","parent":{"krate":0,"index":2808},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":2805},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":56199,"byte_end":56212,"line_start":1322,"line_end":1322,"column_start":10,"column_end":23},"name":"FlagsItemKind","qualname":"::ast::FlagsItemKind","value":"enum FlagsItemKind { Negation, Flag(Flag), }","parent":null,"children":[{"krate":0,"index":2806},{"krate":0,"index":2808}],"decl_id":null,"docs":" The kind of an item in a group of flags.\n","sig":null,"attributes":[{"value":"/ The kind of an item in a group of flags.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":56106,"byte_end":56150,"line_start":1320,"line_end":1320,"column_start":1,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":468},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":56476,"byte_end":56487,"line_start":1332,"line_end":1332,"column_start":12,"column_end":23},"name":"is_negation","qualname":"<FlagsItemKind>::is_negation","value":"fn is_negation<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if this item is a negation operator.\n","sig":null,"attributes":[{"value":"/ Returns true if and only if this item is a negation operator.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":56399,"byte_end":56464,"line_start":1331,"line_end":1331,"column_start":5,"column_end":70}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2823},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":56711,"byte_end":56726,"line_start":1344,"line_end":1344,"column_start":5,"column_end":20},"name":"CaseInsensitive","qualname":"::ast::Flag::CaseInsensitive","value":"Flag::CaseInsensitive","parent":{"krate":0,"index":2822},"children":[],"decl_id":null,"docs":" `i`\n","sig":null,"attributes":[{"value":"/ `i`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":56699,"byte_end":56706,"line_start":1343,"line_end":1343,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2825},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":56744,"byte_end":56753,"line_start":1346,"line_end":1346,"column_start":5,"column_end":14},"name":"MultiLine","qualname":"::ast::Flag::MultiLine","value":"Flag::MultiLine","parent":{"krate":0,"index":2822},"children":[],"decl_id":null,"docs":" `m`\n","sig":null,"attributes":[{"value":"/ `m`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":56732,"byte_end":56739,"line_start":1345,"line_end":1345,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2827},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":56771,"byte_end":56788,"line_start":1348,"line_end":1348,"column_start":5,"column_end":22},"name":"DotMatchesNewLine","qualname":"::ast::Flag::DotMatchesNewLine","value":"Flag::DotMatchesNewLine","parent":{"krate":0,"index":2822},"children":[],"decl_id":null,"docs":" `s`\n","sig":null,"attributes":[{"value":"/ `s`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":56759,"byte_end":56766,"line_start":1347,"line_end":1347,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2829},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":56806,"byte_end":56815,"line_start":1350,"line_end":1350,"column_start":5,"column_end":14},"name":"SwapGreed","qualname":"::ast::Flag::SwapGreed","value":"Flag::SwapGreed","parent":{"krate":0,"index":2822},"children":[],"decl_id":null,"docs":" `U`\n","sig":null,"attributes":[{"value":"/ `U`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":56794,"byte_end":56801,"line_start":1349,"line_end":1349,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2831},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":56833,"byte_end":56840,"line_start":1352,"line_end":1352,"column_start":5,"column_end":12},"name":"Unicode","qualname":"::ast::Flag::Unicode","value":"Flag::Unicode","parent":{"krate":0,"index":2822},"children":[],"decl_id":null,"docs":" `u`\n","sig":null,"attributes":[{"value":"/ `u`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":56821,"byte_end":56828,"line_start":1351,"line_end":1351,"column_start":5,"column_end":12}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2833},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":56858,"byte_end":56874,"line_start":1354,"line_end":1354,"column_start":5,"column_end":21},"name":"IgnoreWhitespace","qualname":"::ast::Flag::IgnoreWhitespace","value":"Flag::IgnoreWhitespace","parent":{"krate":0,"index":2822},"children":[],"decl_id":null,"docs":" `x`\n","sig":null,"attributes":[{"value":"/ `x`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":56846,"byte_end":56853,"line_start":1353,"line_end":1353,"column_start":5,"column_end":12}}]},{"kind":"Enum","id":{"krate":0,"index":2822},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":56688,"byte_end":56692,"line_start":1342,"line_end":1342,"column_start":10,"column_end":14},"name":"Flag","qualname":"::ast::Flag","value":"enum Flag {\n    CaseInsensitive,\n    MultiLine,\n    DotMatchesNewLine,\n    SwapGreed,\n    Unicode,\n    IgnoreWhitespace,\n}","parent":null,"children":[{"krate":0,"index":2823},{"krate":0,"index":2825},{"krate":0,"index":2827},{"krate":0,"index":2829},{"krate":0,"index":2831},{"krate":0,"index":2833}],"decl_id":null,"docs":" A single flag.\n","sig":null,"attributes":[{"value":"/ A single flag.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":56615,"byte_end":56633,"line_start":1340,"line_end":1340,"column_start":1,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":470},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":57047,"byte_end":57051,"line_start":1360,"line_end":1360,"column_start":8,"column_end":12},"name":"drop","qualname":"<Ast as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":477},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":58907,"byte_end":58911,"line_start":1410,"line_end":1410,"column_start":8,"column_end":12},"name":"drop","qualname":"<ClassSet as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":503},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/error.rs","byte_start":304363,"byte_end":304369,"line_start":10,"line_end":10,"column_start":10,"column_end":16},"name":"Result","qualname":"::error::Result","value":"result::Result<T, Error>","parent":null,"children":[],"decl_id":null,"docs":" A type alias for dealing with errors returned by this crate.\n","sig":null,"attributes":[{"value":"/ A type alias for dealing with errors returned by this crate.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/error.rs","byte_start":304289,"byte_end":304353,"line_start":9,"line_end":9,"column_start":1,"column_end":65}}]},{"kind":"TupleVariant","id":{"krate":0,"index":2879},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/error.rs","byte_start":304641,"byte_end":304646,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"Parse","qualname":"::error::Error::Parse","value":"Error::Parse(ast::Error)","parent":{"krate":0,"index":2878},"children":[],"decl_id":null,"docs":" An error that occurred while translating concrete syntax into abstract\n syntax (AST).\n","sig":null,"attributes":[{"value":"/ An error that occurred while translating concrete syntax into abstract","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/error.rs","byte_start":304540,"byte_end":304614,"line_start":15,"line_end":15,"column_start":5,"column_end":79}},{"value":"/ syntax (AST).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/error.rs","byte_start":304619,"byte_end":304636,"line_start":16,"line_end":16,"column_start":5,"column_end":22}}]},{"kind":"Field","id":{"krate":0,"index":2881},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/error.rs","byte_start":304647,"byte_end":304657,"line_start":17,"line_end":17,"column_start":11,"column_end":21},"name":"0","qualname":"::error::Error::Parse::0","value":"ast::Error","parent":{"krate":0,"index":2879},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2882},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/error.rs","byte_start":304790,"byte_end":304799,"line_start":20,"line_end":20,"column_start":5,"column_end":14},"name":"Translate","qualname":"::error::Error::Translate","value":"Error::Translate(hir::Error)","parent":{"krate":0,"index":2878},"children":[],"decl_id":null,"docs":" An error that occurred while translating abstract syntax into a high\n level intermediate representation (HIR).\n","sig":null,"attributes":[{"value":"/ An error that occurred while translating abstract syntax into a high","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/error.rs","byte_start":304664,"byte_end":304736,"line_start":18,"line_end":18,"column_start":5,"column_end":77}},{"value":"/ level intermediate representation (HIR).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/error.rs","byte_start":304741,"byte_end":304785,"line_start":19,"line_end":19,"column_start":5,"column_end":49}}]},{"kind":"Field","id":{"krate":0,"index":2884},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/error.rs","byte_start":304800,"byte_end":304810,"line_start":20,"line_end":20,"column_start":15,"column_end":25},"name":"0","qualname":"::error::Error::Translate::0","value":"hir::Error","parent":{"krate":0,"index":2882},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":2885},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/error.rs","byte_start":305091,"byte_end":305106,"line_start":27,"line_end":27,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::error::Error::__Nonexhaustive","value":"Error::__Nonexhaustive","parent":{"krate":0,"index":2878},"children":[],"decl_id":null,"docs":" Hints that destructuring should not be exhaustive.","sig":null,"attributes":[{"value":"/ Hints that destructuring should not be exhaustive.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/error.rs","byte_start":304817,"byte_end":304871,"line_start":21,"line_end":21,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/error.rs","byte_start":304876,"byte_end":304879,"line_start":22,"line_end":22,"column_start":5,"column_end":8}},{"value":"/ This enum may grow additional variants, so this makes sure clients","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/error.rs","byte_start":304884,"byte_end":304954,"line_start":23,"line_end":23,"column_start":5,"column_end":75}},{"value":"/ don't count on exhaustive matching. (Otherwise, adding a new variant","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/error.rs","byte_start":304959,"byte_end":305031,"line_start":24,"line_end":24,"column_start":5,"column_end":77}},{"value":"/ could break existing code.)","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/error.rs","byte_start":305036,"byte_end":305067,"line_start":25,"line_end":25,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":2878},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/error.rs","byte_start":304528,"byte_end":304533,"line_start":14,"line_end":14,"column_start":10,"column_end":15},"name":"Error","qualname":"::error::Error","value":"enum Error { Parse(ast::Error), Translate(hir::Error), __Nonexhaustive, }","parent":null,"children":[{"krate":0,"index":2879},{"krate":0,"index":2882},{"krate":0,"index":2885}],"decl_id":null,"docs":" This error type encompasses any error that can be returned by this crate.\n","sig":null,"attributes":[{"value":"/ This error type encompasses any error that can be returned by this crate.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/error.rs","byte_start":304402,"byte_end":304479,"line_start":12,"line_end":12,"column_start":1,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":506},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/error.rs","byte_start":305152,"byte_end":305156,"line_start":31,"line_end":31,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(ast::Error) -> Error","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":508},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/error.rs","byte_start":305261,"byte_end":305265,"line_start":37,"line_end":37,"column_start":8,"column_end":12},"name":"from","qualname":"<Error as std::convert::From>::from","value":"fn from(hir::Error) -> Error","parent":{"krate":2,"index":3169},"children":[],"decl_id":{"krate":2,"index":3171},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":510},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/error.rs","byte_start":305473,"byte_end":305484,"line_start":45,"line_end":45,"column_start":8,"column_end":19},"name":"description","qualname":"<Error as std::error::Error>::description","value":"fn description<'_>(&'_ Self) -> &'_ str","parent":{"krate":1,"index":2576},"children":[],"decl_id":{"krate":1,"index":2579},"docs":"","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/error.rs","byte_start":305445,"byte_end":305465,"line_start":44,"line_end":44,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":512},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/error.rs","byte_start":305721,"byte_end":305724,"line_start":55,"line_end":55,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Error as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":540},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hir","qualname":"::hir","value":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","parent":null,"children":[{"krate":0,"index":541},{"krate":0,"index":544},{"krate":0,"index":547},{"krate":0,"index":550},{"krate":0,"index":553},{"krate":0,"index":556},{"krate":0,"index":559},{"krate":0,"index":562},{"krate":0,"index":563},{"krate":0,"index":566},{"krate":0,"index":569},{"krate":0,"index":572},{"krate":0,"index":575},{"krate":0,"index":576},{"krate":0,"index":579},{"krate":0,"index":582},{"krate":0,"index":585},{"krate":0,"index":657},{"krate":0,"index":780},{"krate":0,"index":826},{"krate":0,"index":957},{"krate":0,"index":3038},{"krate":0,"index":3042},{"krate":0,"index":3044},{"krate":0,"index":3046},{"krate":0,"index":3047},{"krate":0,"index":3049},{"krate":0,"index":3050},{"krate":0,"index":1005},{"krate":0,"index":3053},{"krate":0,"index":3070},{"krate":0,"index":3072},{"krate":0,"index":3074},{"krate":0,"index":3075},{"krate":0,"index":3077},{"krate":0,"index":3078},{"krate":0,"index":1009},{"krate":0,"index":1012},{"krate":0,"index":1014},{"krate":0,"index":1016},{"krate":0,"index":3080},{"krate":0,"index":3083},{"krate":0,"index":3085},{"krate":0,"index":3087},{"krate":0,"index":3088},{"krate":0,"index":3090},{"krate":0,"index":3091},{"krate":0,"index":3094},{"krate":0,"index":3121},{"krate":0,"index":3123},{"krate":0,"index":3125},{"krate":0,"index":3126},{"krate":0,"index":3128},{"krate":0,"index":3129},{"krate":0,"index":1018},{"krate":0,"index":1054},{"krate":0,"index":1057},{"krate":0,"index":3132},{"krate":0,"index":3139},{"krate":0,"index":3141},{"krate":0,"index":3143},{"krate":0,"index":3144},{"krate":0,"index":3146},{"krate":0,"index":3147},{"krate":0,"index":1062},{"krate":0,"index":3150},{"krate":0,"index":3157},{"krate":0,"index":3159},{"krate":0,"index":3161},{"krate":0,"index":3162},{"krate":0,"index":3164},{"krate":0,"index":3165},{"krate":0,"index":1064},{"krate":0,"index":3168},{"krate":0,"index":3170},{"krate":0,"index":3172},{"krate":0,"index":3174},{"krate":0,"index":3175},{"krate":0,"index":3177},{"krate":0,"index":3178},{"krate":0,"index":1068},{"krate":0,"index":3181},{"krate":0,"index":3185},{"krate":0,"index":1084},{"krate":0,"index":3188},{"krate":0,"index":3191},{"krate":0,"index":3193},{"krate":0,"index":3194},{"krate":0,"index":3196},{"krate":0,"index":3197},{"krate":0,"index":3199},{"krate":0,"index":3200},{"krate":0,"index":3203},{"krate":0,"index":3205},{"krate":0,"index":1088},{"krate":0,"index":1090},{"krate":0,"index":1098},{"krate":0,"index":3207},{"krate":0,"index":3209},{"krate":0,"index":3211},{"krate":0,"index":3213},{"krate":0,"index":3214},{"krate":0,"index":3216},{"krate":0,"index":3217},{"krate":0,"index":1102},{"krate":0,"index":3220},{"krate":0,"index":3224},{"krate":0,"index":1117},{"krate":0,"index":3227},{"krate":0,"index":3230},{"krate":0,"index":3232},{"krate":0,"index":3233},{"krate":0,"index":3235},{"krate":0,"index":3236},{"krate":0,"index":3238},{"krate":0,"index":3239},{"krate":0,"index":3242},{"krate":0,"index":3244},{"krate":0,"index":1121},{"krate":0,"index":1128},{"krate":0,"index":1132},{"krate":0,"index":3246},{"krate":0,"index":3255},{"krate":0,"index":3257},{"krate":0,"index":3259},{"krate":0,"index":3260},{"krate":0,"index":3262},{"krate":0,"index":3263},{"krate":0,"index":3265},{"krate":0,"index":3274},{"krate":0,"index":3276},{"krate":0,"index":3278},{"krate":0,"index":3279},{"krate":0,"index":3281},{"krate":0,"index":3282},{"krate":0,"index":1134},{"krate":0,"index":3284},{"krate":0,"index":3287},{"krate":0,"index":3289},{"krate":0,"index":3291},{"krate":0,"index":3292},{"krate":0,"index":3294},{"krate":0,"index":3295},{"krate":0,"index":3298},{"krate":0,"index":3307},{"krate":0,"index":3309},{"krate":0,"index":3311},{"krate":0,"index":3312},{"krate":0,"index":3314},{"krate":0,"index":3315},{"krate":0,"index":3318},{"krate":0,"index":3322},{"krate":0,"index":3324},{"krate":0,"index":3326},{"krate":0,"index":3327},{"krate":0,"index":3329},{"krate":0,"index":3330},{"krate":0,"index":1136},{"krate":0,"index":3333},{"krate":0,"index":3343},{"krate":0,"index":3345},{"krate":0,"index":3347},{"krate":0,"index":3348},{"krate":0,"index":3350},{"krate":0,"index":3351},{"krate":0,"index":3354},{"krate":0,"index":3365},{"krate":0,"index":3367},{"krate":0,"index":3369},{"krate":0,"index":3370},{"krate":0,"index":3372},{"krate":0,"index":3373},{"krate":0,"index":1138},{"krate":0,"index":3376},{"krate":0,"index":3378},{"krate":0,"index":3380},{"krate":0,"index":3382},{"krate":0,"index":3383},{"krate":0,"index":3385},{"krate":0,"index":3386},{"krate":0,"index":1143},{"krate":0,"index":1144}],"decl_id":null,"docs":"Defines a high-level intermediate representation for regular expressions.\n","sig":null,"attributes":[{"value":"*\nDefines a high-level intermediate representation for regular expressions.\n*/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":315195,"byte_end":315275,"line_start":1,"line_end":3,"column_start":1,"column_end":3}}]},{"kind":"Type","id":{"krate":0,"index":625},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/interval.rs","byte_start":411365,"byte_end":411370,"line_start":338,"line_end":338,"column_start":10,"column_end":15},"name":"Bound","qualname":"::hir::interval::Interval::Bound","value":"type Bound: Bound;","parent":{"krate":0,"index":624},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":657},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"literal","qualname":"::hir::literal","value":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","parent":null,"children":[{"krate":0,"index":658},{"krate":0,"index":661},{"krate":0,"index":664},{"krate":0,"index":667},{"krate":0,"index":670},{"krate":0,"index":673},{"krate":0,"index":674},{"krate":0,"index":677},{"krate":0,"index":680},{"krate":0,"index":2938},{"krate":0,"index":2942},{"krate":0,"index":2944},{"krate":0,"index":2945},{"krate":0,"index":2947},{"krate":0,"index":2948},{"krate":0,"index":2951},{"krate":0,"index":2954},{"krate":0,"index":2956},{"krate":0,"index":2957},{"krate":0,"index":2959},{"krate":0,"index":683},{"krate":0,"index":734},{"krate":0,"index":736},{"krate":0,"index":738},{"krate":0,"index":740},{"krate":0,"index":742},{"krate":0,"index":744},{"krate":0,"index":747},{"krate":0,"index":749},{"krate":0,"index":751},{"krate":0,"index":756},{"krate":0,"index":758},{"krate":0,"index":760},{"krate":0,"index":762},{"krate":0,"index":764},{"krate":0,"index":767},{"krate":0,"index":769},{"krate":0,"index":770},{"krate":0,"index":771},{"krate":0,"index":772},{"krate":0,"index":776},{"krate":0,"index":778}],"decl_id":null,"docs":"Provides routines for extracting literal prefixes and suffixes from an `Hir`.\n","sig":null,"attributes":[{"value":"*\nProvides routines for extracting literal prefixes and suffixes from an `Hir`.\n*/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":417132,"byte_end":417216,"line_start":1,"line_end":3,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":2938},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":418559,"byte_end":418567,"line_start":35,"line_end":35,"column_start":12,"column_end":20},"name":"Literals","qualname":"::hir::literal::Literals","value":"Literals {  }","parent":null,"children":[{"krate":0,"index":2939},{"krate":0,"index":2940},{"krate":0,"index":2941}],"decl_id":null,"docs":" A set of literal byte strings extracted from a regular expression.","sig":null,"attributes":[{"value":"/ A set of literal byte strings extracted from a regular expression.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":417329,"byte_end":417399,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":417400,"byte_end":417403,"line_start":14,"line_end":14,"column_start":1,"column_end":4}},{"value":"/ Every member of the set is a `Literal`, which is represented by a","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":417404,"byte_end":417473,"line_start":15,"line_end":15,"column_start":1,"column_end":70}},{"value":"/ `Vec<u8>`. (Notably, it may contain invalid UTF-8.) Every member is","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":417474,"byte_end":417545,"line_start":16,"line_end":16,"column_start":1,"column_end":72}},{"value":"/ said to be either *complete* or *cut*. A complete literal means that","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":417546,"byte_end":417618,"line_start":17,"line_end":17,"column_start":1,"column_end":73}},{"value":"/ it extends until the beginning (or end) of the regular expression. In","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":417619,"byte_end":417692,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ some circumstances, this can be used to indicate a match in the regular","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":417693,"byte_end":417768,"line_start":19,"line_end":19,"column_start":1,"column_end":76}},{"value":"/ expression.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":417769,"byte_end":417784,"line_start":20,"line_end":20,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":417785,"byte_end":417788,"line_start":21,"line_end":21,"column_start":1,"column_end":4}},{"value":"/ A key aspect of literal extraction is knowing when to stop. It is not","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":417789,"byte_end":417862,"line_start":22,"line_end":22,"column_start":1,"column_end":74}},{"value":"/ feasible to blindly extract all literals from a regular expression, even if","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":417863,"byte_end":417942,"line_start":23,"line_end":23,"column_start":1,"column_end":80}},{"value":"/ there are finitely many. For example, the regular expression `[0-9]{10}`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":417943,"byte_end":418019,"line_start":24,"line_end":24,"column_start":1,"column_end":77}},{"value":"/ has `10^10` distinct literals. For this reason, literal extraction is","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":418020,"byte_end":418093,"line_start":25,"line_end":25,"column_start":1,"column_end":74}},{"value":"/ bounded to some low number by default using heuristics, but the limits can","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":418094,"byte_end":418172,"line_start":26,"line_end":26,"column_start":1,"column_end":79}},{"value":"/ be tweaked.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":418173,"byte_end":418188,"line_start":27,"line_end":27,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":418189,"byte_end":418192,"line_start":28,"line_end":28,"column_start":1,"column_end":4}},{"value":"/ **WARNING**: Literal extraction uses stack space proportional to the size","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":418193,"byte_end":418270,"line_start":29,"line_end":29,"column_start":1,"column_end":78}},{"value":"/ of the `Hir` expression. At some point, this drawback will be eliminated.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":418271,"byte_end":418348,"line_start":30,"line_end":30,"column_start":1,"column_end":78}},{"value":"/ To protect yourself, set a reasonable","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":418349,"byte_end":418390,"line_start":31,"line_end":31,"column_start":1,"column_end":42}},{"value":"/ [`nest_limit` on your `Parser`](../../struct.ParserBuilder.html#method.nest_limit).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":418391,"byte_end":418478,"line_start":32,"line_end":32,"column_start":1,"column_end":88}},{"value":"/ This is done for you by default.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":418479,"byte_end":418515,"line_start":33,"line_end":33,"column_start":1,"column_end":37}}]},{"kind":"Struct","id":{"krate":0,"index":2951},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":418881,"byte_end":418888,"line_start":46,"line_end":46,"column_start":12,"column_end":19},"name":"Literal","qualname":"::hir::literal::Literal","value":"Literal {  }","parent":null,"children":[{"krate":0,"index":2952},{"krate":0,"index":2953}],"decl_id":null,"docs":" A single member of a set of literals extracted from a regular expression.","sig":null,"attributes":[{"value":"/ A single member of a set of literals extracted from a regular expression.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":418644,"byte_end":418721,"line_start":41,"line_end":41,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":418722,"byte_end":418725,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ This type has `Deref` and `DerefMut` impls to `Vec<u8>` so that all slice","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":418726,"byte_end":418803,"line_start":43,"line_end":43,"column_start":1,"column_end":78}},{"value":"/ and `Vec` operations are available.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":418804,"byte_end":418843,"line_start":44,"line_end":44,"column_start":1,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":684},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":419018,"byte_end":419023,"line_start":53,"line_end":53,"column_start":12,"column_end":17},"name":"empty","qualname":"<Literals>::empty","value":"fn empty() -> Literals","parent":null,"children":[],"decl_id":null,"docs":" Returns a new empty set of literals using default limits.\n","sig":null,"attributes":[{"value":"/ Returns a new empty set of literals using default limits.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":418945,"byte_end":419006,"line_start":52,"line_end":52,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":685},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":419200,"byte_end":419208,"line_start":58,"line_end":58,"column_start":12,"column_end":20},"name":"prefixes","qualname":"<Literals>::prefixes","value":"fn prefixes<'_>(&'_ Hir) -> Literals","parent":null,"children":[],"decl_id":null,"docs":" Returns a set of literal prefixes extracted from the given `Hir`.\n","sig":null,"attributes":[{"value":"/ Returns a set of literal prefixes extracted from the given `Hir`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":419119,"byte_end":419188,"line_start":57,"line_end":57,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":686},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":419417,"byte_end":419425,"line_start":65,"line_end":65,"column_start":12,"column_end":20},"name":"suffixes","qualname":"<Literals>::suffixes","value":"fn suffixes<'_>(&'_ Hir) -> Literals","parent":null,"children":[],"decl_id":null,"docs":" Returns a set of literal suffixes extracted from the given `Hir`.\n","sig":null,"attributes":[{"value":"/ Returns a set of literal suffixes extracted from the given `Hir`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":419336,"byte_end":419405,"line_start":64,"line_end":64,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":687},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":419623,"byte_end":419633,"line_start":72,"line_end":72,"column_start":12,"column_end":22},"name":"limit_size","qualname":"<Literals>::limit_size","value":"fn limit_size<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the approximate size limit (in bytes) of this set.\n","sig":null,"attributes":[{"value":"/ Get the approximate size limit (in bytes) of this set.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":419553,"byte_end":419611,"line_start":71,"line_end":71,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":688},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":420018,"byte_end":420032,"line_start":83,"line_end":83,"column_start":12,"column_end":26},"name":"set_limit_size","qualname":"<Literals>::set_limit_size","value":"fn set_limit_size<'_>(&'_ mut Self, usize) -> &'_ mut Literals","parent":null,"children":[],"decl_id":null,"docs":" Set the approximate size limit (in bytes) of this set.","sig":null,"attributes":[{"value":"/ Set the approximate size limit (in bytes) of this set.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":419687,"byte_end":419745,"line_start":76,"line_end":76,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":419750,"byte_end":419753,"line_start":77,"line_end":77,"column_start":5,"column_end":8}},{"value":"/ If extracting a literal would put the set over this limit, then","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":419758,"byte_end":419825,"line_start":78,"line_end":78,"column_start":5,"column_end":72}},{"value":"/ extraction stops.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":419830,"byte_end":419851,"line_start":79,"line_end":79,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":419856,"byte_end":419859,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ The new limits will only apply to additions to this set. Existing","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":419864,"byte_end":419933,"line_start":81,"line_end":81,"column_start":5,"column_end":74}},{"value":"/ members remain unchanged, even if the set exceeds the new limit.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":419938,"byte_end":420006,"line_start":82,"line_end":82,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":689},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":420196,"byte_end":420207,"line_start":89,"line_end":89,"column_start":12,"column_end":23},"name":"limit_class","qualname":"<Literals>::limit_class","value":"fn limit_class<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the character class size limit for this set.\n","sig":null,"attributes":[{"value":"/ Get the character class size limit for this set.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":420132,"byte_end":420184,"line_start":88,"line_end":88,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":690},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":420761,"byte_end":420776,"line_start":103,"line_end":103,"column_start":12,"column_end":27},"name":"set_limit_class","qualname":"<Literals>::set_limit_class","value":"fn set_limit_class<'_>(&'_ mut Self, usize) -> &'_ mut Literals","parent":null,"children":[],"decl_id":null,"docs":" Limits the size of character(or byte) classes considered.","sig":null,"attributes":[{"value":"/ Limits the size of character(or byte) classes considered.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":420262,"byte_end":420323,"line_start":93,"line_end":93,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":420328,"byte_end":420331,"line_start":94,"line_end":94,"column_start":5,"column_end":8}},{"value":"/ A value of `0` prevents all character classes from being considered.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":420336,"byte_end":420408,"line_start":95,"line_end":95,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":420413,"byte_end":420416,"line_start":96,"line_end":96,"column_start":5,"column_end":8}},{"value":"/ This limit also applies to case insensitive literals, since each","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":420421,"byte_end":420489,"line_start":97,"line_end":97,"column_start":5,"column_end":73}},{"value":"/ character in the case insensitive literal is converted to a class, and","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":420494,"byte_end":420568,"line_start":98,"line_end":98,"column_start":5,"column_end":79}},{"value":"/ then case folded.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":420573,"byte_end":420594,"line_start":99,"line_end":99,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":420599,"byte_end":420602,"line_start":100,"line_end":100,"column_start":5,"column_end":8}},{"value":"/ The new limits will only apply to additions to this set. Existing","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":420607,"byte_end":420676,"line_start":101,"line_end":101,"column_start":5,"column_end":74}},{"value":"/ members remain unchanged, even if the set exceeds the new limit.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":420681,"byte_end":420749,"line_start":102,"line_end":102,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":691},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":420958,"byte_end":420966,"line_start":109,"line_end":109,"column_start":12,"column_end":20},"name":"literals","qualname":"<Literals>::literals","value":"fn literals<'_>(&'_ Self) -> &'_ [Literal]","parent":null,"children":[],"decl_id":null,"docs":" Returns the set of literals as a slice. Its order is unspecified.\n","sig":null,"attributes":[{"value":"/ Returns the set of literals as a slice. Its order is unspecified.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":420877,"byte_end":420946,"line_start":108,"line_end":108,"column_start":5,"column_end":74}}]},{"kind":"Method","id":{"krate":0,"index":692},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":421145,"byte_end":421152,"line_start":116,"line_end":116,"column_start":12,"column_end":19},"name":"min_len","qualname":"<Literals>::min_len","value":"fn min_len<'_>(&'_ Self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Returns the length of the smallest literal.","sig":null,"attributes":[{"value":"/ Returns the length of the smallest literal.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":421020,"byte_end":421067,"line_start":113,"line_end":113,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":421072,"byte_end":421075,"line_start":114,"line_end":114,"column_start":5,"column_end":8}},{"value":"/ Returns None is there are no literals in the set.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":421080,"byte_end":421133,"line_start":115,"line_end":115,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":693},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":421517,"byte_end":421529,"line_start":129,"line_end":129,"column_start":12,"column_end":24},"name":"all_complete","qualname":"<Literals>::all_complete","value":"fn all_complete<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if all members in this set are complete.\n","sig":null,"attributes":[{"value":"/ Returns true if all members in this set are complete.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":421448,"byte_end":421505,"line_start":128,"line_end":128,"column_start":5,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":695},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":421696,"byte_end":421708,"line_start":134,"line_end":134,"column_start":12,"column_end":24},"name":"any_complete","qualname":"<Literals>::any_complete","value":"fn any_complete<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if any member in this set is complete.\n","sig":null,"attributes":[{"value":"/ Returns true if any member in this set is complete.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":421629,"byte_end":421684,"line_start":133,"line_end":133,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":697},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":421854,"byte_end":421868,"line_start":139,"line_end":139,"column_start":12,"column_end":26},"name":"contains_empty","qualname":"<Literals>::contains_empty","value":"fn contains_empty<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this set contains an empty literal.\n","sig":null,"attributes":[{"value":"/ Returns true if this set contains an empty literal.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":421787,"byte_end":421842,"line_start":138,"line_end":138,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":699},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":422032,"byte_end":422040,"line_start":144,"line_end":144,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<Literals>::is_empty","value":"fn is_empty<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this set is empty or if all of its members is empty.\n","sig":null,"attributes":[{"value":"/ Returns true if this set is empty or if all of its members is empty.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":421948,"byte_end":422020,"line_start":143,"line_end":143,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":701},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":422220,"byte_end":422228,"line_start":149,"line_end":149,"column_start":12,"column_end":20},"name":"to_empty","qualname":"<Literals>::to_empty","value":"fn to_empty<'_>(&'_ Self) -> Literals","parent":null,"children":[],"decl_id":null,"docs":" Returns a new empty set of literals using this set's limits.\n","sig":null,"attributes":[{"value":"/ Returns a new empty set of literals using this set's limits.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":422144,"byte_end":422208,"line_start":148,"line_end":148,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":702},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":422473,"byte_end":422494,"line_start":156,"line_end":156,"column_start":12,"column_end":33},"name":"longest_common_prefix","qualname":"<Literals>::longest_common_prefix","value":"fn longest_common_prefix<'_>(&'_ Self) -> &'_ [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest common prefix of all members in this set.\n","sig":null,"attributes":[{"value":"/ Returns the longest common prefix of all members in this set.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":422396,"byte_end":422461,"line_start":155,"line_end":155,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":704},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":422948,"byte_end":422969,"line_start":172,"line_end":172,"column_start":12,"column_end":33},"name":"longest_common_suffix","qualname":"<Literals>::longest_common_suffix","value":"fn longest_common_suffix<'_>(&'_ Self) -> &'_ [u8]","parent":null,"children":[],"decl_id":null,"docs":" Returns the longest common suffix of all members in this set.\n","sig":null,"attributes":[{"value":"/ Returns the longest common suffix of all members in this set.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":422871,"byte_end":422936,"line_start":171,"line_end":171,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":706},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":423802,"byte_end":423813,"line_start":199,"line_end":199,"column_start":12,"column_end":23},"name":"trim_suffix","qualname":"<Literals>::trim_suffix","value":"fn trim_suffix<'_>(&'_ Self, usize) -> Option<Literals>","parent":null,"children":[],"decl_id":null,"docs":" Returns a new set of literals with the given number of bytes trimmed\n from the suffix of each literal.","sig":null,"attributes":[{"value":"/ Returns a new set of literals with the given number of bytes trimmed","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":423470,"byte_end":423542,"line_start":191,"line_end":191,"column_start":5,"column_end":77}},{"value":"/ from the suffix of each literal.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":423547,"byte_end":423583,"line_start":192,"line_end":192,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":423588,"byte_end":423591,"line_start":193,"line_end":193,"column_start":5,"column_end":8}},{"value":"/ If any literal would be cut out completely by trimming, then None is","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":423596,"byte_end":423668,"line_start":194,"line_end":194,"column_start":5,"column_end":77}},{"value":"/ returned.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":423673,"byte_end":423686,"line_start":195,"line_end":195,"column_start":5,"column_end":18}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":423691,"byte_end":423694,"line_start":196,"line_end":196,"column_start":5,"column_end":8}},{"value":"/ Any duplicates that are created as a result of this transformation are","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":423699,"byte_end":423773,"line_start":197,"line_end":197,"column_start":5,"column_end":79}},{"value":"/ removed.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":423778,"byte_end":423790,"line_start":198,"line_end":198,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":708},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":424710,"byte_end":424730,"line_start":224,"line_end":224,"column_start":12,"column_end":32},"name":"unambiguous_prefixes","qualname":"<Literals>::unambiguous_prefixes","value":"fn unambiguous_prefixes<'_>(&'_ Self) -> Literals","parent":null,"children":[],"decl_id":null,"docs":" Returns a new set of prefixes of this set of literals that are\n guaranteed to be unambiguous.","sig":null,"attributes":[{"value":"/ Returns a new set of prefixes of this set of literals that are","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":424287,"byte_end":424353,"line_start":215,"line_end":215,"column_start":5,"column_end":71}},{"value":"/ guaranteed to be unambiguous.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":424358,"byte_end":424391,"line_start":216,"line_end":216,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":424396,"byte_end":424399,"line_start":217,"line_end":217,"column_start":5,"column_end":8}},{"value":"/ Any substring match with a member of the set is returned is guaranteed","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":424404,"byte_end":424478,"line_start":218,"line_end":218,"column_start":5,"column_end":79}},{"value":"/ to never overlap with a substring match of another member of the set","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":424483,"byte_end":424555,"line_start":219,"line_end":219,"column_start":5,"column_end":77}},{"value":"/ at the same starting position.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":424560,"byte_end":424594,"line_start":220,"line_end":220,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":424599,"byte_end":424602,"line_start":221,"line_end":221,"column_start":5,"column_end":8}},{"value":"/ Given any two members of the returned set, neither is a substring of","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":424607,"byte_end":424679,"line_start":222,"line_end":222,"column_start":5,"column_end":77}},{"value":"/ the other.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":424684,"byte_end":424698,"line_start":223,"line_end":223,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":710},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":427200,"byte_end":427220,"line_start":289,"line_end":289,"column_start":12,"column_end":32},"name":"unambiguous_suffixes","qualname":"<Literals>::unambiguous_suffixes","value":"fn unambiguous_suffixes<'_>(&'_ Self) -> Literals","parent":null,"children":[],"decl_id":null,"docs":" Returns a new set of suffixes of this set of literals that are\n guaranteed to be unambiguous.","sig":null,"attributes":[{"value":"/ Returns a new set of suffixes of this set of literals that are","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":426779,"byte_end":426845,"line_start":280,"line_end":280,"column_start":5,"column_end":71}},{"value":"/ guaranteed to be unambiguous.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":426850,"byte_end":426883,"line_start":281,"line_end":281,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":426888,"byte_end":426891,"line_start":282,"line_end":282,"column_start":5,"column_end":8}},{"value":"/ Any substring match with a member of the set is returned is guaranteed","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":426896,"byte_end":426970,"line_start":283,"line_end":283,"column_start":5,"column_end":79}},{"value":"/ to never overlap with a substring match of another member of the set","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":426975,"byte_end":427047,"line_start":284,"line_end":284,"column_start":5,"column_end":77}},{"value":"/ at the same ending position.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":427052,"byte_end":427084,"line_start":285,"line_end":285,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":427089,"byte_end":427092,"line_start":286,"line_end":286,"column_start":5,"column_end":8}},{"value":"/ Given any two members of the returned set, neither is a substring of","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":427097,"byte_end":427169,"line_start":287,"line_end":287,"column_start":5,"column_end":77}},{"value":"/ the other.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":427174,"byte_end":427188,"line_start":288,"line_end":288,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":711},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":427911,"byte_end":427925,"line_start":307,"line_end":307,"column_start":12,"column_end":26},"name":"union_prefixes","qualname":"<Literals>::union_prefixes","value":"fn union_prefixes<'_, '_>(&'_ mut Self, &'_ Hir) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Unions the prefixes from the given expression to this set.","sig":null,"attributes":[{"value":"/ Unions the prefixes from the given expression to this set.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":427445,"byte_end":427507,"line_start":298,"line_end":298,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":427512,"byte_end":427515,"line_start":299,"line_end":299,"column_start":5,"column_end":8}},{"value":"/ If prefixes could not be added (for example, this set would exceed its","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":427520,"byte_end":427594,"line_start":300,"line_end":300,"column_start":5,"column_end":79}},{"value":"/ size limits or the set of prefixes from `expr` includes the empty","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":427599,"byte_end":427668,"line_start":301,"line_end":301,"column_start":5,"column_end":74}},{"value":"/ string), then false is returned.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":427673,"byte_end":427709,"line_start":302,"line_end":302,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":427714,"byte_end":427717,"line_start":303,"line_end":303,"column_start":5,"column_end":8}},{"value":"/ Note that prefix literals extracted from `expr` are said to be complete","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":427722,"byte_end":427797,"line_start":304,"line_end":304,"column_start":5,"column_end":80}},{"value":"/ if and only if the literal extends from the beginning of `expr` to the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":427802,"byte_end":427876,"line_start":305,"line_end":305,"column_start":5,"column_end":79}},{"value":"/ end of `expr`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":427881,"byte_end":427899,"line_start":306,"line_end":306,"column_start":5,"column_end":23}}]},{"kind":"Method","id":{"krate":0,"index":712},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":428582,"byte_end":428596,"line_start":322,"line_end":322,"column_start":12,"column_end":26},"name":"union_suffixes","qualname":"<Literals>::union_suffixes","value":"fn union_suffixes<'_, '_>(&'_ mut Self, &'_ Hir) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Unions the suffixes from the given expression to this set.","sig":null,"attributes":[{"value":"/ Unions the suffixes from the given expression to this set.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":428116,"byte_end":428178,"line_start":313,"line_end":313,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":428183,"byte_end":428186,"line_start":314,"line_end":314,"column_start":5,"column_end":8}},{"value":"/ If suffixes could not be added (for example, this set would exceed its","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":428191,"byte_end":428265,"line_start":315,"line_end":315,"column_start":5,"column_end":79}},{"value":"/ size limits or the set of suffixes from `expr` includes the empty","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":428270,"byte_end":428339,"line_start":316,"line_end":316,"column_start":5,"column_end":74}},{"value":"/ string), then false is returned.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":428344,"byte_end":428380,"line_start":317,"line_end":317,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":428385,"byte_end":428388,"line_start":318,"line_end":318,"column_start":5,"column_end":8}},{"value":"/ Note that prefix literals extracted from `expr` are said to be complete","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":428393,"byte_end":428468,"line_start":319,"line_end":319,"column_start":5,"column_end":80}},{"value":"/ if and only if the literal extends from the end of `expr` to the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":428473,"byte_end":428541,"line_start":320,"line_end":320,"column_start":5,"column_end":73}},{"value":"/ beginning of `expr`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":428546,"byte_end":428570,"line_start":321,"line_end":321,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":713},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":429046,"byte_end":429051,"line_start":334,"line_end":334,"column_start":12,"column_end":17},"name":"union","qualname":"<Literals>::union","value":"fn union<'_>(&'_ mut Self, Literals) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Unions this set with another set.","sig":null,"attributes":[{"value":"/ Unions this set with another set.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":428811,"byte_end":428848,"line_start":329,"line_end":329,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":428853,"byte_end":428856,"line_start":330,"line_end":330,"column_start":5,"column_end":8}},{"value":"/ If the union would cause the set to exceed its limits, then the union","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":428861,"byte_end":428934,"line_start":331,"line_end":331,"column_start":5,"column_end":78}},{"value":"/ is skipped and it returns false. Otherwise, if the union succeeds, it","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":428939,"byte_end":429012,"line_start":332,"line_end":332,"column_start":5,"column_end":78}},{"value":"/ returns true.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":429017,"byte_end":429034,"line_start":333,"line_end":333,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":714},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":429687,"byte_end":429700,"line_start":353,"line_end":353,"column_start":12,"column_end":25},"name":"cross_product","qualname":"<Literals>::cross_product","value":"fn cross_product<'_, '_>(&'_ mut Self, &'_ Literals) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Extends this set with another set.","sig":null,"attributes":[{"value":"/ Extends this set with another set.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":429359,"byte_end":429397,"line_start":346,"line_end":346,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":429402,"byte_end":429405,"line_start":347,"line_end":347,"column_start":5,"column_end":8}},{"value":"/ The set of literals is extended via a cross product.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":429410,"byte_end":429466,"line_start":348,"line_end":348,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":429471,"byte_end":429474,"line_start":349,"line_end":349,"column_start":5,"column_end":8}},{"value":"/ If a cross product would cause this set to exceed its limits, then the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":429479,"byte_end":429553,"line_start":350,"line_end":350,"column_start":5,"column_end":79}},{"value":"/ cross product is skipped and it returns false. Otherwise, if the cross","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":429558,"byte_end":429632,"line_start":351,"line_end":351,"column_start":5,"column_end":79}},{"value":"/ product succeeds, it returns true.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":429637,"byte_end":429675,"line_start":352,"line_end":352,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":716},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":431434,"byte_end":431443,"line_start":402,"line_end":402,"column_start":12,"column_end":21},"name":"cross_add","qualname":"<Literals>::cross_add","value":"fn cross_add<'_, '_>(&'_ mut Self, &'_ [u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Extends each literal in this set with the bytes given.","sig":null,"attributes":[{"value":"/ Extends each literal in this set with the bytes given.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":431007,"byte_end":431065,"line_start":394,"line_end":394,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":431070,"byte_end":431073,"line_start":395,"line_end":395,"column_start":5,"column_end":8}},{"value":"/ If the set is empty, then the given literal is added to the set.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":431078,"byte_end":431146,"line_start":396,"line_end":396,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":431151,"byte_end":431154,"line_start":397,"line_end":397,"column_start":5,"column_end":8}},{"value":"/ If adding any number of bytes to all members of this set causes a limit","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":431159,"byte_end":431234,"line_start":398,"line_end":398,"column_start":5,"column_end":80}},{"value":"/ to be exceeded, then no bytes are added and false is returned. If a","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":431239,"byte_end":431310,"line_start":399,"line_end":399,"column_start":5,"column_end":76}},{"value":"/ prefix of `bytes` can be fit into this set, then it is used and all","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":431315,"byte_end":431386,"line_start":400,"line_end":400,"column_start":5,"column_end":76}},{"value":"/ resulting literals are cut.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":431391,"byte_end":431422,"line_start":401,"line_end":401,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":717},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":432698,"byte_end":432701,"line_start":440,"line_end":440,"column_start":12,"column_end":15},"name":"add","qualname":"<Literals>::add","value":"fn add<'_>(&'_ mut Self, Literal) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Adds the given literal to this set.","sig":null,"attributes":[{"value":"/ Adds the given literal to this set.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":432549,"byte_end":432588,"line_start":436,"line_end":436,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":432593,"byte_end":432596,"line_start":437,"line_end":437,"column_start":5,"column_end":8}},{"value":"/ Returns false if adding this literal would cause the class to be too","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":432601,"byte_end":432673,"line_start":438,"line_end":438,"column_start":5,"column_end":77}},{"value":"/ big.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":432678,"byte_end":432686,"line_start":439,"line_end":439,"column_start":5,"column_end":13}}]},{"kind":"Method","id":{"krate":0,"index":718},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":433039,"byte_end":433053,"line_start":451,"line_end":451,"column_start":12,"column_end":26},"name":"add_char_class","qualname":"<Literals>::add_char_class","value":"fn add_char_class<'_, '_>(&'_ mut Self, &'_ hir::ClassUnicode) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Extends each literal in this set with the character class given.","sig":null,"attributes":[{"value":"/ Extends each literal in this set with the character class given.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":432886,"byte_end":432954,"line_start":448,"line_end":448,"column_start":5,"column_end":73}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":432959,"byte_end":432962,"line_start":449,"line_end":449,"column_start":5,"column_end":8}},{"value":"/ Returns false if the character class was too big to add.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":432967,"byte_end":433027,"line_start":450,"line_end":450,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":724},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":434481,"byte_end":434495,"line_start":496,"line_end":496,"column_start":12,"column_end":26},"name":"add_byte_class","qualname":"<Literals>::add_byte_class","value":"fn add_byte_class<'_, '_>(&'_ mut Self, &'_ hir::ClassBytes) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Extends each literal in this set with the byte class given.","sig":null,"attributes":[{"value":"/ Extends each literal in this set with the byte class given.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":434338,"byte_end":434401,"line_start":493,"line_end":493,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":434406,"byte_end":434409,"line_start":494,"line_end":494,"column_start":5,"column_end":8}},{"value":"/ Returns false if the byte class was too big to add.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":434414,"byte_end":434469,"line_start":495,"line_end":495,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":726},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":435191,"byte_end":435194,"line_start":518,"line_end":518,"column_start":12,"column_end":15},"name":"cut","qualname":"<Literals>::cut","value":"fn cut<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Cuts every member of this set. When a member is cut, it can never\n be extended.\n","sig":null,"attributes":[{"value":"/ Cuts every member of this set. When a member is cut, it can never","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":435089,"byte_end":435158,"line_start":516,"line_end":516,"column_start":5,"column_end":74}},{"value":"/ be extended.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":435163,"byte_end":435179,"line_start":517,"line_end":517,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":727},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":435334,"byte_end":435341,"line_start":525,"line_end":525,"column_start":12,"column_end":19},"name":"reverse","qualname":"<Literals>::reverse","value":"fn reverse<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reverses all members in place.\n","sig":null,"attributes":[{"value":"/ Reverses all members in place.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":435288,"byte_end":435322,"line_start":524,"line_end":524,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":728},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":435486,"byte_end":435491,"line_start":532,"line_end":532,"column_start":12,"column_end":17},"name":"clear","qualname":"<Literals>::clear","value":"fn clear<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Clears this set of all members.\n","sig":null,"attributes":[{"value":"/ Clears this set of all members.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":435439,"byte_end":435474,"line_start":531,"line_end":531,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":750},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":445708,"byte_end":445711,"line_start":839,"line_end":839,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Literals as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":752},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":446060,"byte_end":446063,"line_start":850,"line_end":850,"column_start":12,"column_end":15},"name":"new","qualname":"<Literal>::new","value":"fn new(Vec<u8>) -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Returns a new complete literal with the bytes given.\n","sig":null,"attributes":[{"value":"/ Returns a new complete literal with the bytes given.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":445992,"byte_end":446048,"line_start":849,"line_end":849,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":753},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":446198,"byte_end":446203,"line_start":855,"line_end":855,"column_start":12,"column_end":17},"name":"empty","qualname":"<Literal>::empty","value":"fn empty() -> Literal","parent":null,"children":[],"decl_id":null,"docs":" Returns a new complete empty literal.\n","sig":null,"attributes":[{"value":"/ Returns a new complete empty literal.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":446145,"byte_end":446186,"line_start":854,"line_end":854,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":754},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":446327,"byte_end":446333,"line_start":860,"line_end":860,"column_start":12,"column_end":18},"name":"is_cut","qualname":"<Literal>::is_cut","value":"fn is_cut<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if this literal was \"cut.\"\n","sig":null,"attributes":[{"value":"/ Returns true if this literal was \"cut.\"","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":446272,"byte_end":446315,"line_start":859,"line_end":859,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":755},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":446413,"byte_end":446416,"line_start":865,"line_end":865,"column_start":12,"column_end":15},"name":"cut","qualname":"<Literal>::cut","value":"fn cut<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Cuts this literal.\n","sig":null,"attributes":[{"value":"/ Cuts this literal.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":446379,"byte_end":446401,"line_start":864,"line_end":864,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":757},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":446500,"byte_end":446502,"line_start":871,"line_end":871,"column_start":8,"column_end":10},"name":"eq","qualname":"<Literal as std::cmp::PartialEq>::eq","value":"fn eq<'_, '_>(&'_ Self, &'_ Literal) -> bool","parent":{"krate":2,"index":2915},"children":[],"decl_id":{"krate":2,"index":2917},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":759},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":446609,"byte_end":446620,"line_start":877,"line_end":877,"column_start":8,"column_end":19},"name":"partial_cmp","qualname":"<Literal as std::cmp::PartialOrd>::partial_cmp","value":"fn partial_cmp<'_, '_>(&'_ Self, &'_ Literal) -> Option<cmp::Ordering>","parent":{"krate":2,"index":2961},"children":[],"decl_id":{"krate":2,"index":2963},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":761},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":446755,"byte_end":446758,"line_start":883,"line_end":883,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Literal as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":763},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":447033,"byte_end":447039,"line_start":893,"line_end":893,"column_start":8,"column_end":14},"name":"as_ref","qualname":"<Literal as std::convert::AsRef>::as_ref","value":"fn as_ref<'_>(&'_ Self) -> &'_ [u8]","parent":{"krate":2,"index":3160},"children":[],"decl_id":{"krate":2,"index":3162},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":766},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":447147,"byte_end":447152,"line_start":900,"line_end":900,"column_start":8,"column_end":13},"name":"deref","qualname":"<Literal as std::ops::Deref>::deref","value":"fn deref<'_>(&'_ Self) -> &'_ Vec<u8>","parent":{"krate":2,"index":3486},"children":[],"decl_id":{"krate":2,"index":3488},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":768},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":447239,"byte_end":447248,"line_start":906,"line_end":906,"column_start":8,"column_end":17},"name":"deref_mut","qualname":"<Literal as std::ops::DerefMut>::deref_mut","value":"fn deref_mut<'_>(&'_ mut Self) -> &'_ mut Vec<u8>","parent":{"krate":2,"index":3499},"children":[],"decl_id":{"krate":2,"index":3500},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":780},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/print.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"print","qualname":"::hir::print","value":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/print.rs","parent":null,"children":[{"krate":0,"index":781},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":788},{"krate":0,"index":791},{"krate":0,"index":792},{"krate":0,"index":795},{"krate":0,"index":798},{"krate":0,"index":801},{"krate":0,"index":2961},{"krate":0,"index":2963},{"krate":0,"index":2965},{"krate":0,"index":804},{"krate":0,"index":806},{"krate":0,"index":2967},{"krate":0,"index":2969},{"krate":0,"index":809},{"krate":0,"index":2971},{"krate":0,"index":2974},{"krate":0,"index":813},{"krate":0,"index":821}],"decl_id":null,"docs":"This module provides a regular expression printer for `Hir`.\n","sig":null,"attributes":[{"value":"*\nThis module provides a regular expression printer for `Hir`.\n*/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/print.rs","byte_start":473418,"byte_end":473485,"line_start":1,"line_end":3,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":2967},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/print.rs","byte_start":474998,"byte_end":475005,"line_start":53,"line_end":53,"column_start":12,"column_end":19},"name":"Printer","qualname":"::hir::print::Printer","value":"Printer {  }","parent":null,"children":[{"krate":0,"index":2968}],"decl_id":null,"docs":" A printer for a regular expression's high-level intermediate\n representation.","sig":null,"attributes":[{"value":"/ A printer for a regular expression's high-level intermediate","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/print.rs","byte_start":474108,"byte_end":474172,"line_start":36,"line_end":36,"column_start":1,"column_end":65}},{"value":"/ representation.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/print.rs","byte_start":474173,"byte_end":474192,"line_start":37,"line_end":37,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/print.rs","byte_start":474193,"byte_end":474196,"line_start":38,"line_end":38,"column_start":1,"column_end":4}},{"value":"/ A printer converts a high-level intermediate representation (HIR) to a","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/print.rs","byte_start":474197,"byte_end":474271,"line_start":39,"line_end":39,"column_start":1,"column_end":75}},{"value":"/ regular expression pattern string. This particular printer uses constant","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/print.rs","byte_start":474272,"byte_end":474348,"line_start":40,"line_end":40,"column_start":1,"column_end":77}},{"value":"/ stack space and heap space proportional to the size of the HIR.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/print.rs","byte_start":474349,"byte_end":474416,"line_start":41,"line_end":41,"column_start":1,"column_end":68}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/print.rs","byte_start":474417,"byte_end":474420,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"/ Since this printer is only using the HIR, the pattern it prints will likely","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/print.rs","byte_start":474421,"byte_end":474500,"line_start":43,"line_end":43,"column_start":1,"column_end":80}},{"value":"/ not resemble the original pattern at all. For example, a pattern like","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/print.rs","byte_start":474501,"byte_end":474574,"line_start":44,"line_end":44,"column_start":1,"column_end":74}},{"value":"/ `\\pL` will have its entire class written out.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/print.rs","byte_start":474575,"byte_end":474624,"line_start":45,"line_end":45,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/print.rs","byte_start":474625,"byte_end":474628,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"/ The purpose of this printer is to provide a means to mutate an HIR and then","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/print.rs","byte_start":474629,"byte_end":474708,"line_start":47,"line_end":47,"column_start":1,"column_end":80}},{"value":"/ build a regular expression from the result of that mutation. (A regex","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/print.rs","byte_start":474709,"byte_end":474782,"line_start":48,"line_end":48,"column_start":1,"column_end":74}},{"value":"/ library could provide a constructor from this HIR explicitly, but that","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/print.rs","byte_start":474783,"byte_end":474857,"line_start":49,"line_end":49,"column_start":1,"column_end":75}},{"value":"/ creates an unnecessary public coupling between the regex library and this","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/print.rs","byte_start":474858,"byte_end":474935,"line_start":50,"line_end":50,"column_start":1,"column_end":78}},{"value":"/ specific HIR representation.)","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/print.rs","byte_start":474936,"byte_end":474969,"line_start":51,"line_end":51,"column_start":1,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":810},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/print.rs","byte_start":475082,"byte_end":475085,"line_start":59,"line_end":59,"column_start":12,"column_end":15},"name":"new","qualname":"<Printer>::new","value":"fn new() -> Printer","parent":null,"children":[],"decl_id":null,"docs":" Create a new printer.\n","sig":null,"attributes":[{"value":"/ Create a new printer.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/print.rs","byte_start":475045,"byte_end":475070,"line_start":58,"line_end":58,"column_start":5,"column_end":30}}]},{"kind":"Method","id":{"krate":0,"index":811},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/print.rs","byte_start":475432,"byte_end":475437,"line_start":67,"line_end":67,"column_start":12,"column_end":17},"name":"print","qualname":"<Printer>::print","value":"fn print<W, '_, '_>(&'_ mut Self, &'_ Hir, W) -> fmt::Result where\nW: fmt::Write","parent":null,"children":[],"decl_id":null,"docs":" Print the given `Ast` to the given writer. The writer must implement\n `fmt::Write`. Typical implementations of `fmt::Write` that can be used\n here are a `fmt::Formatter` (which is available in `fmt::Display`\n implementations) or a `&mut String`.\n","sig":null,"attributes":[{"value":"/ Print the given `Ast` to the given writer. The writer must implement","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/print.rs","byte_start":475150,"byte_end":475222,"line_start":63,"line_end":63,"column_start":5,"column_end":77}},{"value":"/ `fmt::Write`. Typical implementations of `fmt::Write` that can be used","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/print.rs","byte_start":475227,"byte_end":475301,"line_start":64,"line_end":64,"column_start":5,"column_end":79}},{"value":"/ here are a `fmt::Formatter` (which is available in `fmt::Display`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/print.rs","byte_start":475306,"byte_end":475375,"line_start":65,"line_end":65,"column_start":5,"column_end":74}},{"value":"/ implementations) or a `&mut String`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/print.rs","byte_start":475380,"byte_end":475420,"line_start":66,"line_end":66,"column_start":5,"column_end":45}}]},{"kind":"Mod","id":{"krate":0,"index":826},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"translate","qualname":"::hir::translate","value":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","parent":null,"children":[{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":831},{"krate":0,"index":834},{"krate":0,"index":837},{"krate":0,"index":838},{"krate":0,"index":841},{"krate":0,"index":844},{"krate":0,"index":847},{"krate":0,"index":850},{"krate":0,"index":851},{"krate":0,"index":854},{"krate":0,"index":857},{"krate":0,"index":860},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":867},{"krate":0,"index":870},{"krate":0,"index":2977},{"krate":0,"index":2980},{"krate":0,"index":2982},{"krate":0,"index":872},{"krate":0,"index":874},{"krate":0,"index":2984},{"krate":0,"index":2988},{"krate":0,"index":2990},{"krate":0,"index":883},{"krate":0,"index":2992},{"krate":0,"index":3008},{"krate":0,"index":3010},{"krate":0,"index":886},{"krate":0,"index":891},{"krate":0,"index":3012},{"krate":0,"index":3017},{"krate":0,"index":3021},{"krate":0,"index":909},{"krate":0,"index":3025},{"krate":0,"index":3031},{"krate":0,"index":3033},{"krate":0,"index":3034},{"krate":0,"index":3036},{"krate":0,"index":945},{"krate":0,"index":953},{"krate":0,"index":955}],"decl_id":null,"docs":"Defines a translator that converts an `Ast` to an `Hir`.\n","sig":null,"attributes":[{"value":"*\nDefines a translator that converts an `Ast` to an `Hir`.\n*/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":485058,"byte_end":485121,"line_start":1,"line_end":3,"column_start":1,"column_end":3}}]},{"kind":"Struct","id":{"krate":0,"index":2977},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":485439,"byte_end":485456,"line_start":16,"line_end":16,"column_start":12,"column_end":29},"name":"TranslatorBuilder","qualname":"::hir::translate::TranslatorBuilder","value":"TranslatorBuilder {  }","parent":null,"children":[{"krate":0,"index":2978},{"krate":0,"index":2979}],"decl_id":null,"docs":" A builder for constructing an AST->HIR translator.\n","sig":null,"attributes":[{"value":"/ A builder for constructing an AST->HIR translator.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":485349,"byte_end":485403,"line_start":14,"line_end":14,"column_start":1,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":873},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":485554,"byte_end":485561,"line_start":22,"line_end":22,"column_start":8,"column_end":15},"name":"default","qualname":"<TranslatorBuilder as std::default::Default>::default","value":"fn default() -> TranslatorBuilder","parent":{"krate":2,"index":3241},"children":[],"decl_id":{"krate":2,"index":3242},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":875},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":485736,"byte_end":485739,"line_start":29,"line_end":29,"column_start":12,"column_end":15},"name":"new","qualname":"<TranslatorBuilder>::new","value":"fn new() -> TranslatorBuilder","parent":null,"children":[],"decl_id":null,"docs":" Create a new translator builder with a default c onfiguration.\n","sig":null,"attributes":[{"value":"/ Create a new translator builder with a default c onfiguration.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":485658,"byte_end":485724,"line_start":28,"line_end":28,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":876},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":485957,"byte_end":485962,"line_start":37,"line_end":37,"column_start":12,"column_end":17},"name":"build","qualname":"<TranslatorBuilder>::build","value":"fn build<'_>(&'_ Self) -> Translator","parent":null,"children":[],"decl_id":null,"docs":" Build a translator using the current configuration.\n","sig":null,"attributes":[{"value":"/ Build a translator using the current configuration.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":485890,"byte_end":485945,"line_start":36,"line_end":36,"column_start":5,"column_end":60}}]},{"kind":"Method","id":{"krate":0,"index":877},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":486825,"byte_end":486843,"line_start":56,"line_end":56,"column_start":12,"column_end":30},"name":"allow_invalid_utf8","qualname":"<TranslatorBuilder>::allow_invalid_utf8","value":"fn allow_invalid_utf8<'_>(&'_ mut Self, bool) -> &'_ mut TranslatorBuilder","parent":null,"children":[],"decl_id":null,"docs":" When enabled, translation will permit the construction of a regular\n expression that may match invalid UTF-8.","sig":null,"attributes":[{"value":"/ When enabled, translation will permit the construction of a regular","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":486168,"byte_end":486239,"line_start":45,"line_end":45,"column_start":5,"column_end":76}},{"value":"/ expression that may match invalid UTF-8.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":486244,"byte_end":486288,"line_start":46,"line_end":46,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":486293,"byte_end":486296,"line_start":47,"line_end":47,"column_start":5,"column_end":8}},{"value":"/ When disabled (the default), the translator is guaranteed to produce","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":486301,"byte_end":486373,"line_start":48,"line_end":48,"column_start":5,"column_end":77}},{"value":"/ an expression that will only ever match valid UTF-8 (otherwise, the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":486378,"byte_end":486449,"line_start":49,"line_end":49,"column_start":5,"column_end":76}},{"value":"/ translator will return an error).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":486454,"byte_end":486491,"line_start":50,"line_end":50,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":486496,"byte_end":486499,"line_start":51,"line_end":51,"column_start":5,"column_end":8}},{"value":"/ Perhaps surprisingly, when invalid UTF-8 isn't allowed, a negated ASCII","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":486504,"byte_end":486579,"line_start":52,"line_end":52,"column_start":5,"column_end":80}},{"value":"/ word boundary (uttered as `(?-u:\\B)` in the concrete syntax) will cause","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":486584,"byte_end":486659,"line_start":53,"line_end":53,"column_start":5,"column_end":80}},{"value":"/ the parser to return an error. Namely, a negated ASCII word boundary","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":486664,"byte_end":486736,"line_start":54,"line_end":54,"column_start":5,"column_end":77}},{"value":"/ can result in matching positions that aren't valid UTF-8 boundaries.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":486741,"byte_end":486813,"line_start":55,"line_end":55,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":878},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":487034,"byte_end":487050,"line_start":62,"line_end":62,"column_start":12,"column_end":28},"name":"case_insensitive","qualname":"<TranslatorBuilder>::case_insensitive","value":"fn case_insensitive<'_>(&'_ mut Self, bool) -> &'_ mut TranslatorBuilder","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable the case insensitive flag (`i`) by default.\n","sig":null,"attributes":[{"value":"/ Enable or disable the case insensitive flag (`i`) by default.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":486957,"byte_end":487022,"line_start":61,"line_end":61,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":879},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":487280,"byte_end":487290,"line_start":68,"line_end":68,"column_start":12,"column_end":22},"name":"multi_line","qualname":"<TranslatorBuilder>::multi_line","value":"fn multi_line<'_>(&'_ mut Self, bool) -> &'_ mut TranslatorBuilder","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable the multi-line matching flag (`m`) by default.\n","sig":null,"attributes":[{"value":"/ Enable or disable the multi-line matching flag (`m`) by default.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":487200,"byte_end":487268,"line_start":67,"line_end":67,"column_start":5,"column_end":73}}]},{"kind":"Method","id":{"krate":0,"index":880},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":487530,"byte_end":487550,"line_start":75,"line_end":75,"column_start":12,"column_end":32},"name":"dot_matches_new_line","qualname":"<TranslatorBuilder>::dot_matches_new_line","value":"fn dot_matches_new_line<'_>(&'_ mut Self, bool) -> &'_ mut TranslatorBuilder","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable the \"dot matches any character\" flag (`s`) by\n default.\n","sig":null,"attributes":[{"value":"/ Enable or disable the \"dot matches any character\" flag (`s`) by","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":487434,"byte_end":487501,"line_start":73,"line_end":73,"column_start":5,"column_end":72}},{"value":"/ default.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":487506,"byte_end":487518,"line_start":74,"line_end":74,"column_start":5,"column_end":17}}]},{"kind":"Method","id":{"krate":0,"index":881},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":487800,"byte_end":487810,"line_start":84,"line_end":84,"column_start":12,"column_end":22},"name":"swap_greed","qualname":"<TranslatorBuilder>::swap_greed","value":"fn swap_greed<'_>(&'_ mut Self, bool) -> &'_ mut TranslatorBuilder","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable the \"swap greed\" flag (`U`) by default.\n","sig":null,"attributes":[{"value":"/ Enable or disable the \"swap greed\" flag (`U`) by default.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":487727,"byte_end":487788,"line_start":83,"line_end":83,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":882},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":488022,"byte_end":488029,"line_start":90,"line_end":90,"column_start":12,"column_end":19},"name":"unicode","qualname":"<TranslatorBuilder>::unicode","value":"fn unicode<'_>(&'_ mut Self, bool) -> &'_ mut TranslatorBuilder","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable the Unicode flag (`u`) by default.\n","sig":null,"attributes":[{"value":"/ Enable or disable the Unicode flag (`u`) by default.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":487954,"byte_end":488010,"line_start":89,"line_end":89,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":2984},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":488527,"byte_end":488537,"line_start":105,"line_end":105,"column_start":12,"column_end":22},"name":"Translator","qualname":"::hir::translate::Translator","value":"Translator {  }","parent":null,"children":[{"krate":0,"index":2985},{"krate":0,"index":2986},{"krate":0,"index":2987}],"decl_id":null,"docs":" A translator maps abstract syntax to a high level intermediate\n representation.","sig":null,"attributes":[{"value":"/ A translator maps abstract syntax to a high level intermediate","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":488169,"byte_end":488235,"line_start":96,"line_end":96,"column_start":1,"column_end":67}},{"value":"/ representation.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":488236,"byte_end":488255,"line_start":97,"line_end":97,"column_start":1,"column_end":20}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":488256,"byte_end":488259,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ A translator may be benefit from reuse. That is, a translator can translate","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":488260,"byte_end":488339,"line_start":99,"line_end":99,"column_start":1,"column_end":80}},{"value":"/ many abstract syntax trees.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":488340,"byte_end":488371,"line_start":100,"line_end":100,"column_start":1,"column_end":32}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":488372,"byte_end":488375,"line_start":101,"line_end":101,"column_start":1,"column_end":4}},{"value":"/ A `Translator` can be configured in more detail via a","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":488376,"byte_end":488433,"line_start":102,"line_end":102,"column_start":1,"column_end":58}},{"value":"/ [`TranslatorBuilder`](struct.TranslatorBuilder.html).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":488434,"byte_end":488491,"line_start":103,"line_end":103,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":884},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":488879,"byte_end":488882,"line_start":116,"line_end":116,"column_start":12,"column_end":15},"name":"new","qualname":"<Translator>::new","value":"fn new() -> Translator","parent":null,"children":[],"decl_id":null,"docs":" Create a new translator using the default configuration.\n","sig":null,"attributes":[{"value":"/ Create a new translator using the default configuration.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":488807,"byte_end":488867,"line_start":115,"line_end":115,"column_start":5,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":885},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":489409,"byte_end":489418,"line_start":129,"line_end":129,"column_start":12,"column_end":21},"name":"translate","qualname":"<Translator>::translate","value":"fn translate<'_, '_, '_>(&'_ mut Self, &'_ str, &'_ Ast) -> Result<Hir>","parent":null,"children":[],"decl_id":null,"docs":" Translate the given abstract syntax tree (AST) into a high level\n intermediate representation (HIR).","sig":null,"attributes":[{"value":"/ Translate the given abstract syntax tree (AST) into a high level","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":488953,"byte_end":489021,"line_start":120,"line_end":120,"column_start":5,"column_end":73}},{"value":"/ intermediate representation (HIR).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":489026,"byte_end":489064,"line_start":121,"line_end":121,"column_start":5,"column_end":43}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":489069,"byte_end":489072,"line_start":122,"line_end":122,"column_start":5,"column_end":8}},{"value":"/ If there was a problem doing the translation, then an HIR-specific","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":489077,"byte_end":489147,"line_start":123,"line_end":123,"column_start":5,"column_end":75}},{"value":"/ error is returned.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":489152,"byte_end":489174,"line_start":124,"line_end":124,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":489179,"byte_end":489182,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ The original pattern string used to produce the `Ast` *must* also be","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":489187,"byte_end":489259,"line_start":126,"line_end":126,"column_start":5,"column_end":77}},{"value":"/ provided. The translator does not use the pattern string during any","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":489264,"byte_end":489335,"line_start":127,"line_end":127,"column_start":5,"column_end":76}},{"value":"/ correct translation, but is used for error reporting.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":489340,"byte_end":489397,"line_start":128,"line_end":128,"column_start":5,"column_end":62}}]},{"kind":"Trait","id":{"krate":0,"index":968},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":594845,"byte_end":594852,"line_start":13,"line_end":13,"column_start":11,"column_end":18},"name":"Visitor","qualname":"::hir::visitor::Visitor","value":"Visitor","parent":null,"children":[{"krate":0,"index":969},{"krate":0,"index":970},{"krate":0,"index":971},{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975}],"decl_id":null,"docs":" A trait for visiting the high-level IR (HIR) in depth first order.","sig":null,"attributes":[{"value":"/ A trait for visiting the high-level IR (HIR) in depth first order.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":594245,"byte_end":594315,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":594316,"byte_end":594319,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"/ The principle aim of this trait is to enable callers to perform case","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":594320,"byte_end":594392,"line_start":5,"line_end":5,"column_start":1,"column_end":73}},{"value":"/ analysis on a high-level intermediate representation of a regular","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":594393,"byte_end":594462,"line_start":6,"line_end":6,"column_start":1,"column_end":70}},{"value":"/ expression without necessarily using recursion. In particular, this permits","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":594463,"byte_end":594542,"line_start":7,"line_end":7,"column_start":1,"column_end":80}},{"value":"/ callers to do case analysis with constant stack usage, which can be","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":594543,"byte_end":594614,"line_start":8,"line_end":8,"column_start":1,"column_end":72}},{"value":"/ important since the size of an HIR may be proportional to end user input.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":594615,"byte_end":594692,"line_start":9,"line_end":9,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":594693,"byte_end":594696,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ Typical usage of this trait involves providing an implementation and then","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":594697,"byte_end":594774,"line_start":11,"line_end":11,"column_start":1,"column_end":78}},{"value":"/ running it using the [`visit`](fn.visit.html) function.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":594775,"byte_end":594834,"line_start":12,"line_end":12,"column_start":1,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":969},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":594903,"byte_end":594909,"line_start":15,"line_end":15,"column_start":10,"column_end":16},"name":"Output","qualname":"::hir::visitor::Visitor::Output","value":"type Output;","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":" The result of visiting an HIR.\n","sig":null,"attributes":[{"value":"/ The result of visiting an HIR.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":594859,"byte_end":594893,"line_start":14,"line_end":14,"column_start":5,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":970},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":594972,"byte_end":594975,"line_start":17,"line_end":17,"column_start":10,"column_end":13},"name":"Err","qualname":"::hir::visitor::Visitor::Err","value":"type Err;","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":" An error that visiting an HIR might return.\n","sig":null,"attributes":[{"value":"/ An error that visiting an HIR might return.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":594915,"byte_end":594962,"line_start":16,"line_end":16,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":971},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":595120,"byte_end":595126,"line_start":21,"line_end":21,"column_start":8,"column_end":14},"name":"finish","qualname":"::hir::visitor::Visitor::finish","value":"fn finish(Self) -> Result<Self::Output, Self::Err>","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":" All implementors of `Visitor` must provide a `finish` method, which\n yields the result of visiting the HIR or an error.\n","sig":null,"attributes":[{"value":"/ All implementors of `Visitor` must provide a `finish` method, which","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":594982,"byte_end":595053,"line_start":19,"line_end":19,"column_start":5,"column_end":76}},{"value":"/ yields the result of visiting the HIR or an error.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":595058,"byte_end":595112,"line_start":20,"line_end":20,"column_start":5,"column_end":59}}]},{"kind":"Method","id":{"krate":0,"index":972},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":595246,"byte_end":595251,"line_start":24,"line_end":24,"column_start":8,"column_end":13},"name":"start","qualname":"::hir::visitor::Visitor::start","value":"fn start<'_>(&'_ mut Self)","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":" This method is called before beginning traversal of the HIR.\n","sig":null,"attributes":[{"value":"/ This method is called before beginning traversal of the HIR.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":595174,"byte_end":595238,"line_start":23,"line_end":23,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":973},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":595366,"byte_end":595375,"line_start":28,"line_end":28,"column_start":8,"column_end":17},"name":"visit_pre","qualname":"::hir::visitor::Visitor::visit_pre","value":"fn visit_pre<'_, '_>(&'_ mut Self, &'_ Hir) -> Result<(), Self::Err>","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":" This method is called on an `Hir` before descending into child `Hir`\n nodes.\n","sig":null,"attributes":[{"value":"/ This method is called on an `Hir` before descending into child `Hir`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":595271,"byte_end":595343,"line_start":26,"line_end":26,"column_start":5,"column_end":77}},{"value":"/ nodes.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":595348,"byte_end":595358,"line_start":27,"line_end":27,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":974},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":595552,"byte_end":595562,"line_start":34,"line_end":34,"column_start":8,"column_end":18},"name":"visit_post","qualname":"::hir::visitor::Visitor::visit_post","value":"fn visit_post<'_, '_>(&'_ mut Self, &'_ Hir) -> Result<(), Self::Err>","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":" This method is called on an `Hir` after descending all of its child\n `Hir` nodes.\n","sig":null,"attributes":[{"value":"/ This method is called on an `Hir` after descending all of its child","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":595452,"byte_end":595523,"line_start":32,"line_end":32,"column_start":5,"column_end":76}},{"value":"/ `Hir` nodes.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":595528,"byte_end":595544,"line_start":33,"line_end":33,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":975},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":595711,"byte_end":595731,"line_start":39,"line_end":39,"column_start":8,"column_end":28},"name":"visit_alternation_in","qualname":"::hir::visitor::Visitor::visit_alternation_in","value":"fn visit_alternation_in<'_>(&'_ mut Self) -> Result<(), Self::Err>","parent":{"krate":0,"index":968},"children":[],"decl_id":null,"docs":" This method is called between child nodes of an alternation.\n","sig":null,"attributes":[{"value":"/ This method is called between child nodes of an alternation.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":595639,"byte_end":595703,"line_start":38,"line_end":38,"column_start":5,"column_end":69}}]},{"kind":"Function","id":{"krate":0,"index":976},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":596541,"byte_end":596546,"line_start":59,"line_end":59,"column_start":8,"column_end":13},"name":"visit","qualname":"::hir::visitor::visit","value":"fn visit<V, '_>(&'_ Hir, V) -> Result<V::Output, V::Err> where V: Visitor","parent":null,"children":[],"decl_id":null,"docs":" Executes an implementation of `Visitor` in constant stack space.","sig":null,"attributes":[{"value":"/ Executes an implementation of `Visitor` in constant stack space.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":595794,"byte_end":595862,"line_start":44,"line_end":44,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":595863,"byte_end":595866,"line_start":45,"line_end":45,"column_start":1,"column_end":4}},{"value":"/ This function will visit every node in the given `Hir` while calling","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":595867,"byte_end":595939,"line_start":46,"line_end":46,"column_start":1,"column_end":73}},{"value":"/ appropriate methods provided by the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":595940,"byte_end":595979,"line_start":47,"line_end":47,"column_start":1,"column_end":40}},{"value":"/ [`Visitor`](trait.Visitor.html) trait.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":595980,"byte_end":596022,"line_start":48,"line_end":48,"column_start":1,"column_end":43}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":596023,"byte_end":596026,"line_start":49,"line_end":49,"column_start":1,"column_end":4}},{"value":"/ The primary use case for this method is when one wants to perform case","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":596027,"byte_end":596101,"line_start":50,"line_end":50,"column_start":1,"column_end":75}},{"value":"/ analysis over an `Hir` without using a stack size proportional to the depth","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":596102,"byte_end":596181,"line_start":51,"line_end":51,"column_start":1,"column_end":80}},{"value":"/ of the `Hir`. Namely, this method will instead use constant stack space,","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":596182,"byte_end":596258,"line_start":52,"line_end":52,"column_start":1,"column_end":77}},{"value":"/ but will use heap space proportional to the size of the `Hir`. This may be","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":596259,"byte_end":596337,"line_start":53,"line_end":53,"column_start":1,"column_end":79}},{"value":"/ desirable in cases where the size of `Hir` is proportional to end user","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":596338,"byte_end":596412,"line_start":54,"line_end":54,"column_start":1,"column_end":75}},{"value":"/ input.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":596413,"byte_end":596423,"line_start":55,"line_end":55,"column_start":1,"column_end":11}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":596424,"byte_end":596427,"line_start":56,"line_end":56,"column_start":1,"column_end":4}},{"value":"/ If the visitor returns an error at any point, then visiting is stopped and","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":596428,"byte_end":596506,"line_start":57,"line_end":57,"column_start":1,"column_end":79}},{"value":"/ the error is returned.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":596507,"byte_end":596533,"line_start":58,"line_end":58,"column_start":1,"column_end":27}}]},{"kind":"Struct","id":{"krate":0,"index":3038},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":315760,"byte_end":315765,"line_start":26,"line_end":26,"column_start":12,"column_end":17},"name":"Error","qualname":"::hir::Error","value":"Error {  }","parent":null,"children":[{"krate":0,"index":3039},{"krate":0,"index":3040},{"krate":0,"index":3041}],"decl_id":null,"docs":" An error that can occur while translating an `Ast` to a `Hir`.\n","sig":null,"attributes":[{"value":"/ An error that can occur while translating an `Ast` to a `Hir`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":315643,"byte_end":315709,"line_start":24,"line_end":24,"column_start":1,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1006},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":316135,"byte_end":316139,"line_start":38,"line_end":38,"column_start":12,"column_end":16},"name":"kind","qualname":"<Error>::kind","value":"fn kind<'_>(&'_ Self) -> &'_ ErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Return the type of this error.\n","sig":null,"attributes":[{"value":"/ Return the type of this error.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":316089,"byte_end":316123,"line_start":37,"line_end":37,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1007},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":316353,"byte_end":316360,"line_start":45,"line_end":45,"column_start":12,"column_end":19},"name":"pattern","qualname":"<Error>::pattern","value":"fn pattern<'_>(&'_ Self) -> &'_ str","parent":null,"children":[],"decl_id":null,"docs":" The original pattern string in which this error occurred.","sig":null,"attributes":[{"value":"/ The original pattern string in which this error occurred.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":316193,"byte_end":316254,"line_start":42,"line_end":42,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":316259,"byte_end":316262,"line_start":43,"line_end":43,"column_start":5,"column_end":8}},{"value":"/ Every span reported by this error is reported in terms of this string.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":316267,"byte_end":316341,"line_start":44,"line_end":44,"column_start":5,"column_end":79}}]},{"kind":"Method","id":{"krate":0,"index":1008},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":316472,"byte_end":316476,"line_start":50,"line_end":50,"column_start":12,"column_end":16},"name":"span","qualname":"<Error>::span","value":"fn span<'_>(&'_ Self) -> &'_ Span","parent":null,"children":[],"decl_id":null,"docs":" Return the span at which this error occurred.\n","sig":null,"attributes":[{"value":"/ Return the span at which this error occurred.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":316411,"byte_end":316460,"line_start":49,"line_end":49,"column_start":5,"column_end":54}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3054},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":316800,"byte_end":316817,"line_start":60,"line_end":60,"column_start":5,"column_end":22},"name":"UnicodeNotAllowed","qualname":"::hir::ErrorKind::UnicodeNotAllowed","value":"ErrorKind::UnicodeNotAllowed","parent":{"krate":0,"index":3053},"children":[],"decl_id":null,"docs":" This error occurs when a Unicode feature is used when Unicode\n support is disabled. For example `(?-u:\\pL)` would trigger this error.\n","sig":null,"attributes":[{"value":"/ This error occurs when a Unicode feature is used when Unicode","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":316651,"byte_end":316716,"line_start":58,"line_end":58,"column_start":5,"column_end":70}},{"value":"/ support is disabled. For example `(?-u:\\pL)` would trigger this error.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":316721,"byte_end":316795,"line_start":59,"line_end":59,"column_start":5,"column_end":79}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3056},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":316973,"byte_end":316984,"line_start":63,"line_end":63,"column_start":5,"column_end":16},"name":"InvalidUtf8","qualname":"::hir::ErrorKind::InvalidUtf8","value":"ErrorKind::InvalidUtf8","parent":{"krate":0,"index":3053},"children":[],"decl_id":null,"docs":" This error occurs when translating a pattern that could match a byte\n sequence that isn't UTF-8 and `allow_invalid_utf8` was disabled.\n","sig":null,"attributes":[{"value":"/ This error occurs when translating a pattern that could match a byte","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":316823,"byte_end":316895,"line_start":61,"line_end":61,"column_start":5,"column_end":77}},{"value":"/ sequence that isn't UTF-8 and `allow_invalid_utf8` was disabled.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":316900,"byte_end":316968,"line_start":62,"line_end":62,"column_start":5,"column_end":73}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3058},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":317081,"byte_end":317104,"line_start":66,"line_end":66,"column_start":5,"column_end":28},"name":"UnicodePropertyNotFound","qualname":"::hir::ErrorKind::UnicodePropertyNotFound","value":"ErrorKind::UnicodePropertyNotFound","parent":{"krate":0,"index":3053},"children":[],"decl_id":null,"docs":" This occurs when an unrecognized Unicode property name could not\n be found.\n","sig":null,"attributes":[{"value":"/ This occurs when an unrecognized Unicode property name could not","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":316990,"byte_end":317058,"line_start":64,"line_end":64,"column_start":5,"column_end":73}},{"value":"/ be found.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":317063,"byte_end":317076,"line_start":65,"line_end":65,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3060},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":317202,"byte_end":317230,"line_start":69,"line_end":69,"column_start":5,"column_end":33},"name":"UnicodePropertyValueNotFound","qualname":"::hir::ErrorKind::UnicodePropertyValueNotFound","value":"ErrorKind::UnicodePropertyValueNotFound","parent":{"krate":0,"index":3053},"children":[],"decl_id":null,"docs":" This occurs when an unrecognized Unicode property value could not\n be found.\n","sig":null,"attributes":[{"value":"/ This occurs when an unrecognized Unicode property value could not","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":317110,"byte_end":317179,"line_start":67,"line_end":67,"column_start":5,"column_end":74}},{"value":"/ be found.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":317184,"byte_end":317197,"line_start":68,"line_end":68,"column_start":5,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3062},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":317424,"byte_end":317448,"line_start":73,"line_end":73,"column_start":5,"column_end":29},"name":"UnicodePerlClassNotFound","qualname":"::hir::ErrorKind::UnicodePerlClassNotFound","value":"ErrorKind::UnicodePerlClassNotFound","parent":{"krate":0,"index":3053},"children":[],"decl_id":null,"docs":" This occurs when a Unicode-aware Perl character class (`\\w`, `\\s` or\n `\\d`) could not be found. This can occur when the `unicode-perl`\n crate feature is not enabled.\n","sig":null,"attributes":[{"value":"/ This occurs when a Unicode-aware Perl character class (`\\w`, `\\s` or","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":317236,"byte_end":317308,"line_start":70,"line_end":70,"column_start":5,"column_end":77}},{"value":"/ `\\d`) could not be found. This can occur when the `unicode-perl`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":317313,"byte_end":317381,"line_start":71,"line_end":71,"column_start":5,"column_end":73}},{"value":"/ crate feature is not enabled.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":317386,"byte_end":317419,"line_start":72,"line_end":72,"column_start":5,"column_end":38}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3064},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":317623,"byte_end":317645,"line_start":77,"line_end":77,"column_start":5,"column_end":27},"name":"UnicodeCaseUnavailable","qualname":"::hir::ErrorKind::UnicodeCaseUnavailable","value":"ErrorKind::UnicodeCaseUnavailable","parent":{"krate":0,"index":3053},"children":[],"decl_id":null,"docs":" This occurs when the Unicode simple case mapping tables are not\n available, and the regular expression required Unicode aware case\n insensitivity.\n","sig":null,"attributes":[{"value":"/ This occurs when the Unicode simple case mapping tables are not","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":317454,"byte_end":317521,"line_start":74,"line_end":74,"column_start":5,"column_end":72}},{"value":"/ available, and the regular expression required Unicode aware case","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":317526,"byte_end":317595,"line_start":75,"line_end":75,"column_start":5,"column_end":74}},{"value":"/ insensitivity.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":317600,"byte_end":317618,"line_start":76,"line_end":76,"column_start":5,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3066},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":317853,"byte_end":317873,"line_start":83,"line_end":83,"column_start":5,"column_end":25},"name":"EmptyClassNotAllowed","qualname":"::hir::ErrorKind::EmptyClassNotAllowed","value":"ErrorKind::EmptyClassNotAllowed","parent":{"krate":0,"index":3053},"children":[],"decl_id":null,"docs":" This occurs when the translator attempts to construct a character class\n that is empty.","sig":null,"attributes":[{"value":"/ This occurs when the translator attempts to construct a character class","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":317651,"byte_end":317726,"line_start":78,"line_end":78,"column_start":5,"column_end":80}},{"value":"/ that is empty.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":317731,"byte_end":317749,"line_start":79,"line_end":79,"column_start":5,"column_end":23}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":317754,"byte_end":317757,"line_start":80,"line_end":80,"column_start":5,"column_end":8}},{"value":"/ Note that this restriction in the translator may be removed in the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":317762,"byte_end":317832,"line_start":81,"line_end":81,"column_start":5,"column_end":75}},{"value":"/ future.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":317837,"byte_end":317848,"line_start":82,"line_end":82,"column_start":5,"column_end":16}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3068},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":318153,"byte_end":318168,"line_start":90,"line_end":90,"column_start":5,"column_end":20},"name":"__Nonexhaustive","qualname":"::hir::ErrorKind::__Nonexhaustive","value":"ErrorKind::__Nonexhaustive","parent":{"krate":0,"index":3053},"children":[],"decl_id":null,"docs":" Hints that destructuring should not be exhaustive.","sig":null,"attributes":[{"value":"/ Hints that destructuring should not be exhaustive.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":317879,"byte_end":317933,"line_start":84,"line_end":84,"column_start":5,"column_end":59}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":317938,"byte_end":317941,"line_start":85,"line_end":85,"column_start":5,"column_end":8}},{"value":"/ This enum may grow additional variants, so this makes sure clients","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":317946,"byte_end":318016,"line_start":86,"line_end":86,"column_start":5,"column_end":75}},{"value":"/ don't count on exhaustive matching. (Otherwise, adding a new variant","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":318021,"byte_end":318093,"line_start":87,"line_end":87,"column_start":5,"column_end":77}},{"value":"/ could break existing code.)","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":318098,"byte_end":318129,"line_start":88,"line_end":88,"column_start":5,"column_end":36}}]},{"kind":"Enum","id":{"krate":0,"index":3053},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":316635,"byte_end":316644,"line_start":57,"line_end":57,"column_start":10,"column_end":19},"name":"ErrorKind","qualname":"::hir::ErrorKind","value":"enum ErrorKind {\n    UnicodeNotAllowed,\n    InvalidUtf8,\n    UnicodePropertyNotFound,\n    UnicodePropertyValueNotFound,\n    UnicodePerlClassNotFound,\n    UnicodeCaseUnavailable,\n    EmptyClassNotAllowed,\n    __Nonexhaustive,\n}","parent":null,"children":[{"krate":0,"index":3054},{"krate":0,"index":3056},{"krate":0,"index":3058},{"krate":0,"index":3060},{"krate":0,"index":3062},{"krate":0,"index":3064},{"krate":0,"index":3066},{"krate":0,"index":3068}],"decl_id":null,"docs":" The type of an error that occurred while building an `Hir`.\n","sig":null,"attributes":[{"value":"/ The type of an error that occurred while building an `Hir`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":316523,"byte_end":316586,"line_start":55,"line_end":55,"column_start":1,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":1013},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":319314,"byte_end":319325,"line_start":120,"line_end":120,"column_start":8,"column_end":19},"name":"description","qualname":"<Error as std::error::Error>::description","value":"fn description<'_>(&'_ Self) -> &'_ str","parent":{"krate":1,"index":2576},"children":[],"decl_id":{"krate":1,"index":2579},"docs":"","sig":null,"attributes":[{"value":"allow(deprecated)","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":319286,"byte_end":319306,"line_start":119,"line_end":119,"column_start":5,"column_end":25}}]},{"kind":"Method","id":{"krate":0,"index":1015},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":319421,"byte_end":319424,"line_start":126,"line_end":126,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Error as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1017},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":319578,"byte_end":319581,"line_start":132,"line_end":132,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ErrorKind as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3080},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":321800,"byte_end":321803,"line_start":175,"line_end":175,"column_start":12,"column_end":15},"name":"Hir","qualname":"::hir::Hir","value":"Hir {  }","parent":null,"children":[{"krate":0,"index":3081},{"krate":0,"index":3082}],"decl_id":null,"docs":" A high-level intermediate representation (HIR) for a regular expression.","sig":null,"attributes":[{"value":"/ A high-level intermediate representation (HIR) for a regular expression.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":319778,"byte_end":319854,"line_start":139,"line_end":139,"column_start":1,"column_end":77}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":319855,"byte_end":319858,"line_start":140,"line_end":140,"column_start":1,"column_end":4}},{"value":"/ The HIR of a regular expression represents an intermediate step between its","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":319859,"byte_end":319938,"line_start":141,"line_end":141,"column_start":1,"column_end":80}},{"value":"/ abstract syntax (a structured description of the concrete syntax) and","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":319939,"byte_end":320012,"line_start":142,"line_end":142,"column_start":1,"column_end":74}},{"value":"/ compiled byte codes. The purpose of HIR is to make regular expressions","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":320013,"byte_end":320087,"line_start":143,"line_end":143,"column_start":1,"column_end":75}},{"value":"/ easier to analyze. In particular, the AST is much more complex than the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":320088,"byte_end":320163,"line_start":144,"line_end":144,"column_start":1,"column_end":76}},{"value":"/ HIR. For example, while an AST supports arbitrarily nested character","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":320164,"byte_end":320236,"line_start":145,"line_end":145,"column_start":1,"column_end":73}},{"value":"/ classes, the HIR will flatten all nested classes into a single set. The HIR","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":320237,"byte_end":320316,"line_start":146,"line_end":146,"column_start":1,"column_end":80}},{"value":"/ will also \"compile away\" every flag present in the concrete syntax. For","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":320317,"byte_end":320392,"line_start":147,"line_end":147,"column_start":1,"column_end":76}},{"value":"/ example, users of HIR expressions never need to worry about case folding;","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":320393,"byte_end":320470,"line_start":148,"line_end":148,"column_start":1,"column_end":78}},{"value":"/ it is handled automatically by the translator (e.g., by translating `(?i)A`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":320471,"byte_end":320550,"line_start":149,"line_end":149,"column_start":1,"column_end":80}},{"value":"/ to `[aA]`).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":320551,"byte_end":320566,"line_start":150,"line_end":150,"column_start":1,"column_end":16}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":320567,"byte_end":320570,"line_start":151,"line_end":151,"column_start":1,"column_end":4}},{"value":"/ If the HIR was produced by a translator that disallows invalid UTF-8, then","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":320571,"byte_end":320649,"line_start":152,"line_end":152,"column_start":1,"column_end":79}},{"value":"/ the HIR is guaranteed to match UTF-8 exclusively.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":320650,"byte_end":320703,"line_start":153,"line_end":153,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":320704,"byte_end":320707,"line_start":154,"line_end":154,"column_start":1,"column_end":4}},{"value":"/ This type defines its own destructor that uses constant stack space and","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":320708,"byte_end":320783,"line_start":155,"line_end":155,"column_start":1,"column_end":76}},{"value":"/ heap space proportional to the size of the HIR.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":320784,"byte_end":320835,"line_start":156,"line_end":156,"column_start":1,"column_end":52}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":320836,"byte_end":320839,"line_start":157,"line_end":157,"column_start":1,"column_end":4}},{"value":"/ The specific type of an HIR expression can be accessed via its `kind`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":320840,"byte_end":320913,"line_start":158,"line_end":158,"column_start":1,"column_end":74}},{"value":"/ or `into_kind` methods. This extra level of indirection exists for two","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":320914,"byte_end":320988,"line_start":159,"line_end":159,"column_start":1,"column_end":75}},{"value":"/ reasons:","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":320989,"byte_end":321001,"line_start":160,"line_end":160,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":321002,"byte_end":321005,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ 1. Construction of an HIR expression *must* use the constructor methods","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":321006,"byte_end":321081,"line_start":162,"line_end":162,"column_start":1,"column_end":76}},{"value":"/    on this `Hir` type instead of building the `HirKind` values directly.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":321082,"byte_end":321158,"line_start":163,"line_end":163,"column_start":1,"column_end":77}},{"value":"/    This permits construction to enforce invariants like \"concatenations","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":321159,"byte_end":321234,"line_start":164,"line_end":164,"column_start":1,"column_end":76}},{"value":"/    always consist of two or more sub-expressions.\"","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":321235,"byte_end":321289,"line_start":165,"line_end":165,"column_start":1,"column_end":55}},{"value":"/ 2. Every HIR expression contains attributes that are defined inductively,","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":321290,"byte_end":321367,"line_start":166,"line_end":166,"column_start":1,"column_end":78}},{"value":"/    and can be computed cheaply during the construction process. For","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":321368,"byte_end":321439,"line_start":167,"line_end":167,"column_start":1,"column_end":72}},{"value":"/    example, one such attribute is whether the expression must match at the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":321440,"byte_end":321518,"line_start":168,"line_end":168,"column_start":1,"column_end":79}},{"value":"/    beginning of the text.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":321519,"byte_end":321548,"line_start":169,"line_end":169,"column_start":1,"column_end":30}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":321549,"byte_end":321552,"line_start":170,"line_end":170,"column_start":1,"column_end":4}},{"value":"/ Also, an `Hir`'s `fmt::Display` implementation prints an HIR as a regular","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":321553,"byte_end":321630,"line_start":171,"line_end":171,"column_start":1,"column_end":78}},{"value":"/ expression pattern string, and uses constant stack space and heap space","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":321631,"byte_end":321706,"line_start":172,"line_end":172,"column_start":1,"column_end":76}},{"value":"/ proportional to the size of the `Hir`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":321707,"byte_end":321749,"line_start":173,"line_end":173,"column_start":1,"column_end":43}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3095},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":322157,"byte_end":322162,"line_start":187,"line_end":187,"column_start":5,"column_end":10},"name":"Empty","qualname":"::hir::HirKind::Empty","value":"HirKind::Empty","parent":{"krate":0,"index":3094},"children":[],"decl_id":null,"docs":" The empty regular expression, which matches everything, including the\n empty string.\n","sig":null,"attributes":[{"value":"/ The empty regular expression, which matches everything, including the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":322057,"byte_end":322130,"line_start":185,"line_end":185,"column_start":5,"column_end":78}},{"value":"/ empty string.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":322135,"byte_end":322152,"line_start":186,"line_end":186,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3097},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":322240,"byte_end":322247,"line_start":189,"line_end":189,"column_start":5,"column_end":12},"name":"Literal","qualname":"::hir::HirKind::Literal","value":"HirKind::Literal(Literal)","parent":{"krate":0,"index":3094},"children":[],"decl_id":null,"docs":" A single literal character that matches exactly this character.\n","sig":null,"attributes":[{"value":"/ A single literal character that matches exactly this character.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":322168,"byte_end":322235,"line_start":188,"line_end":188,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":3099},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":322248,"byte_end":322255,"line_start":189,"line_end":189,"column_start":13,"column_end":20},"name":"0","qualname":"::hir::HirKind::Literal::0","value":"hir::Literal","parent":{"krate":0,"index":3097},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3100},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":322448,"byte_end":322453,"line_start":193,"line_end":193,"column_start":5,"column_end":10},"name":"Class","qualname":"::hir::HirKind::Class","value":"HirKind::Class(Class)","parent":{"krate":0,"index":3094},"children":[],"decl_id":null,"docs":" A single character class that matches any of the characters in the\n class. A class can either consist of Unicode scalar values as\n characters, or it can use bytes.\n","sig":null,"attributes":[{"value":"/ A single character class that matches any of the characters in the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":322262,"byte_end":322332,"line_start":190,"line_end":190,"column_start":5,"column_end":75}},{"value":"/ class. A class can either consist of Unicode scalar values as","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":322337,"byte_end":322402,"line_start":191,"line_end":191,"column_start":5,"column_end":70}},{"value":"/ characters, or it can use bytes.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":322407,"byte_end":322443,"line_start":192,"line_end":192,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":3102},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":322454,"byte_end":322459,"line_start":193,"line_end":193,"column_start":11,"column_end":16},"name":"0","qualname":"::hir::HirKind::Class::0","value":"hir::Class","parent":{"krate":0,"index":3100},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3103},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":322545,"byte_end":322551,"line_start":195,"line_end":195,"column_start":5,"column_end":11},"name":"Anchor","qualname":"::hir::HirKind::Anchor","value":"HirKind::Anchor(Anchor)","parent":{"krate":0,"index":3094},"children":[],"decl_id":null,"docs":" An anchor assertion. An anchor assertion match always has zero length.\n","sig":null,"attributes":[{"value":"/ An anchor assertion. An anchor assertion match always has zero length.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":322466,"byte_end":322540,"line_start":194,"line_end":194,"column_start":5,"column_end":79}}]},{"kind":"Field","id":{"krate":0,"index":3105},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":322552,"byte_end":322558,"line_start":195,"line_end":195,"column_start":12,"column_end":18},"name":"0","qualname":"::hir::HirKind::Anchor::0","value":"hir::Anchor","parent":{"krate":0,"index":3103},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3106},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":322703,"byte_end":322715,"line_start":198,"line_end":198,"column_start":5,"column_end":17},"name":"WordBoundary","qualname":"::hir::HirKind::WordBoundary","value":"HirKind::WordBoundary(WordBoundary)","parent":{"krate":0,"index":3094},"children":[],"decl_id":null,"docs":" A word boundary assertion, which may or may not be Unicode aware. A\n word boundary assertion match always has zero length.\n","sig":null,"attributes":[{"value":"/ A word boundary assertion, which may or may not be Unicode aware. A","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":322565,"byte_end":322636,"line_start":196,"line_end":196,"column_start":5,"column_end":76}},{"value":"/ word boundary assertion match always has zero length.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":322641,"byte_end":322698,"line_start":197,"line_end":197,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":3108},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":322716,"byte_end":322728,"line_start":198,"line_end":198,"column_start":18,"column_end":30},"name":"0","qualname":"::hir::HirKind::WordBoundary::0","value":"hir::WordBoundary","parent":{"krate":0,"index":3106},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3109},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":322797,"byte_end":322807,"line_start":200,"line_end":200,"column_start":5,"column_end":15},"name":"Repetition","qualname":"::hir::HirKind::Repetition","value":"HirKind::Repetition(Repetition)","parent":{"krate":0,"index":3094},"children":[],"decl_id":null,"docs":" A repetition operation applied to a child expression.\n","sig":null,"attributes":[{"value":"/ A repetition operation applied to a child expression.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":322735,"byte_end":322792,"line_start":199,"line_end":199,"column_start":5,"column_end":62}}]},{"kind":"Field","id":{"krate":0,"index":3111},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":322808,"byte_end":322818,"line_start":200,"line_end":200,"column_start":16,"column_end":26},"name":"0","qualname":"::hir::HirKind::Repetition::0","value":"hir::Repetition","parent":{"krate":0,"index":3109},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3112},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":322896,"byte_end":322901,"line_start":202,"line_end":202,"column_start":5,"column_end":10},"name":"Group","qualname":"::hir::HirKind::Group","value":"HirKind::Group(Group)","parent":{"krate":0,"index":3094},"children":[],"decl_id":null,"docs":" A possibly capturing group, which contains a child expression.\n","sig":null,"attributes":[{"value":"/ A possibly capturing group, which contains a child expression.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":322825,"byte_end":322891,"line_start":201,"line_end":201,"column_start":5,"column_end":71}}]},{"kind":"Field","id":{"krate":0,"index":3114},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":322902,"byte_end":322907,"line_start":202,"line_end":202,"column_start":11,"column_end":16},"name":"0","qualname":"::hir::HirKind::Group::0","value":"hir::Group","parent":{"krate":0,"index":3112},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3115},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":323135,"byte_end":323141,"line_start":208,"line_end":208,"column_start":5,"column_end":11},"name":"Concat","qualname":"::hir::HirKind::Concat","value":"HirKind::Concat(Vec<Hir>)","parent":{"krate":0,"index":3094},"children":[],"decl_id":null,"docs":" A concatenation of expressions. A concatenation always has at least two\n child expressions.","sig":null,"attributes":[{"value":"/ A concatenation of expressions. A concatenation always has at least two","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":322914,"byte_end":322989,"line_start":203,"line_end":203,"column_start":5,"column_end":80}},{"value":"/ child expressions.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":322994,"byte_end":323016,"line_start":204,"line_end":204,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":323021,"byte_end":323024,"line_start":205,"line_end":205,"column_start":5,"column_end":8}},{"value":"/ A concatenation matches only if each of its child expression matches","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":323029,"byte_end":323101,"line_start":206,"line_end":206,"column_start":5,"column_end":77}},{"value":"/ one after the other.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":323106,"byte_end":323130,"line_start":207,"line_end":207,"column_start":5,"column_end":29}}]},{"kind":"Field","id":{"krate":0,"index":3117},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":323142,"byte_end":323150,"line_start":208,"line_end":208,"column_start":12,"column_end":20},"name":"0","qualname":"::hir::HirKind::Concat::0","value":"std::vec::Vec<hir::Hir>","parent":{"krate":0,"index":3115},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3118},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":323426,"byte_end":323437,"line_start":214,"line_end":214,"column_start":5,"column_end":16},"name":"Alternation","qualname":"::hir::HirKind::Alternation","value":"HirKind::Alternation(Vec<Hir>)","parent":{"krate":0,"index":3094},"children":[],"decl_id":null,"docs":" An alternation of expressions. An alternation always has at least two\n child expressions.","sig":null,"attributes":[{"value":"/ An alternation of expressions. An alternation always has at least two","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":323157,"byte_end":323230,"line_start":209,"line_end":209,"column_start":5,"column_end":78}},{"value":"/ child expressions.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":323235,"byte_end":323257,"line_start":210,"line_end":210,"column_start":5,"column_end":27}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":323262,"byte_end":323265,"line_start":211,"line_end":211,"column_start":5,"column_end":8}},{"value":"/ An alternation matches only if at least one of its child expression","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":323270,"byte_end":323341,"line_start":212,"line_end":212,"column_start":5,"column_end":76}},{"value":"/ matches. If multiple expressions match, then the leftmost is preferred.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":323346,"byte_end":323421,"line_start":213,"line_end":213,"column_start":5,"column_end":80}}]},{"kind":"Field","id":{"krate":0,"index":3120},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":323438,"byte_end":323446,"line_start":214,"line_end":214,"column_start":17,"column_end":25},"name":"0","qualname":"::hir::HirKind::Alternation::0","value":"std::vec::Vec<hir::Hir>","parent":{"krate":0,"index":3118},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3094},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":322043,"byte_end":322050,"line_start":184,"line_end":184,"column_start":10,"column_end":17},"name":"HirKind","qualname":"::hir::HirKind","value":"enum HirKind {\n    Empty,\n    Literal(Literal),\n    Class(Class),\n    Anchor(Anchor),\n    WordBoundary(WordBoundary),\n    Repetition(Repetition),\n    Group(Group),\n    Concat(Vec<Hir>),\n    Alternation(Vec<Hir>),\n}","parent":null,"children":[{"krate":0,"index":3095},{"krate":0,"index":3097},{"krate":0,"index":3100},{"krate":0,"index":3103},{"krate":0,"index":3106},{"krate":0,"index":3109},{"krate":0,"index":3112},{"krate":0,"index":3115},{"krate":0,"index":3118}],"decl_id":null,"docs":" The kind of an arbitrary `Hir` expression.\n","sig":null,"attributes":[{"value":"/ The kind of an arbitrary `Hir` expression.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":321948,"byte_end":321994,"line_start":182,"line_end":182,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1019},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":323530,"byte_end":323534,"line_start":219,"line_end":219,"column_start":12,"column_end":16},"name":"kind","qualname":"<Hir>::kind","value":"fn kind<'_>(&'_ Self) -> &'_ HirKind","parent":null,"children":[],"decl_id":null,"docs":" Returns a reference to the underlying HIR kind.\n","sig":null,"attributes":[{"value":"/ Returns a reference to the underlying HIR kind.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":323467,"byte_end":323518,"line_start":218,"line_end":218,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1020},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":323689,"byte_end":323698,"line_start":225,"line_end":225,"column_start":12,"column_end":21},"name":"into_kind","qualname":"<Hir>::into_kind","value":"fn into_kind(Self) -> HirKind","parent":null,"children":[],"decl_id":null,"docs":" Consumes ownership of this HIR expression and returns its underlying\n `HirKind`.\n","sig":null,"attributes":[{"value":"/ Consumes ownership of this HIR expression and returns its underlying","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":323586,"byte_end":323658,"line_start":223,"line_end":223,"column_start":5,"column_end":77}},{"value":"/ `HirKind`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":323663,"byte_end":323677,"line_start":224,"line_end":224,"column_start":5,"column_end":19}}]},{"kind":"Method","id":{"krate":0,"index":1024},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":323940,"byte_end":323945,"line_start":233,"line_end":233,"column_start":12,"column_end":17},"name":"empty","qualname":"<Hir>::empty","value":"fn empty() -> Hir","parent":null,"children":[],"decl_id":null,"docs":" Returns an empty HIR expression.","sig":null,"attributes":[{"value":"/ Returns an empty HIR expression.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":323808,"byte_end":323844,"line_start":230,"line_end":230,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":323849,"byte_end":323852,"line_start":231,"line_end":231,"column_start":5,"column_end":8}},{"value":"/ An empty HIR expression always matches, including the empty string.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":323857,"byte_end":323928,"line_start":232,"line_end":232,"column_start":5,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1025},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":324760,"byte_end":324767,"line_start":254,"line_end":254,"column_start":12,"column_end":19},"name":"literal","qualname":"<Hir>::literal","value":"fn literal(Literal) -> Hir","parent":null,"children":[],"decl_id":null,"docs":" Creates a literal HIR expression.","sig":null,"attributes":[{"value":"/ Creates a literal HIR expression.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":324491,"byte_end":324528,"line_start":249,"line_end":249,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":324533,"byte_end":324536,"line_start":250,"line_end":250,"column_start":5,"column_end":8}},{"value":"/ If the given literal has a `Byte` variant with an ASCII byte, then this","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":324541,"byte_end":324616,"line_start":251,"line_end":251,"column_start":5,"column_end":80}},{"value":"/ method panics. This enforces the invariant that `Byte` variants are","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":324621,"byte_end":324692,"line_start":252,"line_end":252,"column_start":5,"column_end":76}},{"value":"/ only used to express matching of invalid UTF-8.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":324697,"byte_end":324748,"line_start":253,"line_end":253,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1026},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":325473,"byte_end":325478,"line_start":275,"line_end":275,"column_start":12,"column_end":17},"name":"class","qualname":"<Hir>::class","value":"fn class(Class) -> Hir","parent":null,"children":[],"decl_id":null,"docs":" Creates a class HIR expression.\n","sig":null,"attributes":[{"value":"/ Creates a class HIR expression.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":325426,"byte_end":325461,"line_start":274,"line_end":274,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1027},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":326122,"byte_end":326128,"line_start":292,"line_end":292,"column_start":12,"column_end":18},"name":"anchor","qualname":"<Hir>::anchor","value":"fn anchor(Anchor) -> Hir","parent":null,"children":[],"decl_id":null,"docs":" Creates an anchor assertion HIR expression.\n","sig":null,"attributes":[{"value":"/ Creates an anchor assertion HIR expression.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":326063,"byte_end":326110,"line_start":291,"line_end":291,"column_start":5,"column_end":52}}]},{"kind":"Method","id":{"krate":0,"index":1028},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":327338,"byte_end":327351,"line_start":325,"line_end":325,"column_start":12,"column_end":25},"name":"word_boundary","qualname":"<Hir>::word_boundary","value":"fn word_boundary(WordBoundary) -> Hir","parent":null,"children":[],"decl_id":null,"docs":" Creates a word boundary assertion HIR expression.\n","sig":null,"attributes":[{"value":"/ Creates a word boundary assertion HIR expression.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":327273,"byte_end":327326,"line_start":324,"line_end":324,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":1029},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":328594,"byte_end":328604,"line_start":352,"line_end":352,"column_start":12,"column_end":22},"name":"repetition","qualname":"<Hir>::repetition","value":"fn repetition(Repetition) -> Hir","parent":null,"children":[],"decl_id":null,"docs":" Creates a repetition HIR expression.\n","sig":null,"attributes":[{"value":"/ Creates a repetition HIR expression.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":328542,"byte_end":328582,"line_start":351,"line_end":351,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1030},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":329733,"byte_end":329738,"line_start":379,"line_end":379,"column_start":12,"column_end":17},"name":"group","qualname":"<Hir>::group","value":"fn group(Group) -> Hir","parent":null,"children":[],"decl_id":null,"docs":" Creates a group HIR expression.\n","sig":null,"attributes":[{"value":"/ Creates a group HIR expression.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":329686,"byte_end":329721,"line_start":378,"line_end":378,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1031},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":330659,"byte_end":330665,"line_start":398,"line_end":398,"column_start":12,"column_end":18},"name":"concat","qualname":"<Hir>::concat","value":"fn concat(Vec<Hir>) -> Hir","parent":null,"children":[],"decl_id":null,"docs":" Returns the concatenation of the given expressions.","sig":null,"attributes":[{"value":"/ Returns the concatenation of the given expressions.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":330528,"byte_end":330583,"line_start":395,"line_end":395,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":330588,"byte_end":330591,"line_start":396,"line_end":396,"column_start":5,"column_end":8}},{"value":"/ This flattens the concatenation as appropriate.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":330596,"byte_end":330647,"line_start":397,"line_end":397,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":1040},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":334627,"byte_end":334638,"line_start":491,"line_end":491,"column_start":12,"column_end":23},"name":"alternation","qualname":"<Hir>::alternation","value":"fn alternation(Vec<Hir>) -> Hir","parent":null,"children":[],"decl_id":null,"docs":" Returns the alternation of the given expressions.","sig":null,"attributes":[{"value":"/ Returns the alternation of the given expressions.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":334500,"byte_end":334553,"line_start":488,"line_end":488,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":334558,"byte_end":334561,"line_start":489,"line_end":489,"column_start":5,"column_end":8}},{"value":"/ This flattens the alternation as appropriate.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":334566,"byte_end":334615,"line_start":490,"line_end":490,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1041},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":337310,"byte_end":337313,"line_start":558,"line_end":558,"column_start":12,"column_end":15},"name":"dot","qualname":"<Hir>::dot","value":"fn dot(bool) -> Hir","parent":null,"children":[],"decl_id":null,"docs":" Build an HIR expression for `.`.","sig":null,"attributes":[{"value":"/ Build an HIR expression for `.`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":336980,"byte_end":337016,"line_start":550,"line_end":550,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":337021,"byte_end":337024,"line_start":551,"line_end":551,"column_start":5,"column_end":8}},{"value":"/ A `.` expression matches any character except for `\\n`. To build an","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":337029,"byte_end":337100,"line_start":552,"line_end":552,"column_start":5,"column_end":76}},{"value":"/ expression that matches any character, including `\\n`, use the `any`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":337105,"byte_end":337177,"line_start":553,"line_end":553,"column_start":5,"column_end":77}},{"value":"/ method.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":337182,"byte_end":337193,"line_start":554,"line_end":554,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":337198,"byte_end":337201,"line_start":555,"line_end":555,"column_start":5,"column_end":8}},{"value":"/ If `bytes` is `true`, then this assumes characters are limited to a","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":337206,"byte_end":337277,"line_start":556,"line_end":556,"column_start":5,"column_end":76}},{"value":"/ single byte.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":337282,"byte_end":337298,"line_start":557,"line_end":557,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1042},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":338168,"byte_end":338171,"line_start":580,"line_end":580,"column_start":12,"column_end":15},"name":"any","qualname":"<Hir>::any","value":"fn any(bool) -> Hir","parent":null,"children":[],"decl_id":null,"docs":" Build an HIR expression for `(?s).`.","sig":null,"attributes":[{"value":"/ Build an HIR expression for `(?s).`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":337825,"byte_end":337865,"line_start":572,"line_end":572,"column_start":5,"column_end":45}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":337870,"byte_end":337873,"line_start":573,"line_end":573,"column_start":5,"column_end":8}},{"value":"/ A `(?s).` expression matches any character, including `\\n`. To build an","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":337878,"byte_end":337953,"line_start":574,"line_end":574,"column_start":5,"column_end":80}},{"value":"/ expression that matches any character except for `\\n`, then use the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":337958,"byte_end":338029,"line_start":575,"line_end":575,"column_start":5,"column_end":76}},{"value":"/ `dot` method.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":338034,"byte_end":338051,"line_start":576,"line_end":576,"column_start":5,"column_end":22}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":338056,"byte_end":338059,"line_start":577,"line_end":577,"column_start":5,"column_end":8}},{"value":"/ If `bytes` is `true`, then this assumes characters are limited to a","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":338064,"byte_end":338135,"line_start":578,"line_end":578,"column_start":5,"column_end":76}},{"value":"/ single byte.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":338140,"byte_end":338156,"line_start":579,"line_end":579,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1043},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":338758,"byte_end":338772,"line_start":596,"line_end":596,"column_start":12,"column_end":26},"name":"is_always_utf8","qualname":"<Hir>::is_always_utf8","value":"fn is_always_utf8<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if and only if this HIR will always match valid UTF-8.","sig":null,"attributes":[{"value":"/ Return true if and only if this HIR will always match valid UTF-8.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":338559,"byte_end":338629,"line_start":592,"line_end":592,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":338634,"byte_end":338637,"line_start":593,"line_end":593,"column_start":5,"column_end":8}},{"value":"/ When this returns false, then it is possible for this HIR expression","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":338642,"byte_end":338714,"line_start":594,"line_end":594,"column_start":5,"column_end":77}},{"value":"/ to match invalid UTF-8.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":338719,"byte_end":338746,"line_start":595,"line_end":595,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1044},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":339055,"byte_end":339072,"line_start":605,"line_end":605,"column_start":12,"column_end":29},"name":"is_all_assertions","qualname":"<Hir>::is_all_assertions","value":"fn is_all_assertions<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if this entire HIR expression is made up of\n zero-width assertions.","sig":null,"attributes":[{"value":"/ Returns true if and only if this entire HIR expression is made up of","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":338836,"byte_end":338908,"line_start":600,"line_end":600,"column_start":5,"column_end":77}},{"value":"/ zero-width assertions.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":338913,"byte_end":338939,"line_start":601,"line_end":601,"column_start":5,"column_end":31}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":338944,"byte_end":338947,"line_start":602,"line_end":602,"column_start":5,"column_end":8}},{"value":"/ This includes expressions like `^$\\b\\A\\z` and even `((\\b)+())*^`, but","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":338952,"byte_end":339025,"line_start":603,"line_end":603,"column_start":5,"column_end":78}},{"value":"/ not `^a`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":339030,"byte_end":339043,"line_start":604,"line_end":604,"column_start":5,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1045},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":339340,"byte_end":339357,"line_start":612,"line_end":612,"column_start":12,"column_end":29},"name":"is_anchored_start","qualname":"<Hir>::is_anchored_start","value":"fn is_anchored_start<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if and only if this HIR is required to match from the\n beginning of text. This includes expressions like `^foo`, `^(foo|bar)`,\n `^foo|^bar` but not `^foo|bar`.\n","sig":null,"attributes":[{"value":"/ Return true if and only if this HIR is required to match from the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":339139,"byte_end":339208,"line_start":609,"line_end":609,"column_start":5,"column_end":74}},{"value":"/ beginning of text. This includes expressions like `^foo`, `^(foo|bar)`,","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":339213,"byte_end":339288,"line_start":610,"line_end":610,"column_start":5,"column_end":80}},{"value":"/ `^foo|^bar` but not `^foo|bar`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":339293,"byte_end":339328,"line_start":611,"line_end":611,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1046},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":339617,"byte_end":339632,"line_start":619,"line_end":619,"column_start":12,"column_end":27},"name":"is_anchored_end","qualname":"<Hir>::is_anchored_end","value":"fn is_anchored_end<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if and only if this HIR is required to match at the end\n of text. This includes expressions like `foo$`, `(foo|bar)$`,\n `foo$|bar$` but not `foo$|bar`.\n","sig":null,"attributes":[{"value":"/ Return true if and only if this HIR is required to match at the end","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":339424,"byte_end":339495,"line_start":616,"line_end":616,"column_start":5,"column_end":76}},{"value":"/ of text. This includes expressions like `foo$`, `(foo|bar)$`,","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":339500,"byte_end":339565,"line_start":617,"line_end":617,"column_start":5,"column_end":70}},{"value":"/ `foo$|bar$` but not `foo$|bar`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":339570,"byte_end":339605,"line_start":618,"line_end":618,"column_start":5,"column_end":40}}]},{"kind":"Method","id":{"krate":0,"index":1047},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":340224,"byte_end":340246,"line_start":632,"line_end":632,"column_start":12,"column_end":34},"name":"is_line_anchored_start","qualname":"<Hir>::is_line_anchored_start","value":"fn is_line_anchored_start<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if and only if this HIR is required to match from the\n beginning of text or the beginning of a line. This includes expressions\n like `^foo`, `(?m)^foo`, `^(foo|bar)`, `^(foo|bar)`, `(?m)^foo|^bar`\n but not `^foo|bar` or `(?m)^foo|bar`.","sig":null,"attributes":[{"value":"/ Return true if and only if this HIR is required to match from the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":339697,"byte_end":339766,"line_start":623,"line_end":623,"column_start":5,"column_end":74}},{"value":"/ beginning of text or the beginning of a line. This includes expressions","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":339771,"byte_end":339846,"line_start":624,"line_end":624,"column_start":5,"column_end":80}},{"value":"/ like `^foo`, `(?m)^foo`, `^(foo|bar)`, `^(foo|bar)`, `(?m)^foo|^bar`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":339851,"byte_end":339923,"line_start":625,"line_end":625,"column_start":5,"column_end":77}},{"value":"/ but not `^foo|bar` or `(?m)^foo|bar`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":339928,"byte_end":339969,"line_start":626,"line_end":626,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":339974,"byte_end":339977,"line_start":627,"line_end":627,"column_start":5,"column_end":8}},{"value":"/ Note that if `is_anchored_start` is `true`, then","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":339982,"byte_end":340034,"line_start":628,"line_end":628,"column_start":5,"column_end":57}},{"value":"/ `is_line_anchored_start` will also be `true`. The reverse implication","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":340039,"byte_end":340112,"line_start":629,"line_end":629,"column_start":5,"column_end":78}},{"value":"/ is not true. For example, `(?m)^foo` is line anchored, but not","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":340117,"byte_end":340183,"line_start":630,"line_end":630,"column_start":5,"column_end":71}},{"value":"/ `is_anchored_start`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":340188,"byte_end":340212,"line_start":631,"line_end":631,"column_start":5,"column_end":29}}]},{"kind":"Method","id":{"krate":0,"index":1048},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":340844,"byte_end":340864,"line_start":645,"line_end":645,"column_start":12,"column_end":32},"name":"is_line_anchored_end","qualname":"<Hir>::is_line_anchored_end","value":"fn is_line_anchored_end<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if and only if this HIR is required to match at the\n end of text or the end of a line. This includes expressions like\n `foo$`, `(?m)foo$`, `(foo|bar)$`, `(?m)(foo|bar)$`, `foo$|bar$`,\n `(?m)(foo|bar)$`, but not `foo$|bar` or `(?m)foo$|bar`.","sig":null,"attributes":[{"value":"/ Return true if and only if this HIR is required to match at the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":340318,"byte_end":340385,"line_start":636,"line_end":636,"column_start":5,"column_end":72}},{"value":"/ end of text or the end of a line. This includes expressions like","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":340390,"byte_end":340458,"line_start":637,"line_end":637,"column_start":5,"column_end":73}},{"value":"/ `foo$`, `(?m)foo$`, `(foo|bar)$`, `(?m)(foo|bar)$`, `foo$|bar$`,","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":340463,"byte_end":340531,"line_start":638,"line_end":638,"column_start":5,"column_end":73}},{"value":"/ `(?m)(foo|bar)$`, but not `foo$|bar` or `(?m)foo$|bar`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":340536,"byte_end":340595,"line_start":639,"line_end":639,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":340600,"byte_end":340603,"line_start":640,"line_end":640,"column_start":5,"column_end":8}},{"value":"/ Note that if `is_anchored_end` is `true`, then","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":340608,"byte_end":340658,"line_start":641,"line_end":641,"column_start":5,"column_end":55}},{"value":"/ `is_line_anchored_end` will also be `true`. The reverse implication","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":340663,"byte_end":340734,"line_start":642,"line_end":642,"column_start":5,"column_end":76}},{"value":"/ is not true. For example, `(?m)foo$` is line anchored, but not","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":340739,"byte_end":340805,"line_start":643,"line_end":643,"column_start":5,"column_end":71}},{"value":"/ `is_anchored_end`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":340810,"byte_end":340832,"line_start":644,"line_end":644,"column_start":5,"column_end":27}}]},{"kind":"Method","id":{"krate":0,"index":1049},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":341222,"byte_end":341243,"line_start":653,"line_end":653,"column_start":12,"column_end":33},"name":"is_any_anchored_start","qualname":"<Hir>::is_any_anchored_start","value":"fn is_any_anchored_start<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if and only if this HIR contains any sub-expression that\n is required to match at the beginning of text. Specifically, this\n returns true if the `^` symbol (when multiline mode is disabled) or the\n `\\A` escape appear anywhere in the regex.\n","sig":null,"attributes":[{"value":"/ Return true if and only if this HIR contains any sub-expression that","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":340934,"byte_end":341006,"line_start":649,"line_end":649,"column_start":5,"column_end":77}},{"value":"/ is required to match at the beginning of text. Specifically, this","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":341011,"byte_end":341080,"line_start":650,"line_end":650,"column_start":5,"column_end":74}},{"value":"/ returns true if the `^` symbol (when multiline mode is disabled) or the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":341085,"byte_end":341160,"line_start":651,"line_end":651,"column_start":5,"column_end":80}},{"value":"/ `\\A` escape appear anywhere in the regex.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":341165,"byte_end":341210,"line_start":652,"line_end":652,"column_start":5,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1050},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":341596,"byte_end":341615,"line_start":661,"line_end":661,"column_start":12,"column_end":31},"name":"is_any_anchored_end","qualname":"<Hir>::is_any_anchored_end","value":"fn is_any_anchored_end<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if and only if this HIR contains any sub-expression that is\n required to match at the end of text. Specifically, this returns true\n if the `$` symbol (when multiline mode is disabled) or the `\\z` escape\n appear anywhere in the regex.\n","sig":null,"attributes":[{"value":"/ Return true if and only if this HIR contains any sub-expression that is","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":341314,"byte_end":341389,"line_start":657,"line_end":657,"column_start":5,"column_end":80}},{"value":"/ required to match at the end of text. Specifically, this returns true","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":341394,"byte_end":341467,"line_start":658,"line_end":658,"column_start":5,"column_end":78}},{"value":"/ if the `$` symbol (when multiline mode is disabled) or the `\\z` escape","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":341472,"byte_end":341546,"line_start":659,"line_end":659,"column_start":5,"column_end":79}},{"value":"/ appear anywhere in the regex.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":341551,"byte_end":341584,"line_start":660,"line_end":660,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1051},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":341934,"byte_end":341948,"line_start":670,"line_end":670,"column_start":12,"column_end":26},"name":"is_match_empty","qualname":"<Hir>::is_match_empty","value":"fn is_match_empty<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if and only if the empty string is part of the language\n matched by this regular expression.","sig":null,"attributes":[{"value":"/ Return true if and only if the empty string is part of the language","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":341684,"byte_end":341755,"line_start":665,"line_end":665,"column_start":5,"column_end":76}},{"value":"/ matched by this regular expression.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":341760,"byte_end":341799,"line_start":666,"line_end":666,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":341804,"byte_end":341807,"line_start":667,"line_end":667,"column_start":5,"column_end":8}},{"value":"/ This includes `a*`, `a?b*`, `a{0}`, `()`, `()+`, `^$`, `a|b?`, `\\b`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":341812,"byte_end":341883,"line_start":668,"line_end":668,"column_start":5,"column_end":76}},{"value":"/ and `\\B`, but not `a` or `a+`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":341888,"byte_end":341922,"line_start":669,"line_end":669,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1052},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":342377,"byte_end":342387,"line_start":680,"line_end":680,"column_start":12,"column_end":22},"name":"is_literal","qualname":"<Hir>::is_literal","value":"fn is_literal<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if and only if this HIR is a simple literal. This is only\n true when this HIR expression is either itself a `Literal` or a\n concatenation of only `Literal`s.","sig":null,"attributes":[{"value":"/ Return true if and only if this HIR is a simple literal. This is only","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":342012,"byte_end":342085,"line_start":674,"line_end":674,"column_start":5,"column_end":78}},{"value":"/ true when this HIR expression is either itself a `Literal` or a","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":342090,"byte_end":342157,"line_start":675,"line_end":675,"column_start":5,"column_end":72}},{"value":"/ concatenation of only `Literal`s.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":342162,"byte_end":342199,"line_start":676,"line_end":676,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":342204,"byte_end":342207,"line_start":677,"line_end":677,"column_start":5,"column_end":8}},{"value":"/ For example, `f` and `foo` are literals, but `f+`, `(foo)`, `foo()`,","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":342212,"byte_end":342284,"line_start":678,"line_end":678,"column_start":5,"column_end":77}},{"value":"/ `` are not (even though that contain sub-expressions that are literals).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":342289,"byte_end":342365,"line_start":679,"line_end":679,"column_start":5,"column_end":81}}]},{"kind":"Method","id":{"krate":0,"index":1053},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":342946,"byte_end":342968,"line_start":692,"line_end":692,"column_start":12,"column_end":34},"name":"is_alternation_literal","qualname":"<Hir>::is_alternation_literal","value":"fn is_alternation_literal<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if and only if this HIR is either a simple literal or an\n alternation of simple literals. This is only\n true when this HIR expression is either itself a `Literal` or a\n concatenation of only `Literal`s or an alternation of only `Literal`s.","sig":null,"attributes":[{"value":"/ Return true if and only if this HIR is either a simple literal or an","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":342447,"byte_end":342519,"line_start":684,"line_end":684,"column_start":5,"column_end":77}},{"value":"/ alternation of simple literals. This is only","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":342524,"byte_end":342572,"line_start":685,"line_end":685,"column_start":5,"column_end":53}},{"value":"/ true when this HIR expression is either itself a `Literal` or a","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":342577,"byte_end":342644,"line_start":686,"line_end":686,"column_start":5,"column_end":72}},{"value":"/ concatenation of only `Literal`s or an alternation of only `Literal`s.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":342649,"byte_end":342723,"line_start":687,"line_end":687,"column_start":5,"column_end":79}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":342728,"byte_end":342731,"line_start":688,"line_end":688,"column_start":5,"column_end":8}},{"value":"/ For example, `f`, `foo`, `a|b|c`, and `foo|bar|baz` are alternation","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":342736,"byte_end":342807,"line_start":689,"line_end":689,"column_start":5,"column_end":76}},{"value":"/ literals, but `f+`, `(foo)`, `foo()`, ``","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":342812,"byte_end":342856,"line_start":690,"line_end":690,"column_start":5,"column_end":49}},{"value":"/ are not (even though that contain sub-expressions that are literals).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":342861,"byte_end":342934,"line_start":691,"line_end":691,"column_start":5,"column_end":78}}]},{"kind":"Method","id":{"krate":0,"index":1055},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":343370,"byte_end":343378,"line_start":703,"line_end":703,"column_start":12,"column_end":20},"name":"is_empty","qualname":"<HirKind>::is_empty","value":"fn is_empty<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Return true if and only if this HIR is the empty regular expression.","sig":null,"attributes":[{"value":"/ Return true if and only if this HIR is the empty regular expression.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":343057,"byte_end":343129,"line_start":698,"line_end":698,"column_start":5,"column_end":77}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":343134,"byte_end":343137,"line_start":699,"line_end":699,"column_start":5,"column_end":8}},{"value":"/ Note that this is not defined inductively. That is, it only tests if","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":343142,"byte_end":343214,"line_start":700,"line_end":700,"column_start":5,"column_end":77}},{"value":"/ this kind is the `Empty` variant. To get the inductive definition,","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":343219,"byte_end":343289,"line_start":701,"line_end":701,"column_start":5,"column_end":75}},{"value":"/ use the `is_match_empty` method on [`Hir`](struct.Hir.html).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":343294,"byte_end":343358,"line_start":702,"line_end":702,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1056},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":343611,"byte_end":343623,"line_start":712,"line_end":712,"column_start":12,"column_end":24},"name":"has_subexprs","qualname":"<HirKind>::has_subexprs","value":"fn has_subexprs<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if this kind has any (including possibly\n empty) subexpressions.\n","sig":null,"attributes":[{"value":"/ Returns true if and only if this kind has any (including possibly","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":343499,"byte_end":343568,"line_start":710,"line_end":710,"column_start":5,"column_end":74}},{"value":"/ empty) subexpressions.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":343573,"byte_end":343599,"line_start":711,"line_end":711,"column_start":5,"column_end":31}}]},{"kind":"Method","id":{"krate":0,"index":1058},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":344272,"byte_end":344275,"line_start":734,"line_end":734,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Hir as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3133},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":344894,"byte_end":344901,"line_start":749,"line_end":749,"column_start":5,"column_end":12},"name":"Unicode","qualname":"::hir::Literal::Unicode","value":"Literal::Unicode(char)","parent":{"krate":0,"index":3132},"children":[],"decl_id":null,"docs":" A single character represented by a Unicode scalar value.\n","sig":null,"attributes":[{"value":"/ A single character represented by a Unicode scalar value.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":344828,"byte_end":344889,"line_start":748,"line_end":748,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":3135},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":344902,"byte_end":344906,"line_start":749,"line_end":749,"column_start":13,"column_end":17},"name":"0","qualname":"::hir::Literal::Unicode::0","value":"char","parent":{"krate":0,"index":3133},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3136},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":344974,"byte_end":344978,"line_start":751,"line_end":751,"column_start":5,"column_end":9},"name":"Byte","qualname":"::hir::Literal::Byte","value":"Literal::Byte(u8)","parent":{"krate":0,"index":3132},"children":[],"decl_id":null,"docs":" A single character represented by an arbitrary byte.\n","sig":null,"attributes":[{"value":"/ A single character represented by an arbitrary byte.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":344913,"byte_end":344969,"line_start":750,"line_end":750,"column_start":5,"column_end":61}}]},{"kind":"Field","id":{"krate":0,"index":3138},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":344979,"byte_end":344981,"line_start":751,"line_end":751,"column_start":10,"column_end":12},"name":"0","qualname":"::hir::Literal::Byte::0","value":"u8","parent":{"krate":0,"index":3136},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3132},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":344814,"byte_end":344821,"line_start":747,"line_end":747,"column_start":10,"column_end":17},"name":"Literal","qualname":"::hir::Literal","value":"enum Literal { Unicode(char), Byte(u8), }","parent":null,"children":[{"krate":0,"index":3133},{"krate":0,"index":3136}],"decl_id":null,"docs":" The high-level intermediate representation of a literal.","sig":null,"attributes":[{"value":"/ The high-level intermediate representation of a literal.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":344415,"byte_end":344475,"line_start":740,"line_end":740,"column_start":1,"column_end":61}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":344476,"byte_end":344479,"line_start":741,"line_end":741,"column_start":1,"column_end":4}},{"value":"/ A literal corresponds to a single character, where a character is either","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":344480,"byte_end":344556,"line_start":742,"line_end":742,"column_start":1,"column_end":77}},{"value":"/ defined by a Unicode scalar value or an arbitrary byte. Unicode characters","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":344557,"byte_end":344635,"line_start":743,"line_end":743,"column_start":1,"column_end":79}},{"value":"/ are preferred whenever possible. In particular, a `Byte` variant is only","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":344636,"byte_end":344712,"line_start":744,"line_end":744,"column_start":1,"column_end":77}},{"value":"/ ever produced when it could match invalid UTF-8.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":344713,"byte_end":344765,"line_start":745,"line_end":745,"column_start":1,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":1063},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":345109,"byte_end":345119,"line_start":757,"line_end":757,"column_start":12,"column_end":22},"name":"is_unicode","qualname":"<Literal>::is_unicode","value":"fn is_unicode<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if this literal corresponds to a Unicode\n scalar value.\n","sig":null,"attributes":[{"value":"/ Returns true if and only if this literal corresponds to a Unicode","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":345006,"byte_end":345075,"line_start":755,"line_end":755,"column_start":5,"column_end":74}},{"value":"/ scalar value.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":345080,"byte_end":345097,"line_start":756,"line_end":756,"column_start":5,"column_end":22}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3151},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":346325,"byte_end":346332,"line_start":785,"line_end":785,"column_start":5,"column_end":12},"name":"Unicode","qualname":"::hir::Class::Unicode","value":"Class::Unicode(ClassUnicode)","parent":{"krate":0,"index":3150},"children":[],"decl_id":null,"docs":" A set of characters represented by Unicode scalar values.\n","sig":null,"attributes":[{"value":"/ A set of characters represented by Unicode scalar values.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":346259,"byte_end":346320,"line_start":784,"line_end":784,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":3153},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":346333,"byte_end":346345,"line_start":785,"line_end":785,"column_start":13,"column_end":25},"name":"0","qualname":"::hir::Class::Unicode::0","value":"hir::ClassUnicode","parent":{"krate":0,"index":3151},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3154},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":346445,"byte_end":346450,"line_start":788,"line_end":788,"column_start":5,"column_end":10},"name":"Bytes","qualname":"::hir::Class::Bytes","value":"Class::Bytes(ClassBytes)","parent":{"krate":0,"index":3150},"children":[],"decl_id":null,"docs":" A set of characters represented by arbitrary bytes (one byte per\n character).\n","sig":null,"attributes":[{"value":"/ A set of characters represented by arbitrary bytes (one byte per","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":346352,"byte_end":346420,"line_start":786,"line_end":786,"column_start":5,"column_end":73}},{"value":"/ character).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":346425,"byte_end":346440,"line_start":787,"line_end":787,"column_start":5,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":3156},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":346451,"byte_end":346461,"line_start":788,"line_end":788,"column_start":11,"column_end":21},"name":"0","qualname":"::hir::Class::Bytes::0","value":"hir::ClassBytes","parent":{"krate":0,"index":3154},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3150},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":346247,"byte_end":346252,"line_start":783,"line_end":783,"column_start":10,"column_end":15},"name":"Class","qualname":"::hir::Class","value":"enum Class { Unicode(ClassUnicode), Bytes(ClassBytes), }","parent":null,"children":[{"krate":0,"index":3151},{"krate":0,"index":3154}],"decl_id":null,"docs":" The high-level intermediate representation of a character class.","sig":null,"attributes":[{"value":"/ The high-level intermediate representation of a character class.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":345309,"byte_end":345377,"line_start":766,"line_end":766,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":345378,"byte_end":345381,"line_start":767,"line_end":767,"column_start":1,"column_end":4}},{"value":"/ A character class corresponds to a set of characters. A character is either","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":345382,"byte_end":345461,"line_start":768,"line_end":768,"column_start":1,"column_end":80}},{"value":"/ defined by a Unicode scalar value or a byte. Unicode characters are used","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":345462,"byte_end":345538,"line_start":769,"line_end":769,"column_start":1,"column_end":77}},{"value":"/ by default, while bytes are used when Unicode mode (via the `u` flag) is","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":345539,"byte_end":345615,"line_start":770,"line_end":770,"column_start":1,"column_end":77}},{"value":"/ disabled.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":345616,"byte_end":345629,"line_start":771,"line_end":771,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":345630,"byte_end":345633,"line_start":772,"line_end":772,"column_start":1,"column_end":4}},{"value":"/ A character class, regardless of its character type, is represented by a","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":345634,"byte_end":345710,"line_start":773,"line_end":773,"column_start":1,"column_end":77}},{"value":"/ sequence of non-overlapping non-adjacent ranges of characters.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":345711,"byte_end":345777,"line_start":774,"line_end":774,"column_start":1,"column_end":67}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":345778,"byte_end":345781,"line_start":775,"line_end":775,"column_start":1,"column_end":4}},{"value":"/ Note that unlike [`Literal`](enum.Literal.html), a `Bytes` variant may","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":345782,"byte_end":345856,"line_start":776,"line_end":776,"column_start":1,"column_end":75}},{"value":"/ be produced even when it exclusively matches valid UTF-8. This is because","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":345857,"byte_end":345934,"line_start":777,"line_end":777,"column_start":1,"column_end":78}},{"value":"/ a `Bytes` variant represents an intention by the author of the regular","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":345935,"byte_end":346009,"line_start":778,"line_end":778,"column_start":1,"column_end":75}},{"value":"/ expression to disable Unicode mode, which in turn impacts the semantics of","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":346010,"byte_end":346088,"line_start":779,"line_end":779,"column_start":1,"column_end":79}},{"value":"/ case insensitive matching. For example, `(?i)k` and `(?i-u)k` will not","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":346089,"byte_end":346163,"line_start":780,"line_end":780,"column_start":1,"column_end":75}},{"value":"/ match the same set of strings.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":346164,"byte_end":346198,"line_start":781,"line_end":781,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1065},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":346806,"byte_end":346822,"line_start":798,"line_end":798,"column_start":12,"column_end":28},"name":"case_fold_simple","qualname":"<Class>::case_fold_simple","value":"fn case_fold_simple<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Apply Unicode simple case folding to this character class, in place.\n The character class will be expanded to include all simple case folded\n character variants.","sig":null,"attributes":[{"value":"/ Apply Unicode simple case folding to this character class, in place.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":346484,"byte_end":346556,"line_start":792,"line_end":792,"column_start":5,"column_end":77}},{"value":"/ The character class will be expanded to include all simple case folded","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":346561,"byte_end":346635,"line_start":793,"line_end":793,"column_start":5,"column_end":79}},{"value":"/ character variants.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":346640,"byte_end":346663,"line_start":794,"line_end":794,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":346668,"byte_end":346671,"line_start":795,"line_end":795,"column_start":5,"column_end":8}},{"value":"/ If this is a byte oriented character class, then this will be limited","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":346676,"byte_end":346749,"line_start":796,"line_end":796,"column_start":5,"column_end":78}},{"value":"/ to the ASCII ranges `A-Z` and `a-z`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":346754,"byte_end":346794,"line_start":797,"line_end":797,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1066},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":347195,"byte_end":347201,"line_start":809,"line_end":809,"column_start":12,"column_end":18},"name":"negate","qualname":"<Class>::negate","value":"fn negate<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Negate this character class in place.","sig":null,"attributes":[{"value":"/ Negate this character class in place.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":347003,"byte_end":347044,"line_start":805,"line_end":805,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":347049,"byte_end":347052,"line_start":806,"line_end":806,"column_start":5,"column_end":8}},{"value":"/ After completion, this character class will contain precisely the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":347057,"byte_end":347126,"line_start":807,"line_end":807,"column_start":5,"column_end":74}},{"value":"/ characters that weren't previously in the class.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":347131,"byte_end":347183,"line_start":808,"line_end":808,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1067},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":347906,"byte_end":347920,"line_start":827,"line_end":827,"column_start":12,"column_end":26},"name":"is_always_utf8","qualname":"<Class>::is_always_utf8","value":"fn is_always_utf8<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if this character class will only ever match\n valid UTF-8.","sig":null,"attributes":[{"value":"/ Returns true if and only if this character class will only ever match","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":347362,"byte_end":347435,"line_start":816,"line_end":816,"column_start":5,"column_end":78}},{"value":"/ valid UTF-8.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":347440,"byte_end":347456,"line_start":817,"line_end":817,"column_start":5,"column_end":21}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":347461,"byte_end":347464,"line_start":818,"line_end":818,"column_start":5,"column_end":8}},{"value":"/ A character class can match invalid UTF-8 only when the following","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":347469,"byte_end":347538,"line_start":819,"line_end":819,"column_start":5,"column_end":74}},{"value":"/ conditions are met:","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":347543,"byte_end":347566,"line_start":820,"line_end":820,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":347571,"byte_end":347574,"line_start":821,"line_end":821,"column_start":5,"column_end":8}},{"value":"/ 1. The translator was configured to permit generating an expression","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":347579,"byte_end":347650,"line_start":822,"line_end":822,"column_start":5,"column_end":76}},{"value":"/    that can match invalid UTF-8. (By default, this is disabled.)","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":347655,"byte_end":347723,"line_start":823,"line_end":823,"column_start":5,"column_end":73}},{"value":"/ 2. Unicode mode (via the `u` flag) was disabled either in the concrete","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":347728,"byte_end":347802,"line_start":824,"line_end":824,"column_start":5,"column_end":79}},{"value":"/    syntax or in the parser builder. By default, Unicode mode is","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":347807,"byte_end":347874,"line_start":825,"line_end":825,"column_start":5,"column_end":72}},{"value":"/    enabled.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":347879,"byte_end":347894,"line_start":826,"line_end":826,"column_start":5,"column_end":20}}]},{"kind":"Struct","id":{"krate":0,"index":3168},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":348183,"byte_end":348195,"line_start":837,"line_end":837,"column_start":12,"column_end":24},"name":"ClassUnicode","qualname":"::hir::ClassUnicode","value":"ClassUnicode {  }","parent":null,"children":[{"krate":0,"index":3169}],"decl_id":null,"docs":" A set of characters represented by Unicode scalar values.\n","sig":null,"attributes":[{"value":"/ A set of characters represented by Unicode scalar values.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":348071,"byte_end":348132,"line_start":835,"line_end":835,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1069},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":348433,"byte_end":348436,"line_start":846,"line_end":846,"column_start":12,"column_end":15},"name":"new","qualname":"<ClassUnicode>::new","value":"fn new<I>(I) -> ClassUnicode where I: IntoIterator<Item = ClassUnicodeRange>","parent":null,"children":[],"decl_id":null,"docs":" Create a new class from a sequence of ranges.","sig":null,"attributes":[{"value":"/ Create a new class from a sequence of ranges.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":348266,"byte_end":348315,"line_start":842,"line_end":842,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":348320,"byte_end":348323,"line_start":843,"line_end":843,"column_start":5,"column_end":8}},{"value":"/ The given ranges do not need to be in any specific order, and ranges","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":348328,"byte_end":348400,"line_start":844,"line_end":844,"column_start":5,"column_end":77}},{"value":"/ may overlap.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":348405,"byte_end":348421,"line_start":845,"line_end":845,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1071},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":348650,"byte_end":348655,"line_start":854,"line_end":854,"column_start":12,"column_end":17},"name":"empty","qualname":"<ClassUnicode>::empty","value":"fn empty() -> ClassUnicode","parent":null,"children":[],"decl_id":null,"docs":" Create a new class with no ranges.\n","sig":null,"attributes":[{"value":"/ Create a new class with no ranges.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":348600,"byte_end":348638,"line_start":853,"line_end":853,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1072},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":348765,"byte_end":348769,"line_start":859,"line_end":859,"column_start":12,"column_end":16},"name":"push","qualname":"<ClassUnicode>::push","value":"fn push<'_>(&'_ mut Self, ClassUnicodeRange)","parent":null,"children":[],"decl_id":null,"docs":" Add a new range to this set.\n","sig":null,"attributes":[{"value":"/ Add a new range to this set.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":348721,"byte_end":348753,"line_start":858,"line_end":858,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1073},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":348978,"byte_end":348982,"line_start":866,"line_end":866,"column_start":12,"column_end":16},"name":"iter","qualname":"<ClassUnicode>::iter","value":"fn iter<'_>(&'_ Self) -> ClassUnicodeIter","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over all ranges in this class.","sig":null,"attributes":[{"value":"/ Return an iterator over all ranges in this class.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":348850,"byte_end":348903,"line_start":863,"line_end":863,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":348908,"byte_end":348911,"line_start":864,"line_end":864,"column_start":5,"column_end":8}},{"value":"/ The iterator yields ranges in ascending order.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":348916,"byte_end":348966,"line_start":865,"line_end":865,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1074},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":349125,"byte_end":349131,"line_start":871,"line_end":871,"column_start":12,"column_end":18},"name":"ranges","qualname":"<ClassUnicode>::ranges","value":"fn ranges<'_>(&'_ Self) -> &'_ [ClassUnicodeRange]","parent":null,"children":[],"decl_id":null,"docs":" Return the underlying ranges as a slice.\n","sig":null,"attributes":[{"value":"/ Return the underlying ranges as a slice.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":349069,"byte_end":349113,"line_start":870,"line_end":870,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1075},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":349867,"byte_end":349883,"line_start":888,"line_end":888,"column_start":12,"column_end":28},"name":"case_fold_simple","qualname":"<ClassUnicode>::case_fold_simple","value":"fn case_fold_simple<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Expand this character class such that it contains all case folded\n characters, according to Unicode's \"simple\" mapping. For example, if\n this class consists of the range `a-z`, then applying case folding will\n result in the class containing both the ranges `a-z` and `A-Z`.","sig":null,"attributes":[{"value":"/ Expand this character class such that it contains all case folded","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":349205,"byte_end":349274,"line_start":875,"line_end":875,"column_start":5,"column_end":74}},{"value":"/ characters, according to Unicode's \"simple\" mapping. For example, if","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":349279,"byte_end":349351,"line_start":876,"line_end":876,"column_start":5,"column_end":77}},{"value":"/ this class consists of the range `a-z`, then applying case folding will","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":349356,"byte_end":349431,"line_start":877,"line_end":877,"column_start":5,"column_end":80}},{"value":"/ result in the class containing both the ranges `a-z` and `A-Z`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":349436,"byte_end":349503,"line_start":878,"line_end":878,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":349508,"byte_end":349511,"line_start":879,"line_end":879,"column_start":5,"column_end":8}},{"value":"/ # Panics","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":349516,"byte_end":349528,"line_start":880,"line_end":880,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":349533,"byte_end":349536,"line_start":881,"line_end":881,"column_start":5,"column_end":8}},{"value":"/ This routine panics when the case mapping data necessary for this","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":349541,"byte_end":349610,"line_start":882,"line_end":882,"column_start":5,"column_end":74}},{"value":"/ routine to complete is unavailable. This occurs when the `unicode-case`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":349615,"byte_end":349690,"line_start":883,"line_end":883,"column_start":5,"column_end":80}},{"value":"/ feature is not enabled.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":349695,"byte_end":349722,"line_start":884,"line_end":884,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":349727,"byte_end":349730,"line_start":885,"line_end":885,"column_start":5,"column_end":8}},{"value":"/ Callers should prefer using `try_case_fold_simple` instead, which will","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":349735,"byte_end":349809,"line_start":886,"line_end":886,"column_start":5,"column_end":79}},{"value":"/ return an error instead of panicking.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":349814,"byte_end":349855,"line_start":887,"line_end":887,"column_start":5,"column_end":46}}]},{"kind":"Method","id":{"krate":0,"index":1076},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":350556,"byte_end":350576,"line_start":904,"line_end":904,"column_start":12,"column_end":32},"name":"try_case_fold_simple","qualname":"<ClassUnicode>::try_case_fold_simple","value":"fn try_case_fold_simple<'_>(&'_ mut Self) -> result::Result<(), CaseFoldError>","parent":null,"children":[],"decl_id":null,"docs":" Expand this character class such that it contains all case folded\n characters, according to Unicode's \"simple\" mapping. For example, if\n this class consists of the range `a-z`, then applying case folding will\n result in the class containing both the ranges `a-z` and `A-Z`.","sig":null,"attributes":[{"value":"/ Expand this character class such that it contains all case folded","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":350018,"byte_end":350087,"line_start":894,"line_end":894,"column_start":5,"column_end":74}},{"value":"/ characters, according to Unicode's \"simple\" mapping. For example, if","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":350092,"byte_end":350164,"line_start":895,"line_end":895,"column_start":5,"column_end":77}},{"value":"/ this class consists of the range `a-z`, then applying case folding will","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":350169,"byte_end":350244,"line_start":896,"line_end":896,"column_start":5,"column_end":80}},{"value":"/ result in the class containing both the ranges `a-z` and `A-Z`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":350249,"byte_end":350316,"line_start":897,"line_end":897,"column_start":5,"column_end":72}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":350321,"byte_end":350324,"line_start":898,"line_end":898,"column_start":5,"column_end":8}},{"value":"/ # Error","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":350329,"byte_end":350340,"line_start":899,"line_end":899,"column_start":5,"column_end":16}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":350345,"byte_end":350348,"line_start":900,"line_end":900,"column_start":5,"column_end":8}},{"value":"/ This routine returns an error when the case mapping data necessary","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":350353,"byte_end":350423,"line_start":901,"line_end":901,"column_start":5,"column_end":75}},{"value":"/ for this routine to complete is unavailable. This occurs when the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":350428,"byte_end":350497,"line_start":902,"line_end":902,"column_start":5,"column_end":74}},{"value":"/ `unicode-case` feature is not enabled.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":350502,"byte_end":350544,"line_start":903,"line_end":903,"column_start":5,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1077},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":350878,"byte_end":350884,"line_start":914,"line_end":914,"column_start":12,"column_end":18},"name":"negate","qualname":"<ClassUnicode>::negate","value":"fn negate<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Negate this character class.","sig":null,"attributes":[{"value":"/ Negate this character class.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":350689,"byte_end":350721,"line_start":910,"line_end":910,"column_start":5,"column_end":37}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":350726,"byte_end":350729,"line_start":911,"line_end":911,"column_start":5,"column_end":8}},{"value":"/ For all `c` where `c` is a Unicode scalar value, if `c` was in this","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":350734,"byte_end":350805,"line_start":912,"line_end":912,"column_start":5,"column_end":76}},{"value":"/ set, then it will not be in this set after negation.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":350810,"byte_end":350866,"line_start":913,"line_end":913,"column_start":5,"column_end":61}}]},{"kind":"Method","id":{"krate":0,"index":1078},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":351020,"byte_end":351025,"line_start":919,"line_end":919,"column_start":12,"column_end":17},"name":"union","qualname":"<ClassUnicode>::union","value":"fn union<'_, '_>(&'_ mut Self, &'_ ClassUnicode)","parent":null,"children":[],"decl_id":null,"docs":" Union this character class with the given character class, in place.\n","sig":null,"attributes":[{"value":"/ Union this character class with the given character class, in place.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":350936,"byte_end":351008,"line_start":918,"line_end":918,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1079},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":351204,"byte_end":351213,"line_start":925,"line_end":925,"column_start":12,"column_end":21},"name":"intersect","qualname":"<ClassUnicode>::intersect","value":"fn intersect<'_, '_>(&'_ mut Self, &'_ ClassUnicode)","parent":null,"children":[],"decl_id":null,"docs":" Intersect this character class with the given character class, in\n place.\n","sig":null,"attributes":[{"value":"/ Intersect this character class with the given character class, in","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":351108,"byte_end":351177,"line_start":923,"line_end":923,"column_start":5,"column_end":74}},{"value":"/ place.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":351182,"byte_end":351192,"line_start":924,"line_end":924,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1080},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":351387,"byte_end":351397,"line_start":930,"line_end":930,"column_start":12,"column_end":22},"name":"difference","qualname":"<ClassUnicode>::difference","value":"fn difference<'_, '_>(&'_ mut Self, &'_ ClassUnicode)","parent":null,"children":[],"decl_id":null,"docs":" Subtract the given character class from this character class, in place.\n","sig":null,"attributes":[{"value":"/ Subtract the given character class from this character class, in place.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":351300,"byte_end":351375,"line_start":929,"line_end":929,"column_start":5,"column_end":80}}]},{"kind":"Method","id":{"krate":0,"index":1081},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":351966,"byte_end":351986,"line_start":942,"line_end":942,"column_start":12,"column_end":32},"name":"symmetric_difference","qualname":"<ClassUnicode>::symmetric_difference","value":"fn symmetric_difference<'_, '_>(&'_ mut Self, &'_ ClassUnicode)","parent":null,"children":[],"decl_id":null,"docs":" Compute the symmetric difference of the given character classes, in\n place.","sig":null,"attributes":[{"value":"/ Compute the symmetric difference of the given character classes, in","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":351485,"byte_end":351556,"line_start":934,"line_end":934,"column_start":5,"column_end":76}},{"value":"/ place.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":351561,"byte_end":351571,"line_start":935,"line_end":935,"column_start":5,"column_end":15}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":351576,"byte_end":351579,"line_start":936,"line_end":936,"column_start":5,"column_end":8}},{"value":"/ This computes the symmetric difference of two character classes. This","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":351584,"byte_end":351657,"line_start":937,"line_end":937,"column_start":5,"column_end":78}},{"value":"/ removes all elements in this class that are also in the given class,","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":351662,"byte_end":351734,"line_start":938,"line_end":938,"column_start":5,"column_end":77}},{"value":"/ but all adds all elements from the given class that aren't in this","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":351739,"byte_end":351809,"line_start":939,"line_end":939,"column_start":5,"column_end":75}},{"value":"/ class. That is, the class will contain all elements in either class,","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":351814,"byte_end":351886,"line_start":940,"line_end":940,"column_start":5,"column_end":77}},{"value":"/ but will not contain any elements that are in both classes.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":351891,"byte_end":351954,"line_start":941,"line_end":941,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1082},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":352308,"byte_end":352320,"line_start":949,"line_end":949,"column_start":12,"column_end":24},"name":"is_all_ascii","qualname":"<ClassUnicode>::is_all_ascii","value":"fn is_all_ascii<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if this character class will either match\n nothing or only ASCII bytes. Stated differently, this returns false\n if and only if this class contains a non-ASCII codepoint.\n","sig":null,"attributes":[{"value":"/ Returns true if and only if this character class will either match","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":352084,"byte_end":352154,"line_start":946,"line_end":946,"column_start":5,"column_end":75}},{"value":"/ nothing or only ASCII bytes. Stated differently, this returns false","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":352159,"byte_end":352230,"line_start":947,"line_end":947,"column_start":5,"column_end":76}},{"value":"/ if and only if this class contains a non-ASCII codepoint.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":352235,"byte_end":352296,"line_start":948,"line_end":948,"column_start":5,"column_end":66}}]},{"kind":"Struct","id":{"krate":0,"index":3181},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":352581,"byte_end":352597,"line_start":958,"line_end":958,"column_start":12,"column_end":28},"name":"ClassUnicodeIter","qualname":"::hir::ClassUnicodeIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over all ranges in a Unicode character class.","sig":null,"attributes":[{"value":"/ An iterator over all ranges in a Unicode character class.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":352417,"byte_end":352478,"line_start":954,"line_end":954,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":352479,"byte_end":352482,"line_start":955,"line_end":955,"column_start":1,"column_end":4}},{"value":"/ The lifetime `'a` refers to the lifetime of the underlying class.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":352483,"byte_end":352552,"line_start":956,"line_end":956,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1087},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":352736,"byte_end":352740,"line_start":963,"line_end":963,"column_start":8,"column_end":12},"name":"next","qualname":"<ClassUnicodeIter as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<&'a ClassUnicodeRange>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8598},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3188},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":353064,"byte_end":353081,"line_start":973,"line_end":973,"column_start":12,"column_end":29},"name":"ClassUnicodeRange","qualname":"::hir::ClassUnicodeRange","value":"ClassUnicodeRange {  }","parent":null,"children":[{"krate":0,"index":3189},{"krate":0,"index":3190}],"decl_id":null,"docs":" A single range of characters represented by Unicode scalar values.","sig":null,"attributes":[{"value":"/ A single range of characters represented by Unicode scalar values.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":352818,"byte_end":352888,"line_start":968,"line_end":968,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":352889,"byte_end":352892,"line_start":969,"line_end":969,"column_start":1,"column_end":4}},{"value":"/ The range is closed. That is, the start and end of the range are included","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":352893,"byte_end":352970,"line_start":970,"line_end":970,"column_start":1,"column_end":78}},{"value":"/ in the range.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":352971,"byte_end":352988,"line_start":971,"line_end":971,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1089},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":353166,"byte_end":353169,"line_start":979,"line_end":979,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ClassUnicodeRange as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1099},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":355514,"byte_end":355517,"line_start":1056,"line_end":1056,"column_start":12,"column_end":15},"name":"new","qualname":"<ClassUnicodeRange>::new","value":"fn new(char, char) -> ClassUnicodeRange","parent":null,"children":[],"decl_id":null,"docs":" Create a new Unicode scalar value range for a character class.","sig":null,"attributes":[{"value":"/ Create a new Unicode scalar value range for a character class.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":355282,"byte_end":355348,"line_start":1052,"line_end":1052,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":355353,"byte_end":355356,"line_start":1053,"line_end":1053,"column_start":5,"column_end":8}},{"value":"/ The returned range is always in a canonical form. That is, the range","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":355361,"byte_end":355433,"line_start":1054,"line_end":1054,"column_start":5,"column_end":77}},{"value":"/ returned always satisfies the invariant that `start <= end`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":355438,"byte_end":355502,"line_start":1055,"line_end":1055,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1100},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":355768,"byte_end":355773,"line_start":1064,"line_end":1064,"column_start":12,"column_end":17},"name":"start","qualname":"<ClassUnicodeRange>::start","value":"fn start<'_>(&'_ Self) -> char","parent":null,"children":[],"decl_id":null,"docs":" Return the start of this range.","sig":null,"attributes":[{"value":"/ Return the start of this range.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":355622,"byte_end":355657,"line_start":1060,"line_end":1060,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":355662,"byte_end":355665,"line_start":1061,"line_end":1061,"column_start":5,"column_end":8}},{"value":"/ The start of a range is always less than or equal to the end of the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":355670,"byte_end":355741,"line_start":1062,"line_end":1062,"column_start":5,"column_end":76}},{"value":"/ range.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":355746,"byte_end":355756,"line_start":1063,"line_end":1063,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1101},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":355968,"byte_end":355971,"line_start":1072,"line_end":1072,"column_start":12,"column_end":15},"name":"end","qualname":"<ClassUnicodeRange>::end","value":"fn end<'_>(&'_ Self) -> char","parent":null,"children":[],"decl_id":null,"docs":" Return the end of this range.","sig":null,"attributes":[{"value":"/ Return the end of this range.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":355821,"byte_end":355854,"line_start":1068,"line_end":1068,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":355859,"byte_end":355862,"line_start":1069,"line_end":1069,"column_start":5,"column_end":8}},{"value":"/ The end of a range is always greater than or equal to the start of the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":355867,"byte_end":355941,"line_start":1070,"line_end":1070,"column_start":5,"column_end":79}},{"value":"/ range.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":355946,"byte_end":355956,"line_start":1071,"line_end":1071,"column_start":5,"column_end":15}}]},{"kind":"Struct","id":{"krate":0,"index":3207},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":356171,"byte_end":356181,"line_start":1080,"line_end":1080,"column_start":12,"column_end":22},"name":"ClassBytes","qualname":"::hir::ClassBytes","value":"ClassBytes {  }","parent":null,"children":[{"krate":0,"index":3208}],"decl_id":null,"docs":" A set of characters represented by arbitrary bytes (where one byte\n corresponds to one character).\n","sig":null,"attributes":[{"value":"/ A set of characters represented by arbitrary bytes (where one byte","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":356015,"byte_end":356085,"line_start":1077,"line_end":1077,"column_start":1,"column_end":71}},{"value":"/ corresponds to one character).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":356086,"byte_end":356120,"line_start":1078,"line_end":1078,"column_start":1,"column_end":35}}]},{"kind":"Method","id":{"krate":0,"index":1103},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":356415,"byte_end":356418,"line_start":1089,"line_end":1089,"column_start":12,"column_end":15},"name":"new","qualname":"<ClassBytes>::new","value":"fn new<I>(I) -> ClassBytes where I: IntoIterator<Item = ClassBytesRange>","parent":null,"children":[],"decl_id":null,"docs":" Create a new class from a sequence of ranges.","sig":null,"attributes":[{"value":"/ Create a new class from a sequence of ranges.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":356248,"byte_end":356297,"line_start":1085,"line_end":1085,"column_start":5,"column_end":54}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":356302,"byte_end":356305,"line_start":1086,"line_end":1086,"column_start":5,"column_end":8}},{"value":"/ The given ranges do not need to be in any specific order, and ranges","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":356310,"byte_end":356382,"line_start":1087,"line_end":1087,"column_start":5,"column_end":77}},{"value":"/ may overlap.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":356387,"byte_end":356403,"line_start":1088,"line_end":1088,"column_start":5,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":1105},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":356626,"byte_end":356631,"line_start":1097,"line_end":1097,"column_start":12,"column_end":17},"name":"empty","qualname":"<ClassBytes>::empty","value":"fn empty() -> ClassBytes","parent":null,"children":[],"decl_id":null,"docs":" Create a new class with no ranges.\n","sig":null,"attributes":[{"value":"/ Create a new class with no ranges.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":356576,"byte_end":356614,"line_start":1096,"line_end":1096,"column_start":5,"column_end":43}}]},{"kind":"Method","id":{"krate":0,"index":1106},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":356737,"byte_end":356741,"line_start":1102,"line_end":1102,"column_start":12,"column_end":16},"name":"push","qualname":"<ClassBytes>::push","value":"fn push<'_>(&'_ mut Self, ClassBytesRange)","parent":null,"children":[],"decl_id":null,"docs":" Add a new range to this set.\n","sig":null,"attributes":[{"value":"/ Add a new range to this set.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":356693,"byte_end":356725,"line_start":1101,"line_end":1101,"column_start":5,"column_end":37}}]},{"kind":"Method","id":{"krate":0,"index":1107},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":356948,"byte_end":356952,"line_start":1109,"line_end":1109,"column_start":12,"column_end":16},"name":"iter","qualname":"<ClassBytes>::iter","value":"fn iter<'_>(&'_ Self) -> ClassBytesIter","parent":null,"children":[],"decl_id":null,"docs":" Return an iterator over all ranges in this class.","sig":null,"attributes":[{"value":"/ Return an iterator over all ranges in this class.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":356820,"byte_end":356873,"line_start":1106,"line_end":1106,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":356878,"byte_end":356881,"line_start":1107,"line_end":1107,"column_start":5,"column_end":8}},{"value":"/ The iterator yields ranges in ascending order.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":356886,"byte_end":356936,"line_start":1108,"line_end":1108,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":1108},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":357091,"byte_end":357097,"line_start":1114,"line_end":1114,"column_start":12,"column_end":18},"name":"ranges","qualname":"<ClassBytes>::ranges","value":"fn ranges<'_>(&'_ Self) -> &'_ [ClassBytesRange]","parent":null,"children":[],"decl_id":null,"docs":" Return the underlying ranges as a slice.\n","sig":null,"attributes":[{"value":"/ Return the underlying ranges as a slice.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":357035,"byte_end":357079,"line_start":1113,"line_end":1113,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":1109},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":357562,"byte_end":357578,"line_start":1125,"line_end":1125,"column_start":12,"column_end":28},"name":"case_fold_simple","qualname":"<ClassBytes>::case_fold_simple","value":"fn case_fold_simple<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Expand this character class such that it contains all case folded\n characters. For example, if this class consists of the range `a-z`,\n then applying case folding will result in the class containing both the\n ranges `a-z` and `A-Z`.","sig":null,"attributes":[{"value":"/ Expand this character class such that it contains all case folded","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":357169,"byte_end":357238,"line_start":1118,"line_end":1118,"column_start":5,"column_end":74}},{"value":"/ characters. For example, if this class consists of the range `a-z`,","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":357243,"byte_end":357314,"line_start":1119,"line_end":1119,"column_start":5,"column_end":76}},{"value":"/ then applying case folding will result in the class containing both the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":357319,"byte_end":357394,"line_start":1120,"line_end":1120,"column_start":5,"column_end":80}},{"value":"/ ranges `a-z` and `A-Z`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":357399,"byte_end":357426,"line_start":1121,"line_end":1121,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":357431,"byte_end":357434,"line_start":1122,"line_end":1122,"column_start":5,"column_end":8}},{"value":"/ Note that this only applies ASCII case folding, which is limited to the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":357439,"byte_end":357514,"line_start":1123,"line_end":1123,"column_start":5,"column_end":80}},{"value":"/ characters `a-z` and `A-Z`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":357519,"byte_end":357550,"line_start":1124,"line_end":1124,"column_start":5,"column_end":36}}]},{"kind":"Method","id":{"krate":0,"index":1110},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":357853,"byte_end":357859,"line_start":1133,"line_end":1133,"column_start":12,"column_end":18},"name":"negate","qualname":"<ClassBytes>::negate","value":"fn negate<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Negate this byte class.","sig":null,"attributes":[{"value":"/ Negate this byte class.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":357681,"byte_end":357708,"line_start":1129,"line_end":1129,"column_start":5,"column_end":32}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":357713,"byte_end":357716,"line_start":1130,"line_end":1130,"column_start":5,"column_end":8}},{"value":"/ For all `b` where `b` is a any byte, if `b` was in this set, then it","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":357721,"byte_end":357793,"line_start":1131,"line_end":1131,"column_start":5,"column_end":77}},{"value":"/ will not be in this set after negation.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":357798,"byte_end":357841,"line_start":1132,"line_end":1132,"column_start":5,"column_end":48}}]},{"kind":"Method","id":{"krate":0,"index":1111},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":357985,"byte_end":357990,"line_start":1138,"line_end":1138,"column_start":12,"column_end":17},"name":"union","qualname":"<ClassBytes>::union","value":"fn union<'_, '_>(&'_ mut Self, &'_ ClassBytes)","parent":null,"children":[],"decl_id":null,"docs":" Union this byte class with the given byte class, in place.\n","sig":null,"attributes":[{"value":"/ Union this byte class with the given byte class, in place.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":357911,"byte_end":357973,"line_start":1137,"line_end":1137,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1112},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":358149,"byte_end":358158,"line_start":1143,"line_end":1143,"column_start":12,"column_end":21},"name":"intersect","qualname":"<ClassBytes>::intersect","value":"fn intersect<'_, '_>(&'_ mut Self, &'_ ClassBytes)","parent":null,"children":[],"decl_id":null,"docs":" Intersect this byte class with the given byte class, in place.\n","sig":null,"attributes":[{"value":"/ Intersect this byte class with the given byte class, in place.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":358071,"byte_end":358137,"line_start":1142,"line_end":1142,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1113},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":358320,"byte_end":358330,"line_start":1148,"line_end":1148,"column_start":12,"column_end":22},"name":"difference","qualname":"<ClassBytes>::difference","value":"fn difference<'_, '_>(&'_ mut Self, &'_ ClassBytes)","parent":null,"children":[],"decl_id":null,"docs":" Subtract the given byte class from this byte class, in place.\n","sig":null,"attributes":[{"value":"/ Subtract the given byte class from this byte class, in place.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":358243,"byte_end":358308,"line_start":1147,"line_end":1147,"column_start":5,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1114},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":358879,"byte_end":358899,"line_start":1159,"line_end":1159,"column_start":12,"column_end":32},"name":"symmetric_difference","qualname":"<ClassBytes>::symmetric_difference","value":"fn symmetric_difference<'_, '_>(&'_ mut Self, &'_ ClassBytes)","parent":null,"children":[],"decl_id":null,"docs":" Compute the symmetric difference of the given byte classes, in place.","sig":null,"attributes":[{"value":"/ Compute the symmetric difference of the given byte classes, in place.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":358416,"byte_end":358489,"line_start":1152,"line_end":1152,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":358494,"byte_end":358497,"line_start":1153,"line_end":1153,"column_start":5,"column_end":8}},{"value":"/ This computes the symmetric difference of two byte classes. This","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":358502,"byte_end":358570,"line_start":1154,"line_end":1154,"column_start":5,"column_end":73}},{"value":"/ removes all elements in this class that are also in the given class,","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":358575,"byte_end":358647,"line_start":1155,"line_end":1155,"column_start":5,"column_end":77}},{"value":"/ but all adds all elements from the given class that aren't in this","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":358652,"byte_end":358722,"line_start":1156,"line_end":1156,"column_start":5,"column_end":75}},{"value":"/ class. That is, the class will contain all elements in either class,","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":358727,"byte_end":358799,"line_start":1157,"line_end":1157,"column_start":5,"column_end":77}},{"value":"/ but will not contain any elements that are in both classes.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":358804,"byte_end":358867,"line_start":1158,"line_end":1158,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":1115},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":359214,"byte_end":359226,"line_start":1166,"line_end":1166,"column_start":12,"column_end":24},"name":"is_all_ascii","qualname":"<ClassBytes>::is_all_ascii","value":"fn is_all_ascii<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if this character class will either match\n nothing or only ASCII bytes. Stated differently, this returns false\n if and only if this class contains a non-ASCII byte.\n","sig":null,"attributes":[{"value":"/ Returns true if and only if this character class will either match","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":358995,"byte_end":359065,"line_start":1163,"line_end":1163,"column_start":5,"column_end":75}},{"value":"/ nothing or only ASCII bytes. Stated differently, this returns false","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":359070,"byte_end":359141,"line_start":1164,"line_end":1164,"column_start":5,"column_end":76}},{"value":"/ if and only if this class contains a non-ASCII byte.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":359146,"byte_end":359202,"line_start":1165,"line_end":1165,"column_start":5,"column_end":61}}]},{"kind":"Struct","id":{"krate":0,"index":3220},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":359482,"byte_end":359496,"line_start":1175,"line_end":1175,"column_start":12,"column_end":26},"name":"ClassBytesIter","qualname":"::hir::ClassBytesIter","value":"","parent":null,"children":[],"decl_id":null,"docs":" An iterator over all ranges in a byte character class.","sig":null,"attributes":[{"value":"/ An iterator over all ranges in a byte character class.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":359321,"byte_end":359379,"line_start":1171,"line_end":1171,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":359380,"byte_end":359383,"line_start":1172,"line_end":1172,"column_start":1,"column_end":4}},{"value":"/ The lifetime `'a` refers to the lifetime of the underlying class.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":359384,"byte_end":359453,"line_start":1173,"line_end":1173,"column_start":1,"column_end":70}}]},{"kind":"Method","id":{"krate":0,"index":1120},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":359629,"byte_end":359633,"line_start":1180,"line_end":1180,"column_start":8,"column_end":12},"name":"next","qualname":"<ClassBytesIter as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<&'a ClassBytesRange>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8598},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3227},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":359949,"byte_end":359964,"line_start":1190,"line_end":1190,"column_start":12,"column_end":27},"name":"ClassBytesRange","qualname":"::hir::ClassBytesRange","value":"ClassBytesRange {  }","parent":null,"children":[{"krate":0,"index":3228},{"krate":0,"index":3229}],"decl_id":null,"docs":" A single range of characters represented by arbitrary bytes.","sig":null,"attributes":[{"value":"/ A single range of characters represented by arbitrary bytes.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":359709,"byte_end":359773,"line_start":1185,"line_end":1185,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":359774,"byte_end":359777,"line_start":1186,"line_end":1186,"column_start":1,"column_end":4}},{"value":"/ The range is closed. That is, the start and end of the range are included","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":359778,"byte_end":359855,"line_start":1187,"line_end":1187,"column_start":1,"column_end":78}},{"value":"/ in the range.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":359856,"byte_end":359873,"line_start":1188,"line_end":1188,"column_start":1,"column_end":18}}]},{"kind":"Method","id":{"krate":0,"index":1129},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":361523,"byte_end":361526,"line_start":1243,"line_end":1243,"column_start":12,"column_end":15},"name":"new","qualname":"<ClassBytesRange>::new","value":"fn new(u8, u8) -> ClassBytesRange","parent":null,"children":[],"decl_id":null,"docs":" Create a new byte range for a character class.","sig":null,"attributes":[{"value":"/ Create a new byte range for a character class.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":361307,"byte_end":361357,"line_start":1239,"line_end":1239,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":361362,"byte_end":361365,"line_start":1240,"line_end":1240,"column_start":5,"column_end":8}},{"value":"/ The returned range is always in a canonical form. That is, the range","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":361370,"byte_end":361442,"line_start":1241,"line_end":1241,"column_start":5,"column_end":77}},{"value":"/ returned always satisfies the invariant that `start <= end`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":361447,"byte_end":361511,"line_start":1242,"line_end":1242,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1130},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":361769,"byte_end":361774,"line_start":1251,"line_end":1251,"column_start":12,"column_end":17},"name":"start","qualname":"<ClassBytesRange>::start","value":"fn start<'_>(&'_ Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Return the start of this range.","sig":null,"attributes":[{"value":"/ Return the start of this range.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":361623,"byte_end":361658,"line_start":1247,"line_end":1247,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":361663,"byte_end":361666,"line_start":1248,"line_end":1248,"column_start":5,"column_end":8}},{"value":"/ The start of a range is always less than or equal to the end of the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":361671,"byte_end":361742,"line_start":1249,"line_end":1249,"column_start":5,"column_end":76}},{"value":"/ range.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":361747,"byte_end":361757,"line_start":1250,"line_end":1250,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1131},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":361967,"byte_end":361970,"line_start":1259,"line_end":1259,"column_start":12,"column_end":15},"name":"end","qualname":"<ClassBytesRange>::end","value":"fn end<'_>(&'_ Self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Return the end of this range.","sig":null,"attributes":[{"value":"/ Return the end of this range.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":361820,"byte_end":361853,"line_start":1255,"line_end":1255,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":361858,"byte_end":361861,"line_start":1256,"line_end":1256,"column_start":5,"column_end":8}},{"value":"/ The end of a range is always greater than or equal to the start of the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":361866,"byte_end":361940,"line_start":1257,"line_end":1257,"column_start":5,"column_end":79}},{"value":"/ range.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":361945,"byte_end":361955,"line_start":1258,"line_end":1258,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1133},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":362057,"byte_end":362060,"line_start":1265,"line_end":1265,"column_start":8,"column_end":11},"name":"fmt","qualname":"<ClassBytesRange as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3247},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":362917,"byte_end":362926,"line_start":1289,"line_end":1289,"column_start":5,"column_end":14},"name":"StartLine","qualname":"::hir::Anchor::StartLine","value":"Anchor::StartLine","parent":{"krate":0,"index":3246},"children":[],"decl_id":null,"docs":" Match the beginning of a line or the beginning of text. Specifically,\n this matches at the starting position of the input, or at the position\n immediately following a `\\n` character.\n","sig":null,"attributes":[{"value":"/ Match the beginning of a line or the beginning of text. Specifically,","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":362712,"byte_end":362785,"line_start":1286,"line_end":1286,"column_start":5,"column_end":78}},{"value":"/ this matches at the starting position of the input, or at the position","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":362790,"byte_end":362864,"line_start":1287,"line_end":1287,"column_start":5,"column_end":79}},{"value":"/ immediately following a `\\n` character.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":362869,"byte_end":362912,"line_start":1288,"line_end":1288,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3249},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":363120,"byte_end":363127,"line_start":1293,"line_end":1293,"column_start":5,"column_end":12},"name":"EndLine","qualname":"::hir::Anchor::EndLine","value":"Anchor::EndLine","parent":{"krate":0,"index":3246},"children":[],"decl_id":null,"docs":" Match the end of a line or the end of text. Specifically,\n this matches at the end position of the input, or at the position\n immediately preceding a `\\n` character.\n","sig":null,"attributes":[{"value":"/ Match the end of a line or the end of text. Specifically,","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":362932,"byte_end":362993,"line_start":1290,"line_end":1290,"column_start":5,"column_end":66}},{"value":"/ this matches at the end position of the input, or at the position","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":362998,"byte_end":363067,"line_start":1291,"line_end":1291,"column_start":5,"column_end":74}},{"value":"/ immediately preceding a `\\n` character.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":363072,"byte_end":363115,"line_start":1292,"line_end":1292,"column_start":5,"column_end":48}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3251},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":363244,"byte_end":363253,"line_start":1296,"line_end":1296,"column_start":5,"column_end":14},"name":"StartText","qualname":"::hir::Anchor::StartText","value":"Anchor::StartText","parent":{"krate":0,"index":3246},"children":[],"decl_id":null,"docs":" Match the beginning of text. Specifically, this matches at the starting\n position of the input.\n","sig":null,"attributes":[{"value":"/ Match the beginning of text. Specifically, this matches at the starting","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":363133,"byte_end":363208,"line_start":1294,"line_end":1294,"column_start":5,"column_end":80}},{"value":"/ position of the input.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":363213,"byte_end":363239,"line_start":1295,"line_end":1295,"column_start":5,"column_end":31}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3253},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":363362,"byte_end":363369,"line_start":1299,"line_end":1299,"column_start":5,"column_end":12},"name":"EndText","qualname":"::hir::Anchor::EndText","value":"Anchor::EndText","parent":{"krate":0,"index":3246},"children":[],"decl_id":null,"docs":" Match the end of text. Specifically, this matches at the ending\n position of the input.\n","sig":null,"attributes":[{"value":"/ Match the end of text. Specifically, this matches at the ending","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":363259,"byte_end":363326,"line_start":1297,"line_end":1297,"column_start":5,"column_end":72}},{"value":"/ position of the input.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":363331,"byte_end":363357,"line_start":1298,"line_end":1298,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":3246},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":362699,"byte_end":362705,"line_start":1285,"line_end":1285,"column_start":10,"column_end":16},"name":"Anchor","qualname":"::hir::Anchor","value":"enum Anchor { StartLine, EndLine, StartText, EndText, }","parent":null,"children":[{"krate":0,"index":3247},{"krate":0,"index":3249},{"krate":0,"index":3251},{"krate":0,"index":3253}],"decl_id":null,"docs":" The high-level intermediate representation for an anchor assertion.","sig":null,"attributes":[{"value":"/ The high-level intermediate representation for an anchor assertion.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":362520,"byte_end":362591,"line_start":1281,"line_end":1281,"column_start":1,"column_end":72}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":362592,"byte_end":362595,"line_start":1282,"line_end":1282,"column_start":1,"column_end":4}},{"value":"/ A matching anchor assertion is always zero-length.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":362596,"byte_end":362650,"line_start":1283,"line_end":1283,"column_start":1,"column_end":55}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3266},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":363810,"byte_end":363817,"line_start":1310,"line_end":1310,"column_start":5,"column_end":12},"name":"Unicode","qualname":"::hir::WordBoundary::Unicode","value":"WordBoundary::Unicode","parent":{"krate":0,"index":3265},"children":[],"decl_id":null,"docs":" Match a Unicode-aware word boundary. That is, this matches a position\n where the left adjacent character and right adjacent character\n correspond to a word and non-word or a non-word and word character.\n","sig":null,"attributes":[{"value":"/ Match a Unicode-aware word boundary. That is, this matches a position","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":363585,"byte_end":363658,"line_start":1307,"line_end":1307,"column_start":5,"column_end":78}},{"value":"/ where the left adjacent character and right adjacent character","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":363663,"byte_end":363729,"line_start":1308,"line_end":1308,"column_start":5,"column_end":71}},{"value":"/ correspond to a word and non-word or a non-word and word character.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":363734,"byte_end":363805,"line_start":1309,"line_end":1309,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3268},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":363882,"byte_end":363895,"line_start":1312,"line_end":1312,"column_start":5,"column_end":18},"name":"UnicodeNegate","qualname":"::hir::WordBoundary::UnicodeNegate","value":"WordBoundary::UnicodeNegate","parent":{"krate":0,"index":3265},"children":[],"decl_id":null,"docs":" Match a Unicode-aware negation of a word boundary.\n","sig":null,"attributes":[{"value":"/ Match a Unicode-aware negation of a word boundary.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":363823,"byte_end":363877,"line_start":1311,"line_end":1311,"column_start":5,"column_end":59}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3270},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":364124,"byte_end":364129,"line_start":1316,"line_end":1316,"column_start":5,"column_end":10},"name":"Ascii","qualname":"::hir::WordBoundary::Ascii","value":"WordBoundary::Ascii","parent":{"krate":0,"index":3265},"children":[],"decl_id":null,"docs":" Match an ASCII-only word boundary. That is, this matches a position\n where the left adjacent character and right adjacent character\n correspond to a word and non-word or a non-word and word character.\n","sig":null,"attributes":[{"value":"/ Match an ASCII-only word boundary. That is, this matches a position","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":363901,"byte_end":363972,"line_start":1313,"line_end":1313,"column_start":5,"column_end":76}},{"value":"/ where the left adjacent character and right adjacent character","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":363977,"byte_end":364043,"line_start":1314,"line_end":1314,"column_start":5,"column_end":71}},{"value":"/ correspond to a word and non-word or a non-word and word character.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":364048,"byte_end":364119,"line_start":1315,"line_end":1315,"column_start":5,"column_end":76}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3272},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":364192,"byte_end":364203,"line_start":1318,"line_end":1318,"column_start":5,"column_end":16},"name":"AsciiNegate","qualname":"::hir::WordBoundary::AsciiNegate","value":"WordBoundary::AsciiNegate","parent":{"krate":0,"index":3265},"children":[],"decl_id":null,"docs":" Match an ASCII-only negation of a word boundary.\n","sig":null,"attributes":[{"value":"/ Match an ASCII-only negation of a word boundary.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":364135,"byte_end":364187,"line_start":1317,"line_end":1317,"column_start":5,"column_end":57}}]},{"kind":"Enum","id":{"krate":0,"index":3265},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":363566,"byte_end":363578,"line_start":1306,"line_end":1306,"column_start":10,"column_end":22},"name":"WordBoundary","qualname":"::hir::WordBoundary","value":"enum WordBoundary { Unicode, UnicodeNegate, Ascii, AsciiNegate, }","parent":null,"children":[{"krate":0,"index":3266},{"krate":0,"index":3268},{"krate":0,"index":3270},{"krate":0,"index":3272}],"decl_id":null,"docs":" The high-level intermediate representation for a word-boundary assertion.","sig":null,"attributes":[{"value":"/ The high-level intermediate representation for a word-boundary assertion.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":363374,"byte_end":363451,"line_start":1302,"line_end":1302,"column_start":1,"column_end":78}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":363452,"byte_end":363455,"line_start":1303,"line_end":1303,"column_start":1,"column_end":4}},{"value":"/ A matching word boundary assertion is always zero-length.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":363456,"byte_end":363517,"line_start":1304,"line_end":1304,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1135},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":364316,"byte_end":364326,"line_start":1323,"line_end":1323,"column_start":12,"column_end":22},"name":"is_negated","qualname":"<WordBoundary>::is_negated","value":"fn is_negated<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if this word boundary assertion is negated.\n","sig":null,"attributes":[{"value":"/ Returns true if and only if this word boundary assertion is negated.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":364232,"byte_end":364304,"line_start":1322,"line_end":1322,"column_start":5,"column_end":77}}]},{"kind":"Struct","id":{"krate":0,"index":3284},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":364850,"byte_end":364855,"line_start":1339,"line_end":1339,"column_start":12,"column_end":17},"name":"Group","qualname":"::hir::Group","value":"Group { kind, hir }","parent":null,"children":[{"krate":0,"index":3285},{"krate":0,"index":3286}],"decl_id":null,"docs":" The high-level intermediate representation for a group.","sig":null,"attributes":[{"value":"/ The high-level intermediate representation for a group.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":364528,"byte_end":364587,"line_start":1331,"line_end":1331,"column_start":1,"column_end":60}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":364588,"byte_end":364591,"line_start":1332,"line_end":1332,"column_start":1,"column_end":4}},{"value":"/ This represents one of three possible group types:","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":364592,"byte_end":364646,"line_start":1333,"line_end":1333,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":364647,"byte_end":364650,"line_start":1334,"line_end":1334,"column_start":1,"column_end":4}},{"value":"/ 1. A non-capturing group (e.g., `(?:expr)`).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":364651,"byte_end":364699,"line_start":1335,"line_end":1335,"column_start":1,"column_end":49}},{"value":"/ 2. A capturing group (e.g., `(expr)`).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":364700,"byte_end":364742,"line_start":1336,"line_end":1336,"column_start":1,"column_end":43}},{"value":"/ 3. A named capturing group (e.g., `(?P<name>expr)`).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":364743,"byte_end":364799,"line_start":1337,"line_end":1337,"column_start":1,"column_end":57}}]},{"kind":"Field","id":{"krate":0,"index":3285},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":365029,"byte_end":365033,"line_start":1343,"line_end":1343,"column_start":9,"column_end":13},"name":"kind","qualname":"::hir::Group::kind","value":"hir::GroupKind","parent":{"krate":0,"index":3284},"children":[],"decl_id":null,"docs":" The kind of this group. If it is a capturing group, then the kind\n contains the capture group index (and the name, if it is a named\n group).\n","sig":null,"attributes":[{"value":"/ The kind of this group. If it is a capturing group, then the kind","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":364862,"byte_end":364931,"line_start":1340,"line_end":1340,"column_start":5,"column_end":74}},{"value":"/ contains the capture group index (and the name, if it is a named","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":364936,"byte_end":365004,"line_start":1341,"line_end":1341,"column_start":5,"column_end":73}},{"value":"/ group).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":365009,"byte_end":365020,"line_start":1342,"line_end":1342,"column_start":5,"column_end":16}}]},{"kind":"Field","id":{"krate":0,"index":3286},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":365125,"byte_end":365128,"line_start":1345,"line_end":1345,"column_start":9,"column_end":12},"name":"hir","qualname":"::hir::Group::hir","value":"std::boxed::Box<hir::Hir>","parent":{"krate":0,"index":3284},"children":[],"decl_id":null,"docs":" The expression inside the capturing group, which may be empty.\n","sig":null,"attributes":[{"value":"/ The expression inside the capturing group, which may be empty.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":365050,"byte_end":365116,"line_start":1344,"line_end":1344,"column_start":5,"column_end":71}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3299},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":365333,"byte_end":365345,"line_start":1354,"line_end":1354,"column_start":5,"column_end":17},"name":"CaptureIndex","qualname":"::hir::GroupKind::CaptureIndex","value":"GroupKind::CaptureIndex(u32)","parent":{"krate":0,"index":3298},"children":[],"decl_id":null,"docs":" A normal unnamed capturing group.","sig":null,"attributes":[{"value":"/ A normal unnamed capturing group.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":365230,"byte_end":365267,"line_start":1351,"line_end":1351,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":365272,"byte_end":365275,"line_start":1352,"line_end":1352,"column_start":5,"column_end":8}},{"value":"/ The value is the capture index of the group.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":365280,"byte_end":365328,"line_start":1353,"line_end":1353,"column_start":5,"column_end":53}}]},{"kind":"Field","id":{"krate":0,"index":3301},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":365346,"byte_end":365349,"line_start":1354,"line_end":1354,"column_start":18,"column_end":21},"name":"0","qualname":"::hir::GroupKind::CaptureIndex::0","value":"u32","parent":{"krate":0,"index":3299},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"StructVariant","id":{"krate":0,"index":3302},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":365389,"byte_end":365400,"line_start":1356,"line_end":1356,"column_start":5,"column_end":16},"name":"CaptureName","qualname":"::hir::GroupKind::CaptureName","value":"GroupKind::CaptureName { name, index }","parent":{"krate":0,"index":3298},"children":[],"decl_id":null,"docs":" A named capturing group.\n","sig":null,"attributes":[{"value":"/ A named capturing group.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":365356,"byte_end":365384,"line_start":1355,"line_end":1355,"column_start":5,"column_end":33}}]},{"kind":"Field","id":{"krate":0,"index":3303},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":365446,"byte_end":365450,"line_start":1358,"line_end":1358,"column_start":9,"column_end":13},"name":"name","qualname":"::hir::GroupKind::CaptureName::name","value":"std::string::String","parent":{"krate":0,"index":3302},"children":[],"decl_id":null,"docs":" The name of the group.\n","sig":null,"attributes":[{"value":"/ The name of the group.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":365411,"byte_end":365437,"line_start":1357,"line_end":1357,"column_start":9,"column_end":35}}]},{"kind":"Field","id":{"krate":0,"index":3304},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":365512,"byte_end":365517,"line_start":1360,"line_end":1360,"column_start":9,"column_end":14},"name":"index","qualname":"::hir::GroupKind::CaptureName::index","value":"u32","parent":{"krate":0,"index":3302},"children":[],"decl_id":null,"docs":" The capture index of the group.\n","sig":null,"attributes":[{"value":"/ The capture index of the group.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":365468,"byte_end":365503,"line_start":1359,"line_end":1359,"column_start":9,"column_end":44}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3305},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":365566,"byte_end":365578,"line_start":1363,"line_end":1363,"column_start":5,"column_end":17},"name":"NonCapturing","qualname":"::hir::GroupKind::NonCapturing","value":"GroupKind::NonCapturing","parent":{"krate":0,"index":3298},"children":[],"decl_id":null,"docs":" A non-capturing group.\n","sig":null,"attributes":[{"value":"/ A non-capturing group.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":365535,"byte_end":365561,"line_start":1362,"line_end":1362,"column_start":5,"column_end":31}}]},{"kind":"Enum","id":{"krate":0,"index":3298},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":365214,"byte_end":365223,"line_start":1350,"line_end":1350,"column_start":10,"column_end":19},"name":"GroupKind","qualname":"::hir::GroupKind","value":"enum GroupKind {\n    CaptureIndex(u32),\n    CaptureName {\n            name: String,\n            index: u32,\n        },\n    NonCapturing,\n}","parent":null,"children":[{"krate":0,"index":3299},{"krate":0,"index":3302},{"krate":0,"index":3305}],"decl_id":null,"docs":" The kind of group.\n","sig":null,"attributes":[{"value":"/ The kind of group.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":365143,"byte_end":365165,"line_start":1348,"line_end":1348,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":3318},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":365795,"byte_end":365805,"line_start":1371,"line_end":1371,"column_start":12,"column_end":22},"name":"Repetition","qualname":"::hir::Repetition","value":"Repetition { kind, greedy, hir }","parent":null,"children":[{"krate":0,"index":3319},{"krate":0,"index":3320},{"krate":0,"index":3321}],"decl_id":null,"docs":" The high-level intermediate representation of a repetition operator.","sig":null,"attributes":[{"value":"/ The high-level intermediate representation of a repetition operator.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":365583,"byte_end":365655,"line_start":1366,"line_end":1366,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":365656,"byte_end":365659,"line_start":1367,"line_end":1367,"column_start":1,"column_end":4}},{"value":"/ A repetition operator permits the repetition of an arbitrary","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":365660,"byte_end":365724,"line_start":1368,"line_end":1368,"column_start":1,"column_end":65}},{"value":"/ sub-expression.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":365725,"byte_end":365744,"line_start":1369,"line_end":1369,"column_start":1,"column_end":20}}]},{"kind":"Field","id":{"krate":0,"index":3319},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":365862,"byte_end":365866,"line_start":1373,"line_end":1373,"column_start":9,"column_end":13},"name":"kind","qualname":"::hir::Repetition::kind","value":"hir::RepetitionKind","parent":{"krate":0,"index":3318},"children":[],"decl_id":null,"docs":" The kind of this repetition operator.\n","sig":null,"attributes":[{"value":"/ The kind of this repetition operator.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":365812,"byte_end":365853,"line_start":1372,"line_end":1372,"column_start":5,"column_end":46}}]},{"kind":"Field","id":{"krate":0,"index":3320},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":366305,"byte_end":366311,"line_start":1381,"line_end":1381,"column_start":9,"column_end":15},"name":"greedy","qualname":"::hir::Repetition::greedy","value":"bool","parent":{"krate":0,"index":3318},"children":[],"decl_id":null,"docs":" Whether this repetition operator is greedy or not. A greedy operator\n will match as much as it can. A non-greedy operator will match as\n little as it can.","sig":null,"attributes":[{"value":"/ Whether this repetition operator is greedy or not. A greedy operator","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":365888,"byte_end":365960,"line_start":1374,"line_end":1374,"column_start":5,"column_end":77}},{"value":"/ will match as much as it can. A non-greedy operator will match as","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":365965,"byte_end":366034,"line_start":1375,"line_end":1375,"column_start":5,"column_end":74}},{"value":"/ little as it can.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":366039,"byte_end":366060,"line_start":1376,"line_end":1376,"column_start":5,"column_end":26}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":366065,"byte_end":366068,"line_start":1377,"line_end":1377,"column_start":5,"column_end":8}},{"value":"/ Typically, operators are greedy by default and are only non-greedy when","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":366073,"byte_end":366148,"line_start":1378,"line_end":1378,"column_start":5,"column_end":80}},{"value":"/ a `?` suffix is used, e.g., `(expr)*` is greedy while `(expr)*?` is","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":366153,"byte_end":366224,"line_start":1379,"line_end":1379,"column_start":5,"column_end":76}},{"value":"/ not. However, this can be inverted via the `U` \"ungreedy\" flag.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":366229,"byte_end":366296,"line_start":1380,"line_end":1380,"column_start":5,"column_end":72}}]},{"kind":"Field","id":{"krate":0,"index":3321},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":366366,"byte_end":366369,"line_start":1383,"line_end":1383,"column_start":9,"column_end":12},"name":"hir","qualname":"::hir::Repetition::hir","value":"std::boxed::Box<hir::Hir>","parent":{"krate":0,"index":3318},"children":[],"decl_id":null,"docs":" The expression being repeated.\n","sig":null,"attributes":[{"value":"/ The expression being repeated.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":366323,"byte_end":366357,"line_start":1382,"line_end":1382,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1137},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":366935,"byte_end":366949,"line_start":1396,"line_end":1396,"column_start":12,"column_end":26},"name":"is_match_empty","qualname":"<Repetition>::is_match_empty","value":"fn is_match_empty<'_>(&'_ Self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if this repetition operator makes it possible\n to match the empty string.","sig":null,"attributes":[{"value":"/ Returns true if and only if this repetition operator makes it possible","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":366406,"byte_end":366480,"line_start":1387,"line_end":1387,"column_start":5,"column_end":79}},{"value":"/ to match the empty string.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":366485,"byte_end":366515,"line_start":1388,"line_end":1388,"column_start":5,"column_end":35}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":366520,"byte_end":366523,"line_start":1389,"line_end":1389,"column_start":5,"column_end":8}},{"value":"/ Note that this is not defined inductively. For example, while `a*`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":366528,"byte_end":366598,"line_start":1390,"line_end":1390,"column_start":5,"column_end":75}},{"value":"/ will report `true`, `()+` will not, even though `()` matches the empty","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":366603,"byte_end":366677,"line_start":1391,"line_end":1391,"column_start":5,"column_end":79}},{"value":"/ string and one or more occurrences of something that matches the empty","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":366682,"byte_end":366756,"line_start":1392,"line_end":1392,"column_start":5,"column_end":79}},{"value":"/ string will always match the empty string. In order to get the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":366761,"byte_end":366827,"line_start":1393,"line_end":1393,"column_start":5,"column_end":71}},{"value":"/ inductive definition, see the corresponding method on","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":366832,"byte_end":366889,"line_start":1394,"line_end":1394,"column_start":5,"column_end":62}},{"value":"/ [`Hir`](struct.Hir.html).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":366894,"byte_end":366923,"line_start":1395,"line_end":1395,"column_start":5,"column_end":34}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3334},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":367540,"byte_end":367549,"line_start":1412,"line_end":1412,"column_start":5,"column_end":14},"name":"ZeroOrOne","qualname":"::hir::RepetitionKind::ZeroOrOne","value":"RepetitionKind::ZeroOrOne","parent":{"krate":0,"index":3333},"children":[],"decl_id":null,"docs":" Matches a sub-expression zero or one times.\n","sig":null,"attributes":[{"value":"/ Matches a sub-expression zero or one times.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":367488,"byte_end":367535,"line_start":1411,"line_end":1411,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3336},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":367608,"byte_end":367618,"line_start":1414,"line_end":1414,"column_start":5,"column_end":15},"name":"ZeroOrMore","qualname":"::hir::RepetitionKind::ZeroOrMore","value":"RepetitionKind::ZeroOrMore","parent":{"krate":0,"index":3333},"children":[],"decl_id":null,"docs":" Matches a sub-expression zero or more times.\n","sig":null,"attributes":[{"value":"/ Matches a sub-expression zero or more times.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":367555,"byte_end":367603,"line_start":1413,"line_end":1413,"column_start":5,"column_end":53}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3338},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":367676,"byte_end":367685,"line_start":1416,"line_end":1416,"column_start":5,"column_end":14},"name":"OneOrMore","qualname":"::hir::RepetitionKind::OneOrMore","value":"RepetitionKind::OneOrMore","parent":{"krate":0,"index":3333},"children":[],"decl_id":null,"docs":" Matches a sub-expression one or more times.\n","sig":null,"attributes":[{"value":"/ Matches a sub-expression one or more times.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":367624,"byte_end":367671,"line_start":1415,"line_end":1415,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3340},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":367757,"byte_end":367762,"line_start":1418,"line_end":1418,"column_start":5,"column_end":10},"name":"Range","qualname":"::hir::RepetitionKind::Range","value":"RepetitionKind::Range(RepetitionRange)","parent":{"krate":0,"index":3333},"children":[],"decl_id":null,"docs":" Matches a sub-expression within a bounded range of times.\n","sig":null,"attributes":[{"value":"/ Matches a sub-expression within a bounded range of times.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":367691,"byte_end":367752,"line_start":1417,"line_end":1417,"column_start":5,"column_end":66}}]},{"kind":"Field","id":{"krate":0,"index":3342},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":367763,"byte_end":367778,"line_start":1418,"line_end":1418,"column_start":11,"column_end":26},"name":"0","qualname":"::hir::RepetitionKind::Range::0","value":"hir::RepetitionRange","parent":{"krate":0,"index":3340},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3333},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":367467,"byte_end":367481,"line_start":1410,"line_end":1410,"column_start":10,"column_end":24},"name":"RepetitionKind","qualname":"::hir::RepetitionKind","value":"enum RepetitionKind {\n    ZeroOrOne,\n    ZeroOrMore,\n    OneOrMore,\n    Range(RepetitionRange),\n}","parent":null,"children":[{"krate":0,"index":3334},{"krate":0,"index":3336},{"krate":0,"index":3338},{"krate":0,"index":3340}],"decl_id":null,"docs":" The kind of a repetition operator.\n","sig":null,"attributes":[{"value":"/ The kind of a repetition operator.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":367380,"byte_end":367418,"line_start":1408,"line_end":1408,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3355},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":367959,"byte_end":367966,"line_start":1425,"line_end":1425,"column_start":5,"column_end":12},"name":"Exactly","qualname":"::hir::RepetitionRange::Exactly","value":"RepetitionRange::Exactly(u32)","parent":{"krate":0,"index":3354},"children":[],"decl_id":null,"docs":" Matches a sub-expression exactly this many times.\n","sig":null,"attributes":[{"value":"/ Matches a sub-expression exactly this many times.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":367901,"byte_end":367954,"line_start":1424,"line_end":1424,"column_start":5,"column_end":58}}]},{"kind":"Field","id":{"krate":0,"index":3357},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":367967,"byte_end":367970,"line_start":1425,"line_end":1425,"column_start":13,"column_end":16},"name":"0","qualname":"::hir::RepetitionRange::Exactly::0","value":"u32","parent":{"krate":0,"index":3355},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3358},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":368036,"byte_end":368043,"line_start":1427,"line_end":1427,"column_start":5,"column_end":12},"name":"AtLeast","qualname":"::hir::RepetitionRange::AtLeast","value":"RepetitionRange::AtLeast(u32)","parent":{"krate":0,"index":3354},"children":[],"decl_id":null,"docs":" Matches a sub-expression at least this many times.\n","sig":null,"attributes":[{"value":"/ Matches a sub-expression at least this many times.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":367977,"byte_end":368031,"line_start":1426,"line_end":1426,"column_start":5,"column_end":59}}]},{"kind":"Field","id":{"krate":0,"index":3360},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":368044,"byte_end":368047,"line_start":1427,"line_end":1427,"column_start":13,"column_end":16},"name":"0","qualname":"::hir::RepetitionRange::AtLeast::0","value":"u32","parent":{"krate":0,"index":3358},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3361},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":368129,"byte_end":368136,"line_start":1429,"line_end":1429,"column_start":5,"column_end":12},"name":"Bounded","qualname":"::hir::RepetitionRange::Bounded","value":"RepetitionRange::Bounded(u32, u32)","parent":{"krate":0,"index":3354},"children":[],"decl_id":null,"docs":" Matches a sub-expression at least `m` times and at most `n` times.\n","sig":null,"attributes":[{"value":"/ Matches a sub-expression at least `m` times and at most `n` times.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":368054,"byte_end":368124,"line_start":1428,"line_end":1428,"column_start":5,"column_end":75}}]},{"kind":"Field","id":{"krate":0,"index":3363},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":368137,"byte_end":368140,"line_start":1429,"line_end":1429,"column_start":13,"column_end":16},"name":"0","qualname":"::hir::RepetitionRange::Bounded::0","value":"u32","parent":{"krate":0,"index":3361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3364},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":368142,"byte_end":368145,"line_start":1429,"line_end":1429,"column_start":18,"column_end":21},"name":"1","qualname":"::hir::RepetitionRange::Bounded::1","value":"u32","parent":{"krate":0,"index":3361},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3354},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":367879,"byte_end":367894,"line_start":1423,"line_end":1423,"column_start":10,"column_end":25},"name":"RepetitionRange","qualname":"::hir::RepetitionRange","value":"enum RepetitionRange { Exactly(u32), AtLeast(u32), Bounded(u32, u32), }","parent":null,"children":[{"krate":0,"index":3355},{"krate":0,"index":3358},{"krate":0,"index":3361}],"decl_id":null,"docs":" The kind of a counted repetition operator.\n","sig":null,"attributes":[{"value":"/ The kind of a counted repetition operator.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":367784,"byte_end":367830,"line_start":1421,"line_end":1421,"column_start":1,"column_end":47}}]},{"kind":"Method","id":{"krate":0,"index":1139},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":368329,"byte_end":368333,"line_start":1435,"line_end":1435,"column_start":8,"column_end":12},"name":"drop","qualname":"<Hir as std::ops::Drop>::drop","value":"fn drop<'_>(&'_ mut Self)","parent":{"krate":2,"index":3510},"children":[],"decl_id":{"krate":2,"index":3511},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3411},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":602150,"byte_end":602163,"line_start":15,"line_end":15,"column_start":12,"column_end":25},"name":"ParserBuilder","qualname":"::parser::ParserBuilder","value":"ParserBuilder {  }","parent":null,"children":[{"krate":0,"index":3412},{"krate":0,"index":3413}],"decl_id":null,"docs":" A builder for a regular expression parser.","sig":null,"attributes":[{"value":"/ A builder for a regular expression parser.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":601771,"byte_end":601817,"line_start":6,"line_end":6,"column_start":1,"column_end":47}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":601818,"byte_end":601821,"line_start":7,"line_end":7,"column_start":1,"column_end":4}},{"value":"/ This builder permits modifying configuration options for the parser.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":601822,"byte_end":601894,"line_start":8,"line_end":8,"column_start":1,"column_end":73}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":601895,"byte_end":601898,"line_start":9,"line_end":9,"column_start":1,"column_end":4}},{"value":"/ This type combines the builder options for both the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":601899,"byte_end":601954,"line_start":10,"line_end":10,"column_start":1,"column_end":56}},{"value":"/ [AST `ParserBuilder`](ast/parse/struct.ParserBuilder.html)","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":601955,"byte_end":602017,"line_start":11,"line_end":11,"column_start":1,"column_end":63}},{"value":"/ and the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":602018,"byte_end":602029,"line_start":12,"line_end":12,"column_start":1,"column_end":12}},{"value":"/ [HIR `TranslatorBuilder`](hir/translate/struct.TranslatorBuilder.html).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":602030,"byte_end":602105,"line_start":13,"line_end":13,"column_start":1,"column_end":76}}]},{"kind":"Method","id":{"krate":0,"index":1157},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":602347,"byte_end":602350,"line_start":22,"line_end":22,"column_start":12,"column_end":15},"name":"new","qualname":"<ParserBuilder>::new","value":"fn new() -> ParserBuilder","parent":null,"children":[],"decl_id":null,"docs":" Create a new parser builder with a default configuration.\n","sig":null,"attributes":[{"value":"/ Create a new parser builder with a default configuration.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":602274,"byte_end":602335,"line_start":21,"line_end":21,"column_start":5,"column_end":66}}]},{"kind":"Method","id":{"krate":0,"index":1158},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":602494,"byte_end":602499,"line_start":27,"line_end":27,"column_start":12,"column_end":17},"name":"build","qualname":"<ParserBuilder>::build","value":"fn build<'_>(&'_ Self) -> Parser","parent":null,"children":[],"decl_id":null,"docs":" Build a parser from this configuration with the given pattern.\n","sig":null,"attributes":[{"value":"/ Build a parser from this configuration with the given pattern.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":602416,"byte_end":602482,"line_start":26,"line_end":26,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":1159},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":604062,"byte_end":604072,"line_start":56,"line_end":56,"column_start":12,"column_end":22},"name":"nest_limit","qualname":"<ParserBuilder>::nest_limit","value":"fn nest_limit<'_>(&'_ mut Self, u32) -> &'_ mut ParserBuilder","parent":null,"children":[],"decl_id":null,"docs":" Set the nesting limit for this parser.","sig":null,"attributes":[{"value":"/ Set the nesting limit for this parser.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":602594,"byte_end":602636,"line_start":31,"line_end":31,"column_start":5,"column_end":47}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":602641,"byte_end":602644,"line_start":32,"line_end":32,"column_start":5,"column_end":8}},{"value":"/ The nesting limit controls how deep the abstract syntax tree is allowed","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":602649,"byte_end":602724,"line_start":33,"line_end":33,"column_start":5,"column_end":80}},{"value":"/ to be. If the AST exceeds the given limit (e.g., with too many nested","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":602729,"byte_end":602802,"line_start":34,"line_end":34,"column_start":5,"column_end":78}},{"value":"/ groups), then an error is returned by the parser.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":602807,"byte_end":602860,"line_start":35,"line_end":35,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":602865,"byte_end":602868,"line_start":36,"line_end":36,"column_start":5,"column_end":8}},{"value":"/ The purpose of this limit is to act as a heuristic to prevent stack","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":602873,"byte_end":602944,"line_start":37,"line_end":37,"column_start":5,"column_end":76}},{"value":"/ overflow for consumers that do structural induction on an `Ast` using","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":602949,"byte_end":603022,"line_start":38,"line_end":38,"column_start":5,"column_end":78}},{"value":"/ explicit recursion. While this crate never does this (instead using","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":603027,"byte_end":603098,"line_start":39,"line_end":39,"column_start":5,"column_end":76}},{"value":"/ constant stack space and moving the call stack to the heap), other","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":603103,"byte_end":603173,"line_start":40,"line_end":40,"column_start":5,"column_end":75}},{"value":"/ crates may.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":603178,"byte_end":603193,"line_start":41,"line_end":41,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":603198,"byte_end":603201,"line_start":42,"line_end":42,"column_start":5,"column_end":8}},{"value":"/ This limit is not checked until the entire Ast is parsed. Therefore,","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":603206,"byte_end":603278,"line_start":43,"line_end":43,"column_start":5,"column_end":77}},{"value":"/ if callers want to put a limit on the amount of heap space used, then","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":603283,"byte_end":603356,"line_start":44,"line_end":44,"column_start":5,"column_end":78}},{"value":"/ they should impose a limit on the length, in bytes, of the concrete","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":603361,"byte_end":603432,"line_start":45,"line_end":45,"column_start":5,"column_end":76}},{"value":"/ pattern string. In particular, this is viable since this parser","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":603437,"byte_end":603504,"line_start":46,"line_end":46,"column_start":5,"column_end":72}},{"value":"/ implementation will limit itself to heap space proportional to the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":603509,"byte_end":603579,"line_start":47,"line_end":47,"column_start":5,"column_end":75}},{"value":"/ length of the pattern string.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":603584,"byte_end":603617,"line_start":48,"line_end":48,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":603622,"byte_end":603625,"line_start":49,"line_end":49,"column_start":5,"column_end":8}},{"value":"/ Note that a nest limit of `0` will return a nest limit error for most","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":603630,"byte_end":603703,"line_start":50,"line_end":50,"column_start":5,"column_end":78}},{"value":"/ patterns but not all. For example, a nest limit of `0` permits `a` but","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":603708,"byte_end":603782,"line_start":51,"line_end":51,"column_start":5,"column_end":79}},{"value":"/ not `ab`, since `ab` requires a concatenation, which results in a nest","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":603787,"byte_end":603861,"line_start":52,"line_end":52,"column_start":5,"column_end":79}},{"value":"/ depth of `1`. In general, a nest limit is not something that manifests","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":603866,"byte_end":603940,"line_start":53,"line_end":53,"column_start":5,"column_end":79}},{"value":"/ in an obvious way in the concrete syntax, therefore, it should not be","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":603945,"byte_end":604018,"line_start":54,"line_end":54,"column_start":5,"column_end":78}},{"value":"/ used in a granular way.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":604023,"byte_end":604050,"line_start":55,"line_end":55,"column_start":5,"column_end":32}}]},{"kind":"Method","id":{"krate":0,"index":1160},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":605015,"byte_end":605020,"line_start":76,"line_end":76,"column_start":12,"column_end":17},"name":"octal","qualname":"<ParserBuilder>::octal","value":"fn octal<'_>(&'_ mut Self, bool) -> &'_ mut ParserBuilder","parent":null,"children":[],"decl_id":null,"docs":" Whether to support octal syntax or not.","sig":null,"attributes":[{"value":"/ Whether to support octal syntax or not.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":604180,"byte_end":604223,"line_start":61,"line_end":61,"column_start":5,"column_end":48}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":604228,"byte_end":604231,"line_start":62,"line_end":62,"column_start":5,"column_end":8}},{"value":"/ Octal syntax is a little-known way of uttering Unicode codepoints in","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":604236,"byte_end":604308,"line_start":63,"line_end":63,"column_start":5,"column_end":77}},{"value":"/ a regular expression. For example, `a`, `\\x61`, `\\u0061` and","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":604313,"byte_end":604377,"line_start":64,"line_end":64,"column_start":5,"column_end":69}},{"value":"/ `\\141` are all equivalent regular expressions, where the last example","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":604382,"byte_end":604455,"line_start":65,"line_end":65,"column_start":5,"column_end":78}},{"value":"/ shows octal syntax.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":604460,"byte_end":604483,"line_start":66,"line_end":66,"column_start":5,"column_end":28}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":604488,"byte_end":604491,"line_start":67,"line_end":67,"column_start":5,"column_end":8}},{"value":"/ While supporting octal syntax isn't in and of itself a problem, it does","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":604496,"byte_end":604571,"line_start":68,"line_end":68,"column_start":5,"column_end":80}},{"value":"/ make good error messages harder. That is, in PCRE based regex engines,","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":604576,"byte_end":604650,"line_start":69,"line_end":69,"column_start":5,"column_end":79}},{"value":"/ syntax like `\\0` invokes a backreference, which is explicitly","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":604655,"byte_end":604720,"line_start":70,"line_end":70,"column_start":5,"column_end":70}},{"value":"/ unsupported in Rust's regex engine. However, many users expect it to","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":604725,"byte_end":604797,"line_start":71,"line_end":71,"column_start":5,"column_end":77}},{"value":"/ be supported. Therefore, when octal support is disabled, the error","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":604802,"byte_end":604872,"line_start":72,"line_end":72,"column_start":5,"column_end":75}},{"value":"/ message will explicitly mention that backreferences aren't supported.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":604877,"byte_end":604950,"line_start":73,"line_end":73,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":604955,"byte_end":604958,"line_start":74,"line_end":74,"column_start":5,"column_end":8}},{"value":"/ Octal syntax is disabled by default.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":604963,"byte_end":605003,"line_start":75,"line_end":75,"column_start":5,"column_end":45}}]},{"kind":"Method","id":{"krate":0,"index":1161},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":605768,"byte_end":605786,"line_start":92,"line_end":92,"column_start":12,"column_end":30},"name":"allow_invalid_utf8","qualname":"<ParserBuilder>::allow_invalid_utf8","value":"fn allow_invalid_utf8<'_>(&'_ mut Self, bool) -> &'_ mut ParserBuilder","parent":null,"children":[],"decl_id":null,"docs":" When enabled, the parser will permit the construction of a regular\n expression that may match invalid UTF-8.","sig":null,"attributes":[{"value":"/ When enabled, the parser will permit the construction of a regular","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":605120,"byte_end":605190,"line_start":81,"line_end":81,"column_start":5,"column_end":75}},{"value":"/ expression that may match invalid UTF-8.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":605195,"byte_end":605239,"line_start":82,"line_end":82,"column_start":5,"column_end":49}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":605244,"byte_end":605247,"line_start":83,"line_end":83,"column_start":5,"column_end":8}},{"value":"/ When disabled (the default), the parser is guaranteed to produce","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":605252,"byte_end":605320,"line_start":84,"line_end":84,"column_start":5,"column_end":73}},{"value":"/ an expression that will only ever match valid UTF-8 (otherwise, the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":605325,"byte_end":605396,"line_start":85,"line_end":85,"column_start":5,"column_end":76}},{"value":"/ parser will return an error).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":605401,"byte_end":605434,"line_start":86,"line_end":86,"column_start":5,"column_end":38}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":605439,"byte_end":605442,"line_start":87,"line_end":87,"column_start":5,"column_end":8}},{"value":"/ Perhaps surprisingly, when invalid UTF-8 isn't allowed, a negated ASCII","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":605447,"byte_end":605522,"line_start":88,"line_end":88,"column_start":5,"column_end":80}},{"value":"/ word boundary (uttered as `(?-u:\\B)` in the concrete syntax) will cause","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":605527,"byte_end":605602,"line_start":89,"line_end":89,"column_start":5,"column_end":80}},{"value":"/ the parser to return an error. Namely, a negated ASCII word boundary","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":605607,"byte_end":605679,"line_start":90,"line_end":90,"column_start":5,"column_end":77}},{"value":"/ can result in matching positions that aren't valid UTF-8 boundaries.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":605684,"byte_end":605756,"line_start":91,"line_end":91,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1162},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":606347,"byte_end":606364,"line_start":105,"line_end":105,"column_start":12,"column_end":29},"name":"ignore_whitespace","qualname":"<ParserBuilder>::ignore_whitespace","value":"fn ignore_whitespace<'_>(&'_ mut Self, bool) -> &'_ mut ParserBuilder","parent":null,"children":[],"decl_id":null,"docs":" Enable verbose mode in the regular expression.","sig":null,"attributes":[{"value":"/ Enable verbose mode in the regular expression.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":605899,"byte_end":605949,"line_start":97,"line_end":97,"column_start":5,"column_end":55}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":605954,"byte_end":605957,"line_start":98,"line_end":98,"column_start":5,"column_end":8}},{"value":"/ When enabled, verbose mode permits insignificant whitespace in many","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":605962,"byte_end":606033,"line_start":99,"line_end":99,"column_start":5,"column_end":76}},{"value":"/ places in the regular expression, as well as comments. Comments are","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":606038,"byte_end":606109,"line_start":100,"line_end":100,"column_start":5,"column_end":76}},{"value":"/ started using `#` and continue until the end of the line.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":606114,"byte_end":606175,"line_start":101,"line_end":101,"column_start":5,"column_end":66}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":606180,"byte_end":606183,"line_start":102,"line_end":102,"column_start":5,"column_end":8}},{"value":"/ By default, this is disabled. It may be selectively enabled in the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":606188,"byte_end":606258,"line_start":103,"line_end":103,"column_start":5,"column_end":75}},{"value":"/ regular expression by using the `x` flag regardless of this setting.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":606263,"byte_end":606335,"line_start":104,"line_end":104,"column_start":5,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1163},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":606695,"byte_end":606711,"line_start":114,"line_end":114,"column_start":12,"column_end":28},"name":"case_insensitive","qualname":"<ParserBuilder>::case_insensitive","value":"fn case_insensitive<'_>(&'_ mut Self, bool) -> &'_ mut ParserBuilder","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable the case insensitive flag by default.","sig":null,"attributes":[{"value":"/ Enable or disable the case insensitive flag by default.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":606476,"byte_end":606535,"line_start":110,"line_end":110,"column_start":5,"column_end":64}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":606540,"byte_end":606543,"line_start":111,"line_end":111,"column_start":5,"column_end":8}},{"value":"/ By default this is disabled. It may alternatively be selectively","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":606548,"byte_end":606616,"line_start":112,"line_end":112,"column_start":5,"column_end":73}},{"value":"/ enabled in the regular expression itself via the `i` flag.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":606621,"byte_end":606683,"line_start":113,"line_end":113,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1164},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":607044,"byte_end":607054,"line_start":123,"line_end":123,"column_start":12,"column_end":22},"name":"multi_line","qualname":"<ParserBuilder>::multi_line","value":"fn multi_line<'_>(&'_ mut Self, bool) -> &'_ mut ParserBuilder","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable the multi-line matching flag by default.","sig":null,"attributes":[{"value":"/ Enable or disable the multi-line matching flag by default.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":606822,"byte_end":606884,"line_start":119,"line_end":119,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":606889,"byte_end":606892,"line_start":120,"line_end":120,"column_start":5,"column_end":8}},{"value":"/ By default this is disabled. It may alternatively be selectively","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":606897,"byte_end":606965,"line_start":121,"line_end":121,"column_start":5,"column_end":73}},{"value":"/ enabled in the regular expression itself via the `m` flag.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":606970,"byte_end":607032,"line_start":122,"line_end":122,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1165},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":607389,"byte_end":607409,"line_start":132,"line_end":132,"column_start":12,"column_end":32},"name":"dot_matches_new_line","qualname":"<ParserBuilder>::dot_matches_new_line","value":"fn dot_matches_new_line<'_>(&'_ mut Self, bool) -> &'_ mut ParserBuilder","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable the \"dot matches any character\" flag by default.","sig":null,"attributes":[{"value":"/ Enable or disable the \"dot matches any character\" flag by default.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":607159,"byte_end":607229,"line_start":128,"line_end":128,"column_start":5,"column_end":75}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":607234,"byte_end":607237,"line_start":129,"line_end":129,"column_start":5,"column_end":8}},{"value":"/ By default this is disabled. It may alternatively be selectively","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":607242,"byte_end":607310,"line_start":130,"line_end":130,"column_start":5,"column_end":73}},{"value":"/ enabled in the regular expression itself via the `s` flag.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":607315,"byte_end":607377,"line_start":131,"line_end":131,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1166},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":607739,"byte_end":607749,"line_start":141,"line_end":141,"column_start":12,"column_end":22},"name":"swap_greed","qualname":"<ParserBuilder>::swap_greed","value":"fn swap_greed<'_>(&'_ mut Self, bool) -> &'_ mut ParserBuilder","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable the \"swap greed\" flag by default.","sig":null,"attributes":[{"value":"/ Enable or disable the \"swap greed\" flag by default.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":607524,"byte_end":607579,"line_start":137,"line_end":137,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":607584,"byte_end":607587,"line_start":138,"line_end":138,"column_start":5,"column_end":8}},{"value":"/ By default this is disabled. It may alternatively be selectively","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":607592,"byte_end":607660,"line_start":139,"line_end":139,"column_start":5,"column_end":73}},{"value":"/ enabled in the regular expression itself via the `U` flag.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":607665,"byte_end":607727,"line_start":140,"line_end":140,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1167},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":608308,"byte_end":608315,"line_start":154,"line_end":154,"column_start":12,"column_end":19},"name":"unicode","qualname":"<ParserBuilder>::unicode","value":"fn unicode<'_>(&'_ mut Self, bool) -> &'_ mut ParserBuilder","parent":null,"children":[],"decl_id":null,"docs":" Enable or disable the Unicode flag (`u`) by default.","sig":null,"attributes":[{"value":"/ Enable or disable the Unicode flag (`u`) by default.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":607854,"byte_end":607910,"line_start":146,"line_end":146,"column_start":5,"column_end":61}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":607915,"byte_end":607918,"line_start":147,"line_end":147,"column_start":5,"column_end":8}},{"value":"/ By default this is **enabled**. It may alternatively be selectively","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":607923,"byte_end":607994,"line_start":148,"line_end":148,"column_start":5,"column_end":76}},{"value":"/ disabled in the regular expression itself via the `u` flag.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":607999,"byte_end":608062,"line_start":149,"line_end":149,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":608067,"byte_end":608070,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ Note that unless `allow_invalid_utf8` is enabled (it's disabled by","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":608075,"byte_end":608145,"line_start":151,"line_end":151,"column_start":5,"column_end":75}},{"value":"/ default), a regular expression will fail to parse if Unicode mode is","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":608150,"byte_end":608222,"line_start":152,"line_end":152,"column_start":5,"column_end":77}},{"value":"/ disabled and a sub-expression could possibly match invalid UTF-8.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":608227,"byte_end":608296,"line_start":153,"line_end":153,"column_start":5,"column_end":74}}]},{"kind":"Struct","id":{"krate":0,"index":3420},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":609192,"byte_end":609198,"line_start":175,"line_end":175,"column_start":12,"column_end":18},"name":"Parser","qualname":"::parser::Parser","value":"Parser {  }","parent":null,"children":[{"krate":0,"index":3421},{"krate":0,"index":3422}],"decl_id":null,"docs":" A convenience parser for regular expressions.","sig":null,"attributes":[{"value":"/ A convenience parser for regular expressions.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":608415,"byte_end":608464,"line_start":160,"line_end":160,"column_start":1,"column_end":50}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":608465,"byte_end":608468,"line_start":161,"line_end":161,"column_start":1,"column_end":4}},{"value":"/ This parser takes as input a regular expression pattern string (the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":608469,"byte_end":608540,"line_start":162,"line_end":162,"column_start":1,"column_end":72}},{"value":"/ \"concrete syntax\") and returns a high-level intermediate representation","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":608541,"byte_end":608616,"line_start":163,"line_end":163,"column_start":1,"column_end":76}},{"value":"/ (the HIR) suitable for most types of analysis. In particular, this parser","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":608617,"byte_end":608694,"line_start":164,"line_end":164,"column_start":1,"column_end":78}},{"value":"/ hides the intermediate state of producing an AST (the \"abstract syntax\").","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":608695,"byte_end":608772,"line_start":165,"line_end":165,"column_start":1,"column_end":78}},{"value":"/ The AST is itself far more complex than the HIR, so this parser serves as a","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":608773,"byte_end":608852,"line_start":166,"line_end":166,"column_start":1,"column_end":80}},{"value":"/ convenience for never having to deal with it at all.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":608853,"byte_end":608909,"line_start":167,"line_end":167,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":608910,"byte_end":608913,"line_start":168,"line_end":168,"column_start":1,"column_end":4}},{"value":"/ If callers have more fine grained use cases that need an AST, then please","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":608914,"byte_end":608991,"line_start":169,"line_end":169,"column_start":1,"column_end":78}},{"value":"/ see the [`ast::parse`](ast/parse/index.html) module.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":608992,"byte_end":609048,"line_start":170,"line_end":170,"column_start":1,"column_end":57}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":609049,"byte_end":609052,"line_start":171,"line_end":171,"column_start":1,"column_end":4}},{"value":"/ A `Parser` can be configured in more detail via a","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":609053,"byte_end":609106,"line_start":172,"line_end":172,"column_start":1,"column_end":54}},{"value":"/ [`ParserBuilder`](struct.ParserBuilder.html).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":609107,"byte_end":609156,"line_start":173,"line_end":173,"column_start":1,"column_end":50}}]},{"kind":"Method","id":{"krate":0,"index":1169},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":609645,"byte_end":609648,"line_start":189,"line_end":189,"column_start":12,"column_end":15},"name":"new","qualname":"<Parser>::new","value":"fn new() -> Parser","parent":null,"children":[],"decl_id":null,"docs":" Create a new parser with a default configuration.","sig":null,"attributes":[{"value":"/ Create a new parser with a default configuration.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":609288,"byte_end":609341,"line_start":181,"line_end":181,"column_start":5,"column_end":58}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":609346,"byte_end":609349,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ The parser can be run with `parse` method. The parse method returns","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":609354,"byte_end":609425,"line_start":183,"line_end":183,"column_start":5,"column_end":76}},{"value":"/ a high level intermediate representation of the given regular","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":609430,"byte_end":609495,"line_start":184,"line_end":184,"column_start":5,"column_end":70}},{"value":"/ expression.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":609500,"byte_end":609515,"line_start":185,"line_end":185,"column_start":5,"column_end":20}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":609520,"byte_end":609523,"line_start":186,"line_end":186,"column_start":5,"column_end":8}},{"value":"/ To set configuration options on the parser, use","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":609528,"byte_end":609579,"line_start":187,"line_end":187,"column_start":5,"column_end":56}},{"value":"/ [`ParserBuilder`](struct.ParserBuilder.html).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":609584,"byte_end":609633,"line_start":188,"line_end":188,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":1170},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":609810,"byte_end":609815,"line_start":195,"line_end":195,"column_start":12,"column_end":17},"name":"parse","qualname":"<Parser>::parse","value":"fn parse<'_, '_>(&'_ mut Self, &'_ str) -> Result<hir::Hir>","parent":null,"children":[],"decl_id":null,"docs":" Parse the regular expression into a high level intermediate\n representation.\n","sig":null,"attributes":[{"value":"/ Parse the regular expression into a high level intermediate","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":609711,"byte_end":609774,"line_start":193,"line_end":193,"column_start":5,"column_end":68}},{"value":"/ representation.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":609779,"byte_end":609798,"line_start":194,"line_end":194,"column_start":5,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":3436},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/unicode.rs","byte_start":611117,"byte_end":611130,"line_start":36,"line_end":36,"column_start":12,"column_end":25},"name":"CaseFoldError","qualname":"::unicode::CaseFoldError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error that occurs when Unicode-aware simple case folding fails.","sig":null,"attributes":[{"value":"/ An error that occurs when Unicode-aware simple case folding fails.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/unicode.rs","byte_start":610795,"byte_end":610865,"line_start":30,"line_end":30,"column_start":1,"column_end":71}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/unicode.rs","byte_start":610866,"byte_end":610869,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"/ This error can occur when the case mapping tables necessary for Unicode","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/unicode.rs","byte_start":610870,"byte_end":610945,"line_start":32,"line_end":32,"column_start":1,"column_end":76}},{"value":"/ aware case folding are unavailable. This only occurs when the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/unicode.rs","byte_start":610946,"byte_end":611011,"line_start":33,"line_end":33,"column_start":1,"column_end":66}},{"value":"/ `unicode-case` feature is disabled. (The feature is enabled by default.)","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/unicode.rs","byte_start":611012,"byte_end":611088,"line_start":34,"line_end":34,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1191},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/unicode.rs","byte_start":611222,"byte_end":611225,"line_start":41,"line_end":41,"column_start":8,"column_end":11},"name":"fmt","qualname":"<CaseFoldError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3441},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/unicode.rs","byte_start":611795,"byte_end":611811,"line_start":56,"line_end":56,"column_start":12,"column_end":28},"name":"UnicodeWordError","qualname":"::unicode::UnicodeWordError","value":"","parent":null,"children":[],"decl_id":null,"docs":" An error that occurs when the Unicode-aware `\\w` class is unavailable.","sig":null,"attributes":[{"value":"/ An error that occurs when the Unicode-aware `\\w` class is unavailable.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/unicode.rs","byte_start":611460,"byte_end":611534,"line_start":50,"line_end":50,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/unicode.rs","byte_start":611535,"byte_end":611538,"line_start":51,"line_end":51,"column_start":1,"column_end":4}},{"value":"/ This error can occur when the data tables necessary for the Unicode aware","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/unicode.rs","byte_start":611539,"byte_end":611616,"line_start":52,"line_end":52,"column_start":1,"column_end":78}},{"value":"/ Perl character class `\\w` are unavailable. This only occurs when the","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/unicode.rs","byte_start":611617,"byte_end":611689,"line_start":53,"line_end":53,"column_start":1,"column_end":73}},{"value":"/ `unicode-perl` feature is disabled. (The feature is enabled by default.)","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/unicode.rs","byte_start":611690,"byte_end":611766,"line_start":54,"line_end":54,"column_start":1,"column_end":77}}]},{"kind":"Method","id":{"krate":0,"index":1194},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/unicode.rs","byte_start":611909,"byte_end":611912,"line_start":61,"line_end":61,"column_start":8,"column_end":11},"name":"fmt","qualname":"<UnicodeWordError as std::fmt::Display>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10295},"children":[],"decl_id":{"krate":2,"index":10296},"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1832},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"utf8","qualname":"::utf8","value":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","parent":null,"children":[{"krate":0,"index":1833},{"krate":0,"index":1836},{"krate":0,"index":1839},{"krate":0,"index":1842},{"krate":0,"index":1845},{"krate":0,"index":3482},{"krate":0,"index":3498},{"krate":0,"index":3499},{"krate":0,"index":3504},{"krate":0,"index":3505},{"krate":0,"index":3510},{"krate":0,"index":3511},{"krate":0,"index":3514},{"krate":0,"index":3516},{"krate":0,"index":1846},{"krate":0,"index":1853},{"krate":0,"index":1858},{"krate":0,"index":3518},{"krate":0,"index":3521},{"krate":0,"index":3523},{"krate":0,"index":3524},{"krate":0,"index":3525},{"krate":0,"index":3527},{"krate":0,"index":3528},{"krate":0,"index":3531},{"krate":0,"index":3533},{"krate":0,"index":1861},{"krate":0,"index":1864},{"krate":0,"index":3535},{"krate":0,"index":3537},{"krate":0,"index":1866},{"krate":0,"index":1870},{"krate":0,"index":1873},{"krate":0,"index":1875},{"krate":0,"index":1880},{"krate":0,"index":1881},{"krate":0,"index":1887}],"decl_id":null,"docs":"Converts ranges of Unicode scalar values to equivalent ranges of UTF-8 bytes.","sig":null,"attributes":[{"value":"*\nConverts ranges of Unicode scalar values to equivalent ranges of UTF-8 bytes.\n\nThis is sub-module is useful for constructing byte based automatons that need\nto embed UTF-8 decoding. The most common use of this module is in conjunction\nwith the [`hir::ClassUnicodeRange`](../hir/struct.ClassUnicodeRange.html) type.\n\nSee the documentation on the `Utf8Sequences` iterator for more details and\nan example.\n\n# Wait, what is this?\n\nThis is simplest to explain with an example. Let's say you wanted to test\nwhether a particular byte sequence was a Cyrillic character. One possible\nscalar value range is `[0400-04FF]`. The set of allowed bytes for this\nrange can be expressed as a sequence of byte ranges:\n\n```text\n[D0-D3][80-BF]\n```\n\nThis is simple enough: simply encode the boundaries, `0400` encodes to\n`D0 80` and `04FF` encodes to `D3 BF`, and create ranges from each\ncorresponding pair of bytes: `D0` to `D3` and `80` to `BF`.\n\nHowever, what if you wanted to add the Cyrillic Supplementary characters to\nyour range? Your range might then become `[0400-052F]`. The same procedure\nas above doesn't quite work because `052F` encodes to `D4 AF`. The byte ranges\nyou'd get from the previous transformation would be `[D0-D4][80-AF]`. However,\nthis isn't quite correct because this range doesn't capture many characters,\nfor example, `04FF` (because its last byte, `BF` isn't in the range `80-AF`).\n\nInstead, you need multiple sequences of byte ranges:\n\n```text\n[D0-D3][80-BF]  # matches codepoints 0400-04FF\n[D4][80-AF]     # matches codepoints 0500-052F\n```\n\nThis gets even more complicated if you want bigger ranges, particularly if\nthey naively contain surrogate codepoints. For example, the sequence of byte\nranges for the basic multilingual plane (`[0000-FFFF]`) look like this:\n\n```text\n[0-7F]\n[C2-DF][80-BF]\n[E0][A0-BF][80-BF]\n[E1-EC][80-BF][80-BF]\n[ED][80-9F][80-BF]\n[EE-EF][80-BF][80-BF]\n```\n\nNote that the byte ranges above will *not* match any erroneous encoding of\nUTF-8, including encodings of surrogate codepoints.\n\nAnd, of course, for all of Unicode (`[000000-10FFFF]`):\n\n```text\n[0-7F]\n[C2-DF][80-BF]\n[E0][A0-BF][80-BF]\n[E1-EC][80-BF][80-BF]\n[ED][80-9F][80-BF]\n[EE-EF][80-BF][80-BF]\n[F0][90-BF][80-BF][80-BF]\n[F1-F3][80-BF][80-BF][80-BF]\n[F4][80-8F][80-BF][80-BF]\n```\n\nThis module automates the process of creating these byte ranges from ranges of\nUnicode scalar values.\n\n# Lineage\n\nI got the idea and general implementation strategy from Russ Cox in his\n[article on regexps](https://web.archive.org/web/20160404141123/https://swtch.com/~rsc/regexp/regexp3.html) and RE2.\nRuss Cox got it from Ken Thompson's `grep` (no source, folk lore?).\nI also got the idea from\n[Lucene](https://github.com/apache/lucene-solr/blob/ae93f4e7ac6a3908046391de35d4f50a0d3c59ca/lucene/core/src/java/org/apache/lucene/util/automaton/UTF32ToUTF8.java),\nwhich uses it for executing automata on their term index.\n*/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1384344,"byte_end":1387248,"line_start":1,"line_end":81,"column_start":1,"column_end":3}},{"value":"deny(missing_docs)","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1387250,"byte_end":1387272,"line_start":83,"line_end":83,"column_start":1,"column_end":23}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3483},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1387784,"byte_end":1387787,"line_start":102,"line_end":102,"column_start":5,"column_end":8},"name":"One","qualname":"::utf8::Utf8Sequence::One","value":"Utf8Sequence::One(Utf8Range)","parent":{"krate":0,"index":3482},"children":[],"decl_id":null,"docs":" One byte range.\n","sig":null,"attributes":[{"value":"/ One byte range.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1387760,"byte_end":1387779,"line_start":101,"line_end":101,"column_start":5,"column_end":24}}]},{"kind":"Field","id":{"krate":0,"index":3485},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1387788,"byte_end":1387797,"line_start":102,"line_end":102,"column_start":9,"column_end":18},"name":"0","qualname":"::utf8::Utf8Sequence::One::0","value":"utf8::Utf8Range","parent":{"krate":0,"index":3483},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3486},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1387840,"byte_end":1387843,"line_start":104,"line_end":104,"column_start":5,"column_end":8},"name":"Two","qualname":"::utf8::Utf8Sequence::Two","value":"Utf8Sequence::Two([Utf8Range; ])","parent":{"krate":0,"index":3482},"children":[],"decl_id":null,"docs":" Two successive byte ranges.\n","sig":null,"attributes":[{"value":"/ Two successive byte ranges.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1387804,"byte_end":1387835,"line_start":103,"line_end":103,"column_start":5,"column_end":36}}]},{"kind":"Field","id":{"krate":0,"index":3488},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1387844,"byte_end":1387858,"line_start":104,"line_end":104,"column_start":9,"column_end":23},"name":"0","qualname":"::utf8::Utf8Sequence::Two::0","value":"[utf8::Utf8Range; 2]","parent":{"krate":0,"index":3486},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3490},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1387903,"byte_end":1387908,"line_start":106,"line_end":106,"column_start":5,"column_end":10},"name":"Three","qualname":"::utf8::Utf8Sequence::Three","value":"Utf8Sequence::Three([Utf8Range; ])","parent":{"krate":0,"index":3482},"children":[],"decl_id":null,"docs":" Three successive byte ranges.\n","sig":null,"attributes":[{"value":"/ Three successive byte ranges.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1387865,"byte_end":1387898,"line_start":105,"line_end":105,"column_start":5,"column_end":38}}]},{"kind":"Field","id":{"krate":0,"index":3492},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1387909,"byte_end":1387923,"line_start":106,"line_end":106,"column_start":11,"column_end":25},"name":"0","qualname":"::utf8::Utf8Sequence::Three::0","value":"[utf8::Utf8Range; 3]","parent":{"krate":0,"index":3490},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3494},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1387967,"byte_end":1387971,"line_start":108,"line_end":108,"column_start":5,"column_end":9},"name":"Four","qualname":"::utf8::Utf8Sequence::Four","value":"Utf8Sequence::Four([Utf8Range; ])","parent":{"krate":0,"index":3482},"children":[],"decl_id":null,"docs":" Four successive byte ranges.\n","sig":null,"attributes":[{"value":"/ Four successive byte ranges.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1387930,"byte_end":1387962,"line_start":107,"line_end":107,"column_start":5,"column_end":37}}]},{"kind":"Field","id":{"krate":0,"index":3496},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1387972,"byte_end":1387986,"line_start":108,"line_end":108,"column_start":10,"column_end":24},"name":"0","qualname":"::utf8::Utf8Sequence::Four::0","value":"[utf8::Utf8Range; 4]","parent":{"krate":0,"index":3494},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3482},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1387741,"byte_end":1387753,"line_start":100,"line_end":100,"column_start":10,"column_end":22},"name":"Utf8Sequence","qualname":"::utf8::Utf8Sequence","value":"enum Utf8Sequence {\n    One(Utf8Range),\n    Two([Utf8Range; ]),\n    Three([Utf8Range; ]),\n    Four([Utf8Range; ]),\n}","parent":null,"children":[{"krate":0,"index":3483},{"krate":0,"index":3486},{"krate":0,"index":3490},{"krate":0,"index":3494}],"decl_id":null,"docs":" Utf8Sequence represents a sequence of byte ranges.","sig":null,"attributes":[{"value":"/ Utf8Sequence represents a sequence of byte ranges.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1387384,"byte_end":1387438,"line_start":92,"line_end":92,"column_start":1,"column_end":55}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1387439,"byte_end":1387442,"line_start":93,"line_end":93,"column_start":1,"column_end":4}},{"value":"/ To match a Utf8Sequence, a candidate byte sequence must match each","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1387443,"byte_end":1387513,"line_start":94,"line_end":94,"column_start":1,"column_end":71}},{"value":"/ successive range.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1387514,"byte_end":1387535,"line_start":95,"line_end":95,"column_start":1,"column_end":22}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1387536,"byte_end":1387539,"line_start":96,"line_end":96,"column_start":1,"column_end":4}},{"value":"/ For example, if there are two ranges, `[C2-DF][80-BF]`, then the byte","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1387540,"byte_end":1387613,"line_start":97,"line_end":97,"column_start":1,"column_end":74}},{"value":"/ sequence `\\xDD\\x61` would not match because `0x61 < 0x80`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1387614,"byte_end":1387676,"line_start":98,"line_end":98,"column_start":1,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":1848},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1389084,"byte_end":1389092,"line_start":139,"line_end":139,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<Utf8Sequence>::as_slice","value":"fn as_slice<'_>(&'_ Self) -> &'_ [Utf8Range]","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying sequence of byte ranges as a slice.\n","sig":null,"attributes":[{"value":"/ Returns the underlying sequence of byte ranges as a slice.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1389010,"byte_end":1389072,"line_start":138,"line_end":138,"column_start":5,"column_end":67}}]},{"kind":"Method","id":{"krate":0,"index":1850},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1389494,"byte_end":1389497,"line_start":152,"line_end":152,"column_start":12,"column_end":15},"name":"len","qualname":"<Utf8Sequence>::len","value":"fn len<'_>(&'_ Self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of byte ranges in this sequence.","sig":null,"attributes":[{"value":"/ Returns the number of byte ranges in this sequence.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1389347,"byte_end":1389402,"line_start":149,"line_end":149,"column_start":5,"column_end":60}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1389407,"byte_end":1389410,"line_start":150,"line_end":150,"column_start":5,"column_end":8}},{"value":"/ The length is guaranteed to be in the closed interval `[1, 4]`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1389415,"byte_end":1389482,"line_start":151,"line_end":151,"column_start":5,"column_end":72}}]},{"kind":"Method","id":{"krate":0,"index":1851},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1389973,"byte_end":1389980,"line_start":172,"line_end":172,"column_start":12,"column_end":19},"name":"reverse","qualname":"<Utf8Sequence>::reverse","value":"fn reverse<'_>(&'_ mut Self)","parent":null,"children":[],"decl_id":null,"docs":" Reverses the ranges in this sequence.","sig":null,"attributes":[{"value":"/ Reverses the ranges in this sequence.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1389557,"byte_end":1389598,"line_start":156,"line_end":156,"column_start":5,"column_end":46}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1389603,"byte_end":1389606,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ For example, if this corresponds to the following sequence:","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1389611,"byte_end":1389674,"line_start":158,"line_end":158,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1389679,"byte_end":1389682,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1389687,"byte_end":1389698,"line_start":160,"line_end":160,"column_start":5,"column_end":16}},{"value":"/ [D0-D3][80-BF]","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1389703,"byte_end":1389721,"line_start":161,"line_end":161,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1389726,"byte_end":1389733,"line_start":162,"line_end":162,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1389738,"byte_end":1389741,"line_start":163,"line_end":163,"column_start":5,"column_end":8}},{"value":"/ Then after reversal, it will be","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1389746,"byte_end":1389781,"line_start":164,"line_end":164,"column_start":5,"column_end":40}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1389786,"byte_end":1389789,"line_start":165,"line_end":165,"column_start":5,"column_end":8}},{"value":"/ ```text","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1389794,"byte_end":1389805,"line_start":166,"line_end":166,"column_start":5,"column_end":16}},{"value":"/ [80-BF][D0-D3]","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1389810,"byte_end":1389828,"line_start":167,"line_end":167,"column_start":5,"column_end":23}},{"value":"/ ```","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1389833,"byte_end":1389840,"line_start":168,"line_end":168,"column_start":5,"column_end":12}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1389845,"byte_end":1389848,"line_start":169,"line_end":169,"column_start":5,"column_end":8}},{"value":"/ This is useful when one is constructing a UTF-8 automaton to match","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1389853,"byte_end":1389923,"line_start":170,"line_end":170,"column_start":5,"column_end":75}},{"value":"/ character classes in reverse.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1389928,"byte_end":1389961,"line_start":171,"line_end":171,"column_start":5,"column_end":38}}]},{"kind":"Method","id":{"krate":0,"index":1852},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1390359,"byte_end":1390366,"line_start":183,"line_end":183,"column_start":12,"column_end":19},"name":"matches","qualname":"<Utf8Sequence>::matches","value":"fn matches<'_, '_>(&'_ Self, &'_ [u8]) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if a prefix of `bytes` matches this sequence\n of byte ranges.\n","sig":null,"attributes":[{"value":"/ Returns true if and only if a prefix of `bytes` matches this sequence","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1390250,"byte_end":1390323,"line_start":181,"line_end":181,"column_start":5,"column_end":78}},{"value":"/ of byte ranges.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1390328,"byte_end":1390347,"line_start":182,"line_end":182,"column_start":5,"column_end":24}}]},{"kind":"Method","id":{"krate":0,"index":1857},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1390759,"byte_end":1390768,"line_start":200,"line_end":200,"column_start":8,"column_end":17},"name":"into_iter","qualname":"<&'a Utf8Sequence as std::iter::IntoIterator>::into_iter","value":"fn into_iter(Self) -> Self::IntoIter","parent":{"krate":2,"index":8398},"children":[],"decl_id":{"krate":2,"index":8401},"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1859},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1390877,"byte_end":1390880,"line_start":206,"line_end":206,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Utf8Sequence as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3518},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1391415,"byte_end":1391424,"line_start":221,"line_end":221,"column_start":12,"column_end":21},"name":"Utf8Range","qualname":"::utf8::Utf8Range","value":"Utf8Range { start, end }","parent":null,"children":[{"krate":0,"index":3519},{"krate":0,"index":3520}],"decl_id":null,"docs":" A single inclusive range of UTF-8 bytes.\n","sig":null,"attributes":[{"value":"/ A single inclusive range of UTF-8 bytes.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1391304,"byte_end":1391348,"line_start":219,"line_end":219,"column_start":1,"column_end":45}}]},{"kind":"Field","id":{"krate":0,"index":3519},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1391476,"byte_end":1391481,"line_start":223,"line_end":223,"column_start":9,"column_end":14},"name":"start","qualname":"::utf8::Utf8Range::start","value":"u8","parent":{"krate":0,"index":3518},"children":[],"decl_id":null,"docs":" Start of byte range (inclusive).\n","sig":null,"attributes":[{"value":"/ Start of byte range (inclusive).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1391431,"byte_end":1391467,"line_start":222,"line_end":222,"column_start":5,"column_end":41}}]},{"kind":"Field","id":{"krate":0,"index":3520},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1391534,"byte_end":1391537,"line_start":225,"line_end":225,"column_start":9,"column_end":12},"name":"end","qualname":"::utf8::Utf8Range::end","value":"u8","parent":{"krate":0,"index":3518},"children":[],"decl_id":null,"docs":" End of byte range (inclusive).\n","sig":null,"attributes":[{"value":"/ End of byte range (inclusive).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1391491,"byte_end":1391525,"line_start":224,"line_end":224,"column_start":5,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":1863},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1391724,"byte_end":1391731,"line_start":234,"line_end":234,"column_start":12,"column_end":19},"name":"matches","qualname":"<Utf8Range>::matches","value":"fn matches<'_>(&'_ Self, u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if the given byte is in this range.\n","sig":null,"attributes":[{"value":"/ Returns true if and only if the given byte is in this range.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1391648,"byte_end":1391712,"line_start":233,"line_end":233,"column_start":5,"column_end":69}}]},{"kind":"Method","id":{"krate":0,"index":1865},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1391845,"byte_end":1391848,"line_start":240,"line_end":240,"column_start":8,"column_end":11},"name":"fmt","qualname":"<Utf8Range as std::fmt::Debug>::fmt","value":"fn fmt<'_, '_, '_>(&'_ Self, &'_ mut fmt::Formatter) -> fmt::Result","parent":{"krate":2,"index":10288},"children":[],"decl_id":{"krate":2,"index":10289},"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3535},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1394101,"byte_end":1394114,"line_start":300,"line_end":300,"column_start":12,"column_end":25},"name":"Utf8Sequences","qualname":"::utf8::Utf8Sequences","value":"Utf8Sequences {  }","parent":null,"children":[{"krate":0,"index":3536}],"decl_id":null,"docs":" An iterator over ranges of matching UTF-8 byte sequences.","sig":null,"attributes":[{"value":"/ An iterator over ranges of matching UTF-8 byte sequences.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1392076,"byte_end":1392137,"line_start":249,"line_end":249,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1392138,"byte_end":1392141,"line_start":250,"line_end":250,"column_start":1,"column_end":4}},{"value":"/ The iteration represents an alternation of comprehensive byte sequences","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1392142,"byte_end":1392217,"line_start":251,"line_end":251,"column_start":1,"column_end":76}},{"value":"/ that match precisely the set of UTF-8 encoded scalar values.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1392218,"byte_end":1392282,"line_start":252,"line_end":252,"column_start":1,"column_end":65}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1392283,"byte_end":1392286,"line_start":253,"line_end":253,"column_start":1,"column_end":4}},{"value":"/ A byte sequence corresponds to one of the scalar values in the range given","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1392287,"byte_end":1392365,"line_start":254,"line_end":254,"column_start":1,"column_end":79}},{"value":"/ if and only if it completely matches exactly one of the sequences of byte","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1392366,"byte_end":1392443,"line_start":255,"line_end":255,"column_start":1,"column_end":78}},{"value":"/ ranges produced by this iterator.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1392444,"byte_end":1392481,"line_start":256,"line_end":256,"column_start":1,"column_end":38}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1392482,"byte_end":1392485,"line_start":257,"line_end":257,"column_start":1,"column_end":4}},{"value":"/ Each sequence of byte ranges matches a unique set of bytes. That is, no two","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1392486,"byte_end":1392565,"line_start":258,"line_end":258,"column_start":1,"column_end":80}},{"value":"/ sequences will match the same bytes.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1392566,"byte_end":1392606,"line_start":259,"line_end":259,"column_start":1,"column_end":41}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1392607,"byte_end":1392610,"line_start":260,"line_end":260,"column_start":1,"column_end":4}},{"value":"/ # Example","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1392611,"byte_end":1392624,"line_start":261,"line_end":261,"column_start":1,"column_end":14}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1392625,"byte_end":1392628,"line_start":262,"line_end":262,"column_start":1,"column_end":4}},{"value":"/ This shows how to match an arbitrary byte sequence against a range of","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1392629,"byte_end":1392702,"line_start":263,"line_end":263,"column_start":1,"column_end":74}},{"value":"/ scalar values.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1392703,"byte_end":1392721,"line_start":264,"line_end":264,"column_start":1,"column_end":19}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1392722,"byte_end":1392725,"line_start":265,"line_end":265,"column_start":1,"column_end":4}},{"value":"/ ```rust","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1392726,"byte_end":1392737,"line_start":266,"line_end":266,"column_start":1,"column_end":12}},{"value":"/ use regex_syntax::utf8::{Utf8Sequences, Utf8Sequence};","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1392738,"byte_end":1392796,"line_start":267,"line_end":267,"column_start":1,"column_end":59}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1392797,"byte_end":1392800,"line_start":268,"line_end":268,"column_start":1,"column_end":4}},{"value":"/ fn matches(seqs: &[Utf8Sequence], bytes: &[u8]) -> bool {","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1392801,"byte_end":1392862,"line_start":269,"line_end":269,"column_start":1,"column_end":62}},{"value":"/     for range in seqs {","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1392863,"byte_end":1392890,"line_start":270,"line_end":270,"column_start":1,"column_end":28}},{"value":"/         if range.matches(bytes) {","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1392891,"byte_end":1392928,"line_start":271,"line_end":271,"column_start":1,"column_end":38}},{"value":"/             return true;","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1392929,"byte_end":1392957,"line_start":272,"line_end":272,"column_start":1,"column_end":29}},{"value":"/         }","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1392958,"byte_end":1392971,"line_start":273,"line_end":273,"column_start":1,"column_end":14}},{"value":"/     }","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1392972,"byte_end":1392981,"line_start":274,"line_end":274,"column_start":1,"column_end":10}},{"value":"/     false","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1392982,"byte_end":1392995,"line_start":275,"line_end":275,"column_start":1,"column_end":14}},{"value":"/ }","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1392996,"byte_end":1393001,"line_start":276,"line_end":276,"column_start":1,"column_end":6}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1393002,"byte_end":1393005,"line_start":277,"line_end":277,"column_start":1,"column_end":4}},{"value":"/ // Test the basic multilingual plane.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1393006,"byte_end":1393047,"line_start":278,"line_end":278,"column_start":1,"column_end":42}},{"value":"/ let seqs: Vec<_> = Utf8Sequences::new('\\u{0}', '\\u{FFFF}').collect();","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1393048,"byte_end":1393121,"line_start":279,"line_end":279,"column_start":1,"column_end":74}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1393122,"byte_end":1393125,"line_start":280,"line_end":280,"column_start":1,"column_end":4}},{"value":"/ // UTF-8 encoding of 'a'.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1393126,"byte_end":1393155,"line_start":281,"line_end":281,"column_start":1,"column_end":30}},{"value":"/ assert!(matches(&seqs, &[0x61]));","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1393156,"byte_end":1393193,"line_start":282,"line_end":282,"column_start":1,"column_end":38}},{"value":"/ // UTF-8 encoding of '☃' (`\\u{2603}`).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1393194,"byte_end":1393238,"line_start":283,"line_end":283,"column_start":1,"column_end":43}},{"value":"/ assert!(matches(&seqs, &[0xE2, 0x98, 0x83]));","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1393239,"byte_end":1393288,"line_start":284,"line_end":284,"column_start":1,"column_end":50}},{"value":"/ // UTF-8 encoding of `\\u{10348}` (outside the BMP).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1393289,"byte_end":1393344,"line_start":285,"line_end":285,"column_start":1,"column_end":56}},{"value":"/ assert!(!matches(&seqs, &[0xF0, 0x90, 0x8D, 0x88]));","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1393345,"byte_end":1393401,"line_start":286,"line_end":286,"column_start":1,"column_end":57}},{"value":"/ // Tries to match against a UTF-8 encoding of a surrogate codepoint,","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1393402,"byte_end":1393474,"line_start":287,"line_end":287,"column_start":1,"column_end":73}},{"value":"/ // which is invalid UTF-8, and therefore fails, despite the fact that","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1393475,"byte_end":1393548,"line_start":288,"line_end":288,"column_start":1,"column_end":74}},{"value":"/ // the corresponding codepoint (0xD800) falls in the range given.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1393549,"byte_end":1393618,"line_start":289,"line_end":289,"column_start":1,"column_end":70}},{"value":"/ assert!(!matches(&seqs, &[0xED, 0xA0, 0x80]));","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1393619,"byte_end":1393669,"line_start":290,"line_end":290,"column_start":1,"column_end":51}},{"value":"/ // And fails against plain old invalid UTF-8.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1393670,"byte_end":1393719,"line_start":291,"line_end":291,"column_start":1,"column_end":50}},{"value":"/ assert!(!matches(&seqs, &[0xFF, 0xFF]));","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1393720,"byte_end":1393764,"line_start":292,"line_end":292,"column_start":1,"column_end":45}},{"value":"/ ```","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1393765,"byte_end":1393772,"line_start":293,"line_end":293,"column_start":1,"column_end":8}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1393773,"byte_end":1393776,"line_start":294,"line_end":294,"column_start":1,"column_end":4}},{"value":"/ If this example seems circuitous, that's because it is! It's meant to be","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1393777,"byte_end":1393853,"line_start":295,"line_end":295,"column_start":1,"column_end":77}},{"value":"/ illustrative. In practice, you could just try to decode your byte sequence","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1393854,"byte_end":1393932,"line_start":296,"line_end":296,"column_start":1,"column_end":79}},{"value":"/ and compare it with the scalar value range directly. However, this is not","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1393933,"byte_end":1394010,"line_start":297,"line_end":297,"column_start":1,"column_end":78}},{"value":"/ always possible (for example, in a byte based automaton).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1394011,"byte_end":1394072,"line_start":298,"line_end":298,"column_start":1,"column_end":62}}]},{"kind":"Method","id":{"krate":0,"index":1867},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1394282,"byte_end":1394285,"line_start":307,"line_end":307,"column_start":12,"column_end":15},"name":"new","qualname":"<Utf8Sequences>::new","value":"fn new(char, char) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new iterator over UTF-8 byte ranges for the scalar value range\n given.\n","sig":null,"attributes":[{"value":"/ Create a new iterator over UTF-8 byte ranges for the scalar value range","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1394180,"byte_end":1394255,"line_start":305,"line_end":305,"column_start":5,"column_end":80}},{"value":"/ given.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1394260,"byte_end":1394270,"line_start":306,"line_end":306,"column_start":5,"column_end":15}}]},{"kind":"Method","id":{"krate":0,"index":1868},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1394649,"byte_end":1394654,"line_start":318,"line_end":318,"column_start":12,"column_end":17},"name":"reset","qualname":"<Utf8Sequences>::reset","value":"fn reset<'_>(&'_ mut Self, char, char)","parent":null,"children":[],"decl_id":null,"docs":" reset resets the scalar value range.\n Any existing state is cleared, but resources may be reused.","sig":null,"attributes":[{"value":"/ reset resets the scalar value range.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1394445,"byte_end":1394485,"line_start":313,"line_end":313,"column_start":5,"column_end":45}},{"value":"/ Any existing state is cleared, but resources may be reused.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1394490,"byte_end":1394553,"line_start":314,"line_end":314,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1394558,"byte_end":1394561,"line_start":315,"line_end":315,"column_start":5,"column_end":8}},{"value":"/ N.B. Benchmarks say that this method is dubious.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1394566,"byte_end":1394618,"line_start":316,"line_end":316,"column_start":5,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":1877},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1395192,"byte_end":1395196,"line_start":342,"line_end":342,"column_start":8,"column_end":12},"name":"next","qualname":"<Utf8Sequences as std::iter::Iterator>::next","value":"fn next<'_>(&'_ mut Self) -> Option<Self::Item>","parent":{"krate":2,"index":8596},"children":[],"decl_id":{"krate":2,"index":8598},"docs":"","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1888},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":7614,"byte_end":7620,"line_start":178,"line_end":178,"column_start":8,"column_end":14},"name":"escape","qualname":"::escape","value":"fn escape<'_>(&'_ str) -> String","parent":null,"children":[],"decl_id":null,"docs":" Escapes all regular expression meta characters in `text`.","sig":null,"attributes":[{"value":"/ Escapes all regular expression meta characters in `text`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":7456,"byte_end":7517,"line_start":174,"line_end":174,"column_start":1,"column_end":62}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":7518,"byte_end":7521,"line_start":175,"line_end":175,"column_start":1,"column_end":4}},{"value":"/ The string returned may be safely used as a literal in a regular","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":7522,"byte_end":7590,"line_start":176,"line_end":176,"column_start":1,"column_end":69}},{"value":"/ expression.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":7591,"byte_end":7606,"line_start":177,"line_end":177,"column_start":1,"column_end":16}}]},{"kind":"Function","id":{"krate":0,"index":1889},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":7971,"byte_end":7982,"line_start":188,"line_end":188,"column_start":8,"column_end":19},"name":"escape_into","qualname":"::escape_into","value":"fn escape_into<'_, '_>(&'_ str, &'_ mut String)","parent":null,"children":[],"decl_id":null,"docs":" Escapes all meta characters in `text` and writes the result into `buf`.","sig":null,"attributes":[{"value":"/ Escapes all meta characters in `text` and writes the result into `buf`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":7731,"byte_end":7806,"line_start":184,"line_end":184,"column_start":1,"column_end":76}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":7807,"byte_end":7810,"line_start":185,"line_end":185,"column_start":1,"column_end":4}},{"value":"/ This will append escape characters into the given buffer. The characters","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":7811,"byte_end":7887,"line_start":186,"line_end":186,"column_start":1,"column_end":77}},{"value":"/ that are appended are safe to use as a literal in a regular expression.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":7888,"byte_end":7963,"line_start":187,"line_end":187,"column_start":1,"column_end":76}}]},{"kind":"Function","id":{"krate":0,"index":1890},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":8652,"byte_end":8669,"line_start":207,"line_end":207,"column_start":8,"column_end":25},"name":"is_meta_character","qualname":"::is_meta_character","value":"fn is_meta_character(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if the given character has significance in a regex.","sig":null,"attributes":[{"value":"/ Returns true if the given character has significance in a regex.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":8174,"byte_end":8242,"line_start":198,"line_end":198,"column_start":1,"column_end":69}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":8243,"byte_end":8246,"line_start":199,"line_end":199,"column_start":1,"column_end":4}},{"value":"/ These are the only characters that are allowed to be escaped, with one","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":8247,"byte_end":8321,"line_start":200,"line_end":200,"column_start":1,"column_end":75}},{"value":"/ exception: an ASCII space character may be escaped when extended mode (with","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":8322,"byte_end":8401,"line_start":201,"line_end":201,"column_start":1,"column_end":80}},{"value":"/ the `x` flag) is enabled. In particular, `is_meta_character(' ')` returns","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":8402,"byte_end":8479,"line_start":202,"line_end":202,"column_start":1,"column_end":78}},{"value":"/ `false`.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":8480,"byte_end":8492,"line_start":203,"line_end":203,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":8493,"byte_end":8496,"line_start":204,"line_end":204,"column_start":1,"column_end":4}},{"value":"/ Note that the set of characters for which this function returns `true` or","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":8497,"byte_end":8574,"line_start":205,"line_end":205,"column_start":1,"column_end":78}},{"value":"/ `false` is fixed and won't change in a semver compatible release.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":8575,"byte_end":8644,"line_start":206,"line_end":206,"column_start":1,"column_end":70}}]},{"kind":"Function","id":{"krate":0,"index":1891},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":9548,"byte_end":9565,"line_start":231,"line_end":231,"column_start":8,"column_end":25},"name":"is_word_character","qualname":"::is_word_character","value":"fn is_word_character(char) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if the given character is a Unicode word\n character.","sig":null,"attributes":[{"value":"/ Returns true if and only if the given character is a Unicode word","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":8864,"byte_end":8933,"line_start":215,"line_end":215,"column_start":1,"column_end":70}},{"value":"/ character.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":8934,"byte_end":8948,"line_start":216,"line_end":216,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":8949,"byte_end":8952,"line_start":217,"line_end":217,"column_start":1,"column_end":4}},{"value":"/ A Unicode word character is defined by","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":8953,"byte_end":8995,"line_start":218,"line_end":218,"column_start":1,"column_end":43}},{"value":"/ [UTS#18 Annex C](https://unicode.org/reports/tr18/#Compatibility_Properties).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":8996,"byte_end":9077,"line_start":219,"line_end":219,"column_start":1,"column_end":82}},{"value":"/ In particular, a character","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":9078,"byte_end":9108,"line_start":220,"line_end":220,"column_start":1,"column_end":31}},{"value":"/ is considered a word character if it is in either of the `Alphabetic` or","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":9109,"byte_end":9185,"line_start":221,"line_end":221,"column_start":1,"column_end":77}},{"value":"/ `Join_Control` properties, or is in one of the `Decimal_Number`, `Mark`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":9186,"byte_end":9261,"line_start":222,"line_end":222,"column_start":1,"column_end":76}},{"value":"/ or `Connector_Punctuation` general categories.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":9262,"byte_end":9312,"line_start":223,"line_end":223,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":9313,"byte_end":9316,"line_start":224,"line_end":224,"column_start":1,"column_end":4}},{"value":"/ # Panics","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":9317,"byte_end":9329,"line_start":225,"line_end":225,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":9330,"byte_end":9333,"line_start":226,"line_end":226,"column_start":1,"column_end":4}},{"value":"/ If the `unicode-perl` feature is not enabled, then this function panics.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":9334,"byte_end":9410,"line_start":227,"line_end":227,"column_start":1,"column_end":77}},{"value":"/ For this reason, it is recommended that callers use","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":9411,"byte_end":9466,"line_start":228,"line_end":228,"column_start":1,"column_end":56}},{"value":"/ [`try_is_word_character`](fn.try_is_word_character.html)","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":9467,"byte_end":9527,"line_start":229,"line_end":229,"column_start":1,"column_end":61}},{"value":"/ instead.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":9528,"byte_end":9540,"line_start":230,"line_end":230,"column_start":1,"column_end":13}}]},{"kind":"Function","id":{"krate":0,"index":1892},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":10239,"byte_end":10260,"line_start":249,"line_end":249,"column_start":8,"column_end":29},"name":"try_is_word_character","qualname":"::try_is_word_character","value":"fn try_is_word_character(char) -> std::result::Result<bool, UnicodeWordError>","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if the given character is a Unicode word\n character.","sig":null,"attributes":[{"value":"/ Returns true if and only if the given character is a Unicode word","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":9664,"byte_end":9733,"line_start":235,"line_end":235,"column_start":1,"column_end":70}},{"value":"/ character.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":9734,"byte_end":9748,"line_start":236,"line_end":236,"column_start":1,"column_end":15}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":9749,"byte_end":9752,"line_start":237,"line_end":237,"column_start":1,"column_end":4}},{"value":"/ A Unicode word character is defined by","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":9753,"byte_end":9795,"line_start":238,"line_end":238,"column_start":1,"column_end":43}},{"value":"/ [UTS#18 Annex C](https://unicode.org/reports/tr18/#Compatibility_Properties).","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":9796,"byte_end":9877,"line_start":239,"line_end":239,"column_start":1,"column_end":82}},{"value":"/ In particular, a character","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":9878,"byte_end":9908,"line_start":240,"line_end":240,"column_start":1,"column_end":31}},{"value":"/ is considered a word character if it is in either of the `Alphabetic` or","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":9909,"byte_end":9985,"line_start":241,"line_end":241,"column_start":1,"column_end":77}},{"value":"/ `Join_Control` properties, or is in one of the `Decimal_Number`, `Mark`","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":9986,"byte_end":10061,"line_start":242,"line_end":242,"column_start":1,"column_end":76}},{"value":"/ or `Connector_Punctuation` general categories.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":10062,"byte_end":10112,"line_start":243,"line_end":243,"column_start":1,"column_end":51}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":10113,"byte_end":10116,"line_start":244,"line_end":244,"column_start":1,"column_end":4}},{"value":"/ # Errors","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":10117,"byte_end":10129,"line_start":245,"line_end":245,"column_start":1,"column_end":13}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":10130,"byte_end":10133,"line_start":246,"line_end":246,"column_start":1,"column_end":4}},{"value":"/ If the `unicode-perl` feature is not enabled, then this function always","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":10134,"byte_end":10209,"line_start":247,"line_end":247,"column_start":1,"column_end":76}},{"value":"/ returns an error.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":10210,"byte_end":10231,"line_start":248,"line_end":248,"column_start":1,"column_end":22}}]},{"kind":"Function","id":{"krate":0,"index":1893},"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":10547,"byte_end":10559,"line_start":259,"line_end":259,"column_start":8,"column_end":20},"name":"is_word_byte","qualname":"::is_word_byte","value":"fn is_word_byte(u8) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Returns true if and only if the given character is an ASCII word character.","sig":null,"attributes":[{"value":"/ Returns true if and only if the given character is an ASCII word character.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":10363,"byte_end":10442,"line_start":255,"line_end":255,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":10443,"byte_end":10446,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ An ASCII word character is defined by the following character class:","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":10447,"byte_end":10519,"line_start":257,"line_end":257,"column_start":1,"column_end":73}},{"value":"/ `[_0-9a-zA-Z]'.","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":10520,"byte_end":10539,"line_start":258,"line_end":258,"column_start":1,"column_end":20}}]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":62911,"byte_end":62920,"line_start":32,"line_end":32,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":76},{"krate":0,"index":77},{"krate":0,"index":78},{"krate":0,"index":84}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":65860,"byte_end":65873,"line_start":120,"line_end":120,"column_start":18,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":65955,"byte_end":65968,"line_start":126,"line_end":126,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":93},{"krate":0,"index":94},{"krate":0,"index":95},{"krate":0,"index":96}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":74508,"byte_end":74514,"line_start":324,"line_end":324,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":98},{"krate":0,"index":99},{"krate":0,"index":100},{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":76100,"byte_end":76107,"line_start":366,"line_end":366,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":105},{"krate":0,"index":106},{"krate":0,"index":107},{"krate":0,"index":108},{"krate":0,"index":109},{"krate":0,"index":110},{"krate":0,"index":111},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":117},{"krate":0,"index":118},{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":124},{"krate":0,"index":125},{"krate":0,"index":126},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":129},{"krate":0,"index":130},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":134},{"krate":0,"index":136},{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":98377,"byte_end":98384,"line_start":949,"line_end":949,"column_start":29,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":147},{"krate":0,"index":149},{"krate":0,"index":150},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":159},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":174},{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":183},{"krate":0,"index":184},{"krate":0,"index":185},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":143070,"byte_end":143081,"line_start":2135,"line_end":2135,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":193},{"krate":0,"index":194},{"krate":0,"index":195},{"krate":0,"index":197}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":144096,"byte_end":144107,"line_start":2170,"line_end":2170,"column_start":50,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":202},{"krate":0,"index":203},{"krate":0,"index":204},{"krate":0,"index":205},{"krate":0,"index":206},{"krate":0,"index":207},{"krate":0,"index":208},{"krate":0,"index":209},{"krate":0,"index":210}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/print.rs","byte_start":267750,"byte_end":267764,"line_start":19,"line_end":19,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":232}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/print.rs","byte_start":267848,"byte_end":267862,"line_start":25,"line_end":25,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":234},{"krate":0,"index":235}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/print.rs","byte_start":268522,"byte_end":268529,"line_start":49,"line_end":49,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":237},{"krate":0,"index":238}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/print.rs","byte_start":269127,"byte_end":269133,"line_start":69,"line_end":69,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":242},{"krate":0,"index":243},{"krate":0,"index":244},{"krate":0,"index":245},{"krate":0,"index":246},{"krate":0,"index":250},{"krate":0,"index":251},{"krate":0,"index":252},{"krate":0,"index":254}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/print.rs","byte_start":271730,"byte_end":271736,"line_start":155,"line_end":155,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":257},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":266},{"krate":0,"index":268},{"krate":0,"index":269},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":281},{"krate":0,"index":283},{"krate":0,"index":285}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":292648,"byte_end":292659,"line_start":201,"line_end":201,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":356},{"krate":0,"index":357},{"krate":0,"index":359},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":364},{"krate":0,"index":366},{"krate":0,"index":368},{"krate":0,"index":369}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":301028,"byte_end":301033,"line_start":435,"line_end":435,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":372}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":301426,"byte_end":301436,"line_start":448,"line_end":448,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":375}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":302010,"byte_end":302021,"line_start":465,"line_end":465,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":378},{"krate":0,"index":379}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":302418,"byte_end":302428,"line_start":478,"line_end":478,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":382}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":302813,"byte_end":302824,"line_start":490,"line_end":490,"column_start":25,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":385}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":13023,"byte_end":13028,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":387},{"krate":0,"index":388},{"krate":0,"index":389},{"krate":0,"index":390}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":19470,"byte_end":19475,"line_start":181,"line_end":181,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":393}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":21680,"byte_end":21685,"line_start":222,"line_end":222,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":396}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":21833,"byte_end":21842,"line_start":228,"line_end":228,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":25835,"byte_end":25839,"line_start":330,"line_end":330,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":401}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":25987,"byte_end":25991,"line_start":336,"line_end":336,"column_start":14,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":403}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":26135,"byte_end":26139,"line_start":342,"line_end":342,"column_start":21,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":405}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":26780,"byte_end":26788,"line_start":363,"line_end":363,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":407}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":27016,"byte_end":27024,"line_start":373,"line_end":373,"column_start":14,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":409}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":27145,"byte_end":27153,"line_start":379,"line_end":379,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":411}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":27266,"byte_end":27270,"line_start":385,"line_end":385,"column_start":6,"column_end":10},"value":"","parent":null,"children":[{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":415},{"krate":0,"index":416},{"krate":0,"index":417},{"krate":0,"index":418}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":28346,"byte_end":28354,"line_start":420,"line_end":420,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":420}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":30963,"byte_end":30966,"line_start":493,"line_end":493,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":422},{"krate":0,"index":423},{"krate":0,"index":424}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":32574,"byte_end":32577,"line_start":544,"line_end":544,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":426}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":32970,"byte_end":32981,"line_start":560,"line_end":560,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":431}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":33709,"byte_end":33715,"line_start":584,"line_end":584,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":433}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":34667,"byte_end":34674,"line_start":614,"line_end":614,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":435}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":37282,"byte_end":37296,"line_start":691,"line_end":691,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":437}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":38152,"byte_end":38157,"line_start":717,"line_end":717,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":439}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39848,"byte_end":39862,"line_start":796,"line_end":796,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":441}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":41650,"byte_end":41662,"line_start":845,"line_end":845,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":444}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":43172,"byte_end":43190,"line_start":892,"line_end":892,"column_start":6,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":44453,"byte_end":44461,"line_start":930,"line_end":930,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":448},{"krate":0,"index":449},{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":46053,"byte_end":46065,"line_start":980,"line_end":980,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":452}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":46897,"byte_end":46910,"line_start":1007,"line_end":1007,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":454}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":47496,"byte_end":47509,"line_start":1027,"line_end":1027,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":456},{"krate":0,"index":457}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":51487,"byte_end":51502,"line_start":1164,"line_end":1164,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":459}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":52389,"byte_end":52394,"line_start":1193,"line_end":1193,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":461},{"krate":0,"index":462},{"krate":0,"index":463}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":54608,"byte_end":54613,"line_start":1269,"line_end":1269,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":465},{"krate":0,"index":466}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":56379,"byte_end":56392,"line_start":1330,"line_end":1330,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":57034,"byte_end":57037,"line_start":1359,"line_end":1359,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":470}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":58889,"byte_end":58897,"line_start":1409,"line_end":1409,"column_start":15,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":477}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/error.rs","byte_start":305137,"byte_end":305142,"line_start":30,"line_end":30,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":506}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/error.rs","byte_start":305246,"byte_end":305251,"line_start":36,"line_end":36,"column_start":27,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/error.rs","byte_start":305355,"byte_end":305360,"line_start":42,"line_end":42,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":510}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/error.rs","byte_start":305706,"byte_end":305711,"line_start":54,"line_end":54,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":512}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/error.rs","byte_start":306712,"byte_end":306721,"line_start":82,"line_end":82,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":515}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/error.rs","byte_start":306999,"byte_end":307008,"line_start":93,"line_end":93,"column_start":35,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/error.rs","byte_start":307279,"byte_end":307288,"line_start":104,"line_end":104,"column_start":44,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":522}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/error.rs","byte_start":310079,"byte_end":310084,"line_start":169,"line_end":169,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":531},{"krate":0,"index":534},{"krate":0,"index":535},{"krate":0,"index":536},{"krate":0,"index":537},{"krate":0,"index":538}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/interval.rs","byte_start":399621,"byte_end":399632,"line_start":40,"line_end":40,"column_start":19,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":606},{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617},{"krate":0,"index":618}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/interval.rs","byte_start":411141,"byte_end":411156,"line_start":327,"line_end":327,"column_start":26,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":622},{"krate":0,"index":623}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":418930,"byte_end":418938,"line_start":51,"line_end":51,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":684},{"krate":0,"index":685},{"krate":0,"index":686},{"krate":0,"index":687},{"krate":0,"index":688},{"krate":0,"index":689},{"krate":0,"index":690},{"krate":0,"index":691},{"krate":0,"index":692},{"krate":0,"index":693},{"krate":0,"index":695},{"krate":0,"index":697},{"krate":0,"index":699},{"krate":0,"index":701},{"krate":0,"index":702},{"krate":0,"index":704},{"krate":0,"index":706},{"krate":0,"index":708},{"krate":0,"index":710},{"krate":0,"index":711},{"krate":0,"index":712},{"krate":0,"index":713},{"krate":0,"index":714},{"krate":0,"index":716},{"krate":0,"index":717},{"krate":0,"index":718},{"krate":0,"index":719},{"krate":0,"index":720},{"krate":0,"index":724},{"krate":0,"index":726},{"krate":0,"index":727},{"krate":0,"index":728},{"krate":0,"index":729},{"krate":0,"index":730},{"krate":0,"index":732}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":445690,"byte_end":445698,"line_start":838,"line_end":838,"column_start":21,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":750}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":445978,"byte_end":445985,"line_start":848,"line_end":848,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":752},{"krate":0,"index":753},{"krate":0,"index":754},{"krate":0,"index":755}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":446483,"byte_end":446490,"line_start":870,"line_end":870,"column_start":20,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":757}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":446592,"byte_end":446599,"line_start":876,"line_end":876,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":759}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":446738,"byte_end":446745,"line_start":882,"line_end":882,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":761}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":447016,"byte_end":447023,"line_start":892,"line_end":892,"column_start":22,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":763}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":447103,"byte_end":447110,"line_start":898,"line_end":898,"column_start":21,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":765},{"krate":0,"index":766}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":447222,"byte_end":447229,"line_start":905,"line_end":905,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":768}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/print.rs","byte_start":473844,"byte_end":473858,"line_start":20,"line_end":20,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":805}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/print.rs","byte_start":473942,"byte_end":473956,"line_start":26,"line_end":26,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":807},{"krate":0,"index":808}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/print.rs","byte_start":475031,"byte_end":475038,"line_start":57,"line_end":57,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":810},{"krate":0,"index":811}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/print.rs","byte_start":475636,"byte_end":475642,"line_start":77,"line_end":77,"column_start":33,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":815},{"krate":0,"index":816},{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/print.rs","byte_start":480568,"byte_end":480574,"line_start":211,"line_end":211,"column_start":21,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":485527,"byte_end":485544,"line_start":21,"line_end":21,"column_start":18,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":873}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":485634,"byte_end":485651,"line_start":27,"line_end":27,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":875},{"krate":0,"index":876},{"krate":0,"index":877},{"krate":0,"index":878},{"krate":0,"index":879},{"krate":0,"index":880},{"krate":0,"index":881},{"krate":0,"index":882}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":488790,"byte_end":488800,"line_start":114,"line_end":114,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":884},{"krate":0,"index":885}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":492010,"byte_end":492018,"line_start":186,"line_end":186,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":887},{"krate":0,"index":888},{"krate":0,"index":889},{"krate":0,"index":890}],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":493521,"byte_end":493532,"line_start":234,"line_end":234,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":894},{"krate":0,"index":895},{"krate":0,"index":896},{"krate":0,"index":897},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902},{"krate":0,"index":903},{"krate":0,"index":904},{"krate":0,"index":905}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":507473,"byte_end":507484,"line_start":589,"line_end":589,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":912},{"krate":0,"index":913},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":916},{"krate":0,"index":917},{"krate":0,"index":918},{"krate":0,"index":919},{"krate":0,"index":920},{"krate":0,"index":921},{"krate":0,"index":922},{"krate":0,"index":925},{"krate":0,"index":926},{"krate":0,"index":927},{"krate":0,"index":928},{"krate":0,"index":929},{"krate":0,"index":931},{"krate":0,"index":933},{"krate":0,"index":935},{"krate":0,"index":937},{"krate":0,"index":939},{"krate":0,"index":941},{"krate":0,"index":943},{"krate":0,"index":944}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":522593,"byte_end":522598,"line_start":1017,"line_end":1017,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":946},{"krate":0,"index":947},{"krate":0,"index":948},{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":951},{"krate":0,"index":952}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":597963,"byte_end":597974,"line_start":98,"line_end":98,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":997},{"krate":0,"index":998},{"krate":0,"index":1000},{"krate":0,"index":1001}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":601329,"byte_end":601334,"line_start":192,"line_end":192,"column_start":10,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1004}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":316077,"byte_end":316082,"line_start":36,"line_end":36,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1006},{"krate":0,"index":1007},{"krate":0,"index":1008}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":318178,"byte_end":318187,"line_start":93,"line_end":93,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1010}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":319196,"byte_end":319201,"line_start":117,"line_end":117,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1013}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":319406,"byte_end":319411,"line_start":125,"line_end":125,"column_start":23,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1015}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":319559,"byte_end":319568,"line_start":131,"line_end":131,"column_start":23,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1017}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":323457,"byte_end":323460,"line_start":217,"line_end":217,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":1019},{"krate":0,"index":1020},{"krate":0,"index":1024},{"krate":0,"index":1025},{"krate":0,"index":1026},{"krate":0,"index":1027},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1030},{"krate":0,"index":1031},{"krate":0,"index":1040},{"krate":0,"index":1041},{"krate":0,"index":1042},{"krate":0,"index":1043},{"krate":0,"index":1044},{"krate":0,"index":1045},{"krate":0,"index":1046},{"krate":0,"index":1047},{"krate":0,"index":1048},{"krate":0,"index":1049},{"krate":0,"index":1050},{"krate":0,"index":1051},{"krate":0,"index":1052},{"krate":0,"index":1053}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":343043,"byte_end":343050,"line_start":697,"line_end":697,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1055},{"krate":0,"index":1056}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":344259,"byte_end":344262,"line_start":733,"line_end":733,"column_start":23,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1058}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":344992,"byte_end":344999,"line_start":754,"line_end":754,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1063}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":346472,"byte_end":346477,"line_start":791,"line_end":791,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1067}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":348247,"byte_end":348259,"line_start":841,"line_end":841,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1069},{"krate":0,"index":1071},{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1075},{"krate":0,"index":1076},{"krate":0,"index":1077},{"krate":0,"index":1078},{"krate":0,"index":1079},{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1082}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":352666,"byte_end":352682,"line_start":960,"line_end":960,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1086},{"krate":0,"index":1087}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":353139,"byte_end":353156,"line_start":978,"line_end":978,"column_start":21,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1089}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":353767,"byte_end":353784,"line_start":998,"line_end":998,"column_start":19,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1091},{"krate":0,"index":1092},{"krate":0,"index":1093},{"krate":0,"index":1094},{"krate":0,"index":1095},{"krate":0,"index":1096}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":355258,"byte_end":355275,"line_start":1051,"line_end":1051,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1099},{"krate":0,"index":1100},{"krate":0,"index":1101}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":356231,"byte_end":356241,"line_start":1084,"line_end":1084,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1103},{"krate":0,"index":1105},{"krate":0,"index":1106},{"krate":0,"index":1107},{"krate":0,"index":1108},{"krate":0,"index":1109},{"krate":0,"index":1110},{"krate":0,"index":1111},{"krate":0,"index":1112},{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1115}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":359563,"byte_end":359577,"line_start":1177,"line_end":1177,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":1119},{"krate":0,"index":1120}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":360016,"byte_end":360031,"line_start":1195,"line_end":1195,"column_start":19,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1122},{"krate":0,"index":1123},{"krate":0,"index":1124},{"krate":0,"index":1125},{"krate":0,"index":1126},{"krate":0,"index":1127}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":361285,"byte_end":361300,"line_start":1238,"line_end":1238,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1129},{"krate":0,"index":1130},{"krate":0,"index":1131}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":362032,"byte_end":362047,"line_start":1264,"line_end":1264,"column_start":21,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1133}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":364213,"byte_end":364225,"line_start":1321,"line_end":1321,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1135}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":366389,"byte_end":366399,"line_start":1386,"line_end":1386,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1137}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":368316,"byte_end":368319,"line_start":1434,"line_end":1434,"column_start":15,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1139}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":370674,"byte_end":370681,"line_start":1506,"line_end":1506,"column_start":6,"column_end":13},"value":"","parent":null,"children":[{"krate":0,"index":1145},{"krate":0,"index":3389},{"krate":0,"index":3390},{"krate":0,"index":3391},{"krate":0,"index":3392},{"krate":0,"index":3393},{"krate":0,"index":3394},{"krate":0,"index":3395},{"krate":0,"index":3396},{"krate":0,"index":3397},{"krate":0,"index":3398},{"krate":0,"index":3399},{"krate":0,"index":3400},{"krate":0,"index":3401},{"krate":0,"index":3402},{"krate":0,"index":3403},{"krate":0,"index":3404},{"krate":0,"index":3405},{"krate":0,"index":3406},{"krate":0,"index":3407},{"krate":0,"index":3408},{"krate":0,"index":3409},{"krate":0,"index":3410}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":602254,"byte_end":602267,"line_start":20,"line_end":20,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1157},{"krate":0,"index":1158},{"krate":0,"index":1159},{"krate":0,"index":1160},{"krate":0,"index":1161},{"krate":0,"index":1162},{"krate":0,"index":1163},{"krate":0,"index":1164},{"krate":0,"index":1165},{"krate":0,"index":1166},{"krate":0,"index":1167}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":609275,"byte_end":609281,"line_start":180,"line_end":180,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":1169},{"krate":0,"index":1170}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/unicode.rs","byte_start":611159,"byte_end":611172,"line_start":38,"line_end":38,"column_start":23,"column_end":36},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/unicode.rs","byte_start":611199,"byte_end":611212,"line_start":40,"line_end":40,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":1191}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/unicode.rs","byte_start":611840,"byte_end":611856,"line_start":58,"line_end":58,"column_start":23,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/unicode.rs","byte_start":611883,"byte_end":611899,"line_start":60,"line_end":60,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":1194}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/unicode.rs","byte_start":616356,"byte_end":616366,"line_start":187,"line_end":187,"column_start":10,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1216},{"krate":0,"index":1217}],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1387997,"byte_end":1388009,"line_start":111,"line_end":111,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1847},{"krate":0,"index":1848},{"krate":0,"index":1850},{"krate":0,"index":1851},{"krate":0,"index":1852}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1390855,"byte_end":1390867,"line_start":205,"line_end":205,"column_start":21,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1859}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1391551,"byte_end":1391560,"line_start":228,"line_end":228,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1862},{"krate":0,"index":1863}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1391826,"byte_end":1391835,"line_start":239,"line_end":239,"column_start":21,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1865}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1394160,"byte_end":1394173,"line_start":304,"line_end":304,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1867},{"krate":0,"index":1868},{"krate":0,"index":1869}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1394967,"byte_end":1394978,"line_start":333,"line_end":333,"column_start":21,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1874}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1395138,"byte_end":1395151,"line_start":339,"line_end":339,"column_start":19,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1876},{"krate":0,"index":1877}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1397131,"byte_end":1397144,"line_start":393,"line_end":393,"column_start":24,"column_end":37},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Inherent","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1397154,"byte_end":1397165,"line_start":395,"line_end":395,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1882},{"krate":0,"index":1883},{"krate":0,"index":1884},{"krate":0,"index":1885},{"krate":0,"index":1886}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":7355,"byte_end":7358,"line_start":165,"line_end":165,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":20}},{"kind":"Mod","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":12262,"byte_end":12267,"line_start":11,"line_end":11,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":37}},{"kind":"Mod","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":12277,"byte_end":12282,"line_start":12,"line_end":12,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":213}},{"kind":"Mod","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":7391,"byte_end":7394,"line_start":168,"line_end":168,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":540}},{"kind":"Mod","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":315586,"byte_end":315593,"line_start":19,"line_end":19,"column_start":9,"column_end":16},"ref_id":{"krate":0,"index":657}},{"kind":"Mod","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":315603,"byte_end":315608,"line_start":20,"line_end":20,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":780}},{"kind":"Mod","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":315618,"byte_end":315627,"line_start":21,"line_end":21,"column_start":9,"column_end":18},"ref_id":{"krate":0,"index":826}},{"kind":"Mod","span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/lib.rs","byte_start":7449,"byte_end":7453,"line_start":172,"line_end":172,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1832}}],"macro_refs":[],"relations":[{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":62911,"byte_end":62920,"line_start":32,"line_end":32,"column_start":6,"column_end":15},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":1894},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":65860,"byte_end":65873,"line_start":120,"line_end":120,"column_start":18,"column_end":31},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":1921},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":65955,"byte_end":65968,"line_start":126,"line_end":126,"column_start":6,"column_end":19},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":1921},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":74508,"byte_end":74514,"line_start":324,"line_end":324,"column_start":6,"column_end":12},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":1929},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":76100,"byte_end":76107,"line_start":366,"line_end":366,"column_start":29,"column_end":36},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":1945},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":98377,"byte_end":98384,"line_start":949,"line_end":949,"column_start":29,"column_end":36},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":1945},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":143070,"byte_end":143081,"line_start":2135,"line_end":2135,"column_start":33,"column_end":44},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":1981},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/parse.rs","byte_start":144096,"byte_end":144107,"line_start":2170,"line_end":2170,"column_start":50,"column_end":61},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":1981},"to":{"krate":0,"index":299}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/print.rs","byte_start":267750,"byte_end":267764,"line_start":19,"line_end":19,"column_start":18,"column_end":32},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":1992},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/print.rs","byte_start":267848,"byte_end":267862,"line_start":25,"line_end":25,"column_start":6,"column_end":20},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":1992},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/print.rs","byte_start":268522,"byte_end":268529,"line_start":49,"line_end":49,"column_start":6,"column_end":13},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":1998},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/print.rs","byte_start":269127,"byte_end":269133,"line_start":69,"line_end":69,"column_start":33,"column_end":39},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":2002},"to":{"krate":0,"index":299}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/print.rs","byte_start":271730,"byte_end":271736,"line_start":155,"line_end":155,"column_start":21,"column_end":27},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":2002},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":292648,"byte_end":292659,"line_start":201,"line_end":201,"column_start":10,"column_end":21},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":314},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":301028,"byte_end":301033,"line_start":435,"line_end":435,"column_start":10,"column_end":15},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":318},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":301426,"byte_end":301436,"line_start":448,"line_end":448,"column_start":10,"column_end":20},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":332},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":302010,"byte_end":302021,"line_start":465,"line_end":465,"column_start":10,"column_end":21},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":346},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":302418,"byte_end":302428,"line_start":478,"line_end":478,"column_start":25,"column_end":35},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":332},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/visitor.rs","byte_start":302813,"byte_end":302824,"line_start":490,"line_end":490,"column_start":25,"column_end":36},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":346},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":13023,"byte_end":13028,"line_start":33,"line_end":33,"column_start":6,"column_end":11},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":2008},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":19470,"byte_end":19475,"line_start":181,"line_end":181,"column_start":23,"column_end":28},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":2008},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":21680,"byte_end":21685,"line_start":222,"line_end":222,"column_start":23,"column_end":28},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":2008},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":21833,"byte_end":21842,"line_start":228,"line_end":228,"column_start":23,"column_end":32},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":2023},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":25835,"byte_end":25839,"line_start":330,"line_end":330,"column_start":21,"column_end":25},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":2100},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":25987,"byte_end":25991,"line_start":336,"line_end":336,"column_start":14,"column_end":18},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":2100},"to":{"krate":2,"index":2951}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":26135,"byte_end":26139,"line_start":342,"line_end":342,"column_start":21,"column_end":25},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":2100},"to":{"krate":2,"index":2961}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":26780,"byte_end":26788,"line_start":363,"line_end":363,"column_start":21,"column_end":29},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":2113},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":27016,"byte_end":27024,"line_start":373,"line_end":373,"column_start":14,"column_end":22},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":2113},"to":{"krate":2,"index":2951}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":27145,"byte_end":27153,"line_start":379,"line_end":379,"column_start":21,"column_end":29},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":2113},"to":{"krate":2,"index":2961}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":27266,"byte_end":27270,"line_start":385,"line_end":385,"column_start":6,"column_end":10},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":2100},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":28346,"byte_end":28354,"line_start":420,"line_end":420,"column_start":6,"column_end":14},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":2113},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":30963,"byte_end":30966,"line_start":493,"line_end":493,"column_start":6,"column_end":9},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":2155},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":32574,"byte_end":32577,"line_start":544,"line_end":544,"column_start":23,"column_end":26},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":2155},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":32970,"byte_end":32981,"line_start":560,"line_end":560,"column_start":6,"column_end":17},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":2197},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":33709,"byte_end":33715,"line_start":584,"line_end":584,"column_start":6,"column_end":12},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":2211},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":34667,"byte_end":34674,"line_start":614,"line_end":614,"column_start":6,"column_end":13},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":2225},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":37282,"byte_end":37296,"line_start":691,"line_end":691,"column_start":6,"column_end":20},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":2292},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":38152,"byte_end":38157,"line_start":717,"line_end":717,"column_start":6,"column_end":11},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":2309},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":39848,"byte_end":39862,"line_start":796,"line_end":796,"column_start":6,"column_end":20},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":2377},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":41650,"byte_end":41662,"line_start":845,"line_end":845,"column_start":6,"column_end":18},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":2416},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":43172,"byte_end":43190,"line_start":892,"line_end":892,"column_start":6,"column_end":24},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":2453},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":44453,"byte_end":44461,"line_start":930,"line_end":930,"column_start":6,"column_end":14},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":2485},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":46053,"byte_end":46065,"line_start":980,"line_end":980,"column_start":6,"column_end":18},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":2503},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":46897,"byte_end":46910,"line_start":1007,"line_end":1007,"column_start":6,"column_end":19},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":2539},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":47496,"byte_end":47509,"line_start":1027,"line_end":1027,"column_start":6,"column_end":19},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":2554},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":51487,"byte_end":51502,"line_start":1164,"line_end":1164,"column_start":6,"column_end":21},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":2690},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":52389,"byte_end":52394,"line_start":1193,"line_end":1193,"column_start":6,"column_end":11},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":2712},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":54608,"byte_end":54613,"line_start":1269,"line_end":1269,"column_start":6,"column_end":11},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":2777},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":56379,"byte_end":56392,"line_start":1330,"line_end":1330,"column_start":6,"column_end":19},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":2805},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":57034,"byte_end":57037,"line_start":1359,"line_end":1359,"column_start":15,"column_end":18},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":2155},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/ast/mod.rs","byte_start":58889,"byte_end":58897,"line_start":1409,"line_end":1409,"column_start":15,"column_end":23},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":2485},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/error.rs","byte_start":305137,"byte_end":305142,"line_start":30,"line_end":30,"column_start":27,"column_end":32},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":2878},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/error.rs","byte_start":305246,"byte_end":305251,"line_start":36,"line_end":36,"column_start":27,"column_end":32},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":2878},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/error.rs","byte_start":305355,"byte_end":305360,"line_start":42,"line_end":42,"column_start":23,"column_end":28},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":2878},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/error.rs","byte_start":305706,"byte_end":305711,"line_start":54,"line_end":54,"column_start":23,"column_end":28},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":2878},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/error.rs","byte_start":306712,"byte_end":306721,"line_start":82,"line_end":82,"column_start":35,"column_end":44},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":2898},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/error.rs","byte_start":306999,"byte_end":307008,"line_start":93,"line_end":93,"column_start":35,"column_end":44},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":2898},"to":{"krate":2,"index":3169}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/error.rs","byte_start":307279,"byte_end":307288,"line_start":104,"line_end":104,"column_start":44,"column_end":53},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":2898},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/error.rs","byte_start":310079,"byte_end":310084,"line_start":169,"line_end":169,"column_start":10,"column_end":15},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":523},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/interval.rs","byte_start":399621,"byte_end":399632,"line_start":40,"line_end":40,"column_start":19,"column_end":30},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":2909},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/interval.rs","byte_start":411141,"byte_end":411156,"line_start":327,"line_end":327,"column_start":26,"column_end":41},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":2929},"to":{"krate":2,"index":8596}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/interval.rs","byte_start":411287,"byte_end":411292,"line_start":336,"line_end":336,"column_start":5,"column_end":10},"kind":"SuperTrait","from":{"krate":2,"index":2882},"to":{"krate":0,"index":624}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/interval.rs","byte_start":411295,"byte_end":411299,"line_start":336,"line_end":336,"column_start":13,"column_end":17},"kind":"SuperTrait","from":{"krate":2,"index":3273},"to":{"krate":0,"index":624}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/interval.rs","byte_start":411302,"byte_end":411307,"line_start":336,"line_end":336,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":10288},"to":{"krate":0,"index":624}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/interval.rs","byte_start":411310,"byte_end":411317,"line_start":336,"line_end":336,"column_start":28,"column_end":35},"kind":"SuperTrait","from":{"krate":2,"index":3241},"to":{"krate":0,"index":624}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/interval.rs","byte_start":411320,"byte_end":411322,"line_start":336,"line_end":336,"column_start":38,"column_end":40},"kind":"SuperTrait","from":{"krate":2,"index":2920},"to":{"krate":0,"index":624}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/interval.rs","byte_start":411325,"byte_end":411334,"line_start":336,"line_end":336,"column_start":43,"column_end":52},"kind":"SuperTrait","from":{"krate":2,"index":2915},"to":{"krate":0,"index":624}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/interval.rs","byte_start":411337,"byte_end":411347,"line_start":336,"line_end":336,"column_start":55,"column_end":65},"kind":"SuperTrait","from":{"krate":2,"index":2961},"to":{"krate":0,"index":624}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/interval.rs","byte_start":411350,"byte_end":411353,"line_start":336,"line_end":336,"column_start":68,"column_end":71},"kind":"SuperTrait","from":{"krate":2,"index":2951},"to":{"krate":0,"index":624}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/interval.rs","byte_start":415952,"byte_end":415956,"line_start":467,"line_end":467,"column_start":5,"column_end":9},"kind":"SuperTrait","from":{"krate":2,"index":3273},"to":{"krate":0,"index":639}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/interval.rs","byte_start":415959,"byte_end":415964,"line_start":467,"line_end":467,"column_start":12,"column_end":17},"kind":"SuperTrait","from":{"krate":2,"index":2882},"to":{"krate":0,"index":639}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/interval.rs","byte_start":415967,"byte_end":415972,"line_start":467,"line_end":467,"column_start":20,"column_end":25},"kind":"SuperTrait","from":{"krate":2,"index":10288},"to":{"krate":0,"index":639}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/interval.rs","byte_start":415975,"byte_end":415977,"line_start":467,"line_end":467,"column_start":28,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2920},"to":{"krate":0,"index":639}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/interval.rs","byte_start":415980,"byte_end":415989,"line_start":467,"line_end":467,"column_start":33,"column_end":42},"kind":"SuperTrait","from":{"krate":2,"index":2915},"to":{"krate":0,"index":639}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/interval.rs","byte_start":415992,"byte_end":416002,"line_start":467,"line_end":467,"column_start":45,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":2961},"to":{"krate":0,"index":639}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/interval.rs","byte_start":416005,"byte_end":416008,"line_start":467,"line_end":467,"column_start":58,"column_end":61},"kind":"SuperTrait","from":{"krate":2,"index":2951},"to":{"krate":0,"index":639}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":418930,"byte_end":418938,"line_start":51,"line_end":51,"column_start":6,"column_end":14},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":2938},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":445690,"byte_end":445698,"line_start":838,"line_end":838,"column_start":21,"column_end":29},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":2938},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":445978,"byte_end":445985,"line_start":848,"line_end":848,"column_start":6,"column_end":13},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":2951},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":446483,"byte_end":446490,"line_start":870,"line_end":870,"column_start":20,"column_end":27},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":2951},"to":{"krate":2,"index":2915}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":446592,"byte_end":446599,"line_start":876,"line_end":876,"column_start":21,"column_end":28},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":2951},"to":{"krate":2,"index":2961}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":446738,"byte_end":446745,"line_start":882,"line_end":882,"column_start":21,"column_end":28},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":2951},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":447016,"byte_end":447023,"line_start":892,"line_end":892,"column_start":22,"column_end":29},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":2951},"to":{"krate":2,"index":3160}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":447103,"byte_end":447110,"line_start":898,"line_end":898,"column_start":21,"column_end":28},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":2951},"to":{"krate":2,"index":3486}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/literal/mod.rs","byte_start":447222,"byte_end":447229,"line_start":905,"line_end":905,"column_start":24,"column_end":31},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":2951},"to":{"krate":2,"index":3499}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/print.rs","byte_start":473844,"byte_end":473858,"line_start":20,"line_end":20,"column_start":18,"column_end":32},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":2961},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/print.rs","byte_start":473942,"byte_end":473956,"line_start":26,"line_end":26,"column_start":6,"column_end":20},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":2961},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/print.rs","byte_start":475031,"byte_end":475038,"line_start":57,"line_end":57,"column_start":6,"column_end":13},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":2967},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/print.rs","byte_start":475636,"byte_end":475642,"line_start":77,"line_end":77,"column_start":33,"column_end":39},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":2971},"to":{"krate":0,"index":968}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/print.rs","byte_start":480568,"byte_end":480574,"line_start":211,"line_end":211,"column_start":21,"column_end":27},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":2971},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":485527,"byte_end":485544,"line_start":21,"line_end":21,"column_start":18,"column_end":35},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":2977},"to":{"krate":2,"index":3241}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":485634,"byte_end":485651,"line_start":27,"line_end":27,"column_start":6,"column_end":23},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":2977},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":488790,"byte_end":488800,"line_start":114,"line_end":114,"column_start":6,"column_end":16},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":2984},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":492010,"byte_end":492018,"line_start":186,"line_end":186,"column_start":6,"column_end":14},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":2992},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":493521,"byte_end":493532,"line_start":234,"line_end":234,"column_start":26,"column_end":37},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":3012},"to":{"krate":0,"index":299}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":507473,"byte_end":507484,"line_start":589,"line_end":589,"column_start":14,"column_end":25},"kind":{"Impl":{"id":82}},"from":{"krate":0,"index":3012},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/translate.rs","byte_start":522593,"byte_end":522598,"line_start":1017,"line_end":1017,"column_start":6,"column_end":11},"kind":{"Impl":{"id":83}},"from":{"krate":0,"index":3025},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":597963,"byte_end":597974,"line_start":98,"line_end":98,"column_start":10,"column_end":21},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":978},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/visitor.rs","byte_start":601329,"byte_end":601334,"line_start":192,"line_end":192,"column_start":10,"column_end":15},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":981},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":316077,"byte_end":316082,"line_start":36,"line_end":36,"column_start":6,"column_end":11},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":3038},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":318178,"byte_end":318187,"line_start":93,"line_end":93,"column_start":6,"column_end":15},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":3053},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":319196,"byte_end":319201,"line_start":117,"line_end":117,"column_start":23,"column_end":28},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":3038},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":319406,"byte_end":319411,"line_start":125,"line_end":125,"column_start":23,"column_end":28},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":3038},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":319559,"byte_end":319568,"line_start":131,"line_end":131,"column_start":23,"column_end":32},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":3053},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":323457,"byte_end":323460,"line_start":217,"line_end":217,"column_start":6,"column_end":9},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":3080},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":343043,"byte_end":343050,"line_start":697,"line_end":697,"column_start":6,"column_end":13},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":3094},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":344259,"byte_end":344262,"line_start":733,"line_end":733,"column_start":23,"column_end":26},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":3080},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":344992,"byte_end":344999,"line_start":754,"line_end":754,"column_start":6,"column_end":13},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":3132},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":346472,"byte_end":346477,"line_start":791,"line_end":791,"column_start":6,"column_end":11},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":3150},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":348247,"byte_end":348259,"line_start":841,"line_end":841,"column_start":6,"column_end":18},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":3168},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":352666,"byte_end":352682,"line_start":960,"line_end":960,"column_start":23,"column_end":39},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":3181},"to":{"krate":2,"index":8596}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":353139,"byte_end":353156,"line_start":978,"line_end":978,"column_start":21,"column_end":38},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":3188},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":353767,"byte_end":353784,"line_start":998,"line_end":998,"column_start":19,"column_end":36},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":3188},"to":{"krate":0,"index":624}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":355258,"byte_end":355275,"line_start":1051,"line_end":1051,"column_start":6,"column_end":23},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":3188},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":356231,"byte_end":356241,"line_start":1084,"line_end":1084,"column_start":6,"column_end":16},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":3207},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":359563,"byte_end":359577,"line_start":1177,"line_end":1177,"column_start":23,"column_end":37},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":3220},"to":{"krate":2,"index":8596}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":360016,"byte_end":360031,"line_start":1195,"line_end":1195,"column_start":19,"column_end":34},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":3227},"to":{"krate":0,"index":624}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":361285,"byte_end":361300,"line_start":1238,"line_end":1238,"column_start":6,"column_end":21},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":3227},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":362032,"byte_end":362047,"line_start":1264,"line_end":1264,"column_start":21,"column_end":36},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":3227},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":364213,"byte_end":364225,"line_start":1321,"line_end":1321,"column_start":6,"column_end":18},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":3265},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":366389,"byte_end":366399,"line_start":1386,"line_end":1386,"column_start":6,"column_end":16},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":3318},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":368316,"byte_end":368319,"line_start":1434,"line_end":1434,"column_start":15,"column_end":18},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":3080},"to":{"krate":2,"index":3510}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/hir/mod.rs","byte_start":370674,"byte_end":370681,"line_start":1506,"line_end":1506,"column_start":6,"column_end":13},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":3376},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":602254,"byte_end":602267,"line_start":20,"line_end":20,"column_start":6,"column_end":19},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":3411},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/parser.rs","byte_start":609275,"byte_end":609281,"line_start":180,"line_end":180,"column_start":6,"column_end":12},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":3420},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/unicode.rs","byte_start":611159,"byte_end":611172,"line_start":38,"line_end":38,"column_start":23,"column_end":36},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":3436},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/unicode.rs","byte_start":611199,"byte_end":611212,"line_start":40,"line_end":40,"column_start":23,"column_end":36},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":3436},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/unicode.rs","byte_start":611840,"byte_end":611856,"line_start":58,"line_end":58,"column_start":23,"column_end":39},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":3441},"to":{"krate":1,"index":2576}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/unicode.rs","byte_start":611883,"byte_end":611899,"line_start":60,"line_end":60,"column_start":23,"column_end":39},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":3441},"to":{"krate":2,"index":10295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/unicode.rs","byte_start":616356,"byte_end":616366,"line_start":187,"line_end":187,"column_start":10,"column_end":20},"kind":{"Impl":{"id":116}},"from":{"krate":0,"index":3446},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1387997,"byte_end":1388009,"line_start":111,"line_end":111,"column_start":6,"column_end":18},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":3482},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1390855,"byte_end":1390867,"line_start":205,"line_end":205,"column_start":21,"column_end":33},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":3482},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1391551,"byte_end":1391560,"line_start":228,"line_end":228,"column_start":6,"column_end":15},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":3518},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1391826,"byte_end":1391835,"line_start":239,"line_end":239,"column_start":21,"column_end":30},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":3518},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1394160,"byte_end":1394173,"line_start":304,"line_end":304,"column_start":6,"column_end":19},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":3535},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1394967,"byte_end":1394978,"line_start":333,"line_end":333,"column_start":21,"column_end":32},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1870},"to":{"krate":2,"index":10288}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1395138,"byte_end":1395151,"line_start":339,"line_end":339,"column_start":19,"column_end":32},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":3535},"to":{"krate":2,"index":8596}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1397131,"byte_end":1397144,"line_start":393,"line_end":393,"column_start":24,"column_end":37},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":3535},"to":{"krate":2,"index":8874}},{"span":{"file_name":"/Users/lsales/.cargo/registry/src/github.com-1ecc6299db9ec823/regex-syntax-0.6.27/src/utf8.rs","byte_start":1397154,"byte_end":1397165,"line_start":395,"line_end":395,"column_start":6,"column_end":17},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":1870},"to":{"krate":4294967295,"index":4294967295}}]}